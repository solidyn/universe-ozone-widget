Detector={canvas:!!window.CanvasRenderingContext2D,webgl:(function(){try{return !!window.WebGLRenderingContext&&!!document.createElement("canvas").getContext("experimental-webgl")}catch(a){return false}})(),workers:!!window.Worker,fileapi:window.File&&window.FileReader&&window.FileList&&window.Blob,getWebGLErrorMessage:function(){var a=document.createElement("div");a.style.fontFamily="monospace";a.style.fontSize="13px";a.style.textAlign="center";a.style.background="#eee";a.style.color="#000";a.style.padding="1em";a.style.width="475px";a.style.margin="5em auto 0";if(!this.webgl){a.innerHTML=window.WebGLRenderingContext?['Sorry, your graphics card doesn\'t support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation">WebGL</a>'].join("\n"):['Sorry, your browser doesn\'t support <a href="http://khronos.org/webgl/wiki/Getting_a_WebGL_Implementation">WebGL</a><br/>',"Please try with",'<a href="http://www.google.com/chrome">Chrome</a>, ','<a href="http://www.mozilla.com/en-US/firefox/new/">Firefox 4</a> or','<a href="http://nightly.webkit.org/">Webkit Nightly (Mac)</a>'].join("\n")}return a},addGetWebGLMessage:function(b){var a,d,c;b=b||{};a=b.parent!==undefined?b.parent:document.body;d=b.id!==undefined?b.id:"oldie";c=Detector.getWebGLErrorMessage();c.id=d;a.appendChild(c)}};"use strict";var THREE=THREE||{REVISION:"54"};self.console=self.console||{info:function(){},log:function(){},debug:function(){},warn:function(){},error:function(){}};self.Int32Array=self.Int32Array||Array;self.Float32Array=self.Float32Array||Array;String.prototype.startsWith=String.prototype.startsWith||function(b){return this.slice(0,b.length)===b};String.prototype.endsWith=String.prototype.endsWith||function(d){var d=String(d),c=this.lastIndexOf(d);return(-1<c&&c)===this.length-d.length};String.prototype.trim=String.prototype.trim||function(){return this.replace(/^\s+|\s+$/g,"")};(function(){for(var e=0,d=["ms","moz","webkit","o"],f=0;f<d.length&&!window.requestAnimationFrame;++f){window.requestAnimationFrame=window[d[f]+"RequestAnimationFrame"],window.cancelAnimationFrame=window[d[f]+"CancelAnimationFrame"]||window[d[f]+"CancelRequestAnimationFrame"]}void 0===window.requestAnimationFrame&&(window.requestAnimationFrame=function(a){var j=Date.now(),i=Math.max(0,16-(j-e)),h=window.setTimeout(function(){a(j+i)},i);e=j+i;return h});window.cancelAnimationFrame=window.cancelAnimationFrame||function(b){window.clearTimeout(b)}})();THREE.CullFaceNone=0;THREE.CullFaceBack=1;THREE.CullFaceFront=2;THREE.CullFaceFrontBack=3;THREE.FrontFaceDirectionCW=0;THREE.FrontFaceDirectionCCW=1;THREE.BasicShadowMap=0;THREE.PCFShadowMap=1;THREE.PCFSoftShadowMap=2;THREE.FrontSide=0;THREE.BackSide=1;THREE.DoubleSide=2;THREE.NoShading=0;THREE.FlatShading=1;THREE.SmoothShading=2;THREE.NoColors=0;THREE.FaceColors=1;THREE.VertexColors=2;THREE.NoBlending=0;THREE.NormalBlending=1;THREE.AdditiveBlending=2;THREE.SubtractiveBlending=3;THREE.MultiplyBlending=4;THREE.CustomBlending=5;THREE.AddEquation=100;THREE.SubtractEquation=101;THREE.ReverseSubtractEquation=102;THREE.ZeroFactor=200;THREE.OneFactor=201;THREE.SrcColorFactor=202;THREE.OneMinusSrcColorFactor=203;THREE.SrcAlphaFactor=204;THREE.OneMinusSrcAlphaFactor=205;THREE.DstAlphaFactor=206;THREE.OneMinusDstAlphaFactor=207;THREE.DstColorFactor=208;THREE.OneMinusDstColorFactor=209;THREE.SrcAlphaSaturateFactor=210;THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.AddOperation=2;THREE.UVMapping=function(){};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.RepeatWrapping=1000;THREE.ClampToEdgeWrapping=1001;THREE.MirroredRepeatWrapping=1002;THREE.NearestFilter=1003;THREE.NearestMipMapNearestFilter=1004;THREE.NearestMipMapLinearFilter=1005;THREE.LinearFilter=1006;THREE.LinearMipMapNearestFilter=1007;THREE.LinearMipMapLinearFilter=1008;THREE.UnsignedByteType=1009;THREE.ByteType=1010;THREE.ShortType=1011;THREE.UnsignedShortType=1012;THREE.IntType=1013;THREE.UnsignedIntType=1014;THREE.FloatType=1015;THREE.UnsignedShort4444Type=1016;THREE.UnsignedShort5551Type=1017;THREE.UnsignedShort565Type=1018;THREE.AlphaFormat=1019;THREE.RGBFormat=1020;THREE.RGBAFormat=1021;THREE.LuminanceFormat=1022;THREE.LuminanceAlphaFormat=1023;THREE.RGB_S3TC_DXT1_Format=2001;THREE.RGBA_S3TC_DXT1_Format=2002;THREE.RGBA_S3TC_DXT3_Format=2003;THREE.RGBA_S3TC_DXT5_Format=2004;THREE.Color=function(b){void 0!==b&&this.set(b);return this};THREE.Color.prototype={constructor:THREE.Color,r:1,g:1,b:1,copy:function(b){this.r=b.r;this.g=b.g;this.b=b.b;return this},copyGammaToLinear:function(b){this.r=b.r*b.r;this.g=b.g*b.g;this.b=b.b*b.b;return this},copyLinearToGamma:function(b){this.r=Math.sqrt(b.r);this.g=Math.sqrt(b.g);this.b=Math.sqrt(b.b);return this},convertGammaToLinear:function(){var e=this.r,d=this.g,f=this.b;this.r=e*e;this.g=d*d;this.b=f*f;return this},convertLinearToGamma:function(){this.r=Math.sqrt(this.r);this.g=Math.sqrt(this.g);this.b=Math.sqrt(this.b);return this},set:function(b){switch(typeof b){case"number":this.setHex(b);break;case"string":this.setStyle(b)}},setRGB:function(e,d,f){this.r=e;this.g=d;this.b=f;return this},setHSV:function(h,g,l){var k,j,i;0===l?this.r=this.g=this.b=0:(k=Math.floor(6*h),j=6*h-k,h=l*(1-g),i=l*(1-g*j),g=l*(1-g*(1-j)),0===k?(this.r=l,this.g=g,this.b=h):1===k?(this.r=i,this.g=l,this.b=h):2===k?(this.r=h,this.g=l,this.b=g):3===k?(this.r=h,this.g=i,this.b=l):4===k?(this.r=g,this.g=h,this.b=l):5===k&&(this.r=l,this.g=h,this.b=i));return this},getHex:function(){return 255*this.r<<16^255*this.g<<8^255*this.b<<0},setHex:function(b){b=Math.floor(b);this.r=(b>>16&255)/255;this.g=(b>>8&255)/255;this.b=(b&255)/255;return this},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getStyle:function(){return"rgb("+(255*this.r|0)+","+(255*this.g|0)+","+(255*this.b|0)+")"},setStyle:function(b){if(/^rgb\((\d+),(\d+),(\d+)\)$/i.test(b)){return b=/^rgb\((\d+),(\d+),(\d+)\)$/i.exec(b),this.r=Math.min(255,parseInt(b[1],10))/255,this.g=Math.min(255,parseInt(b[2],10))/255,this.b=Math.min(255,parseInt(b[3],10))/255,this}if(/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.test(b)){return b=/^rgb\((\d+)\%,(\d+)\%,(\d+)\%\)$/i.exec(b),this.r=Math.min(100,parseInt(b[1],10))/100,this.g=Math.min(100,parseInt(b[2],10))/100,this.b=Math.min(100,parseInt(b[3],10))/100,this}if(/^\#([0-9a-f]{6})$/i.test(b)){return b=/^\#([0-9a-f]{6})$/i.exec(b),this.setHex(parseInt(b[1],16)),this}if(/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test(b)){return b=/^\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec(b),this.setHex(parseInt(b[1]+b[1]+b[2]+b[2]+b[3]+b[3],16)),this}if(/^(\w+)$/i.test(b)){return this.setHex(THREE.ColorKeywords[b]),this}},getHSV:function(i){var h=this.r,n=this.g,m=this.b,l=Math.max(Math.max(h,n),m),k=Math.min(Math.min(h,n),m);if(k===l){k=h=0}else{var j=l-k,k=j/l,h=(h===l?(n-m)/j:n===l?2+(m-h)/j:4+(h-n)/j)/6;0>h&&(h+=1);1<h&&(h-=1)}void 0===i&&(i={h:0,s:0,v:0});i.h=h;i.s=k;i.v=l;return i},lerpSelf:function(d,c){this.r+=(d.r-this.r)*c;this.g+=(d.g-this.g)*c;this.b+=(d.b-this.b)*c;return this},clone:function(){return(new THREE.Color).setRGB(this.r,this.g,this.b)}};THREE.ColorKeywords={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};THREE.Vector2=function(d,c){this.x=d||0;this.y=c||0};THREE.Vector2.prototype={constructor:THREE.Vector2,set:function(d,c){this.x=d;this.y=c;return this},setX:function(b){this.x=b;return this},setY:function(b){this.y=b;return this},setComponent:function(d,c){switch(d){case 0:this.x=c;break;case 1:this.y=c;break;default:throw Error("index is out of range: "+d)}},getComponent:function(b){switch(b){case 0:return this.x;case 1:return this.y;default:throw Error("index is out of range: "+b)}},copy:function(b){this.x=b.x;this.y=b.y;return this},addScalar:function(b){this.x+=b;this.y+=b;return this},add:function(d,c){this.x=d.x+c.x;this.y=d.y+c.y;return this},addSelf:function(b){this.x+=b.x;this.y+=b.y;return this},sub:function(d,c){this.x=d.x-c.x;this.y=d.y-c.y;return this},subSelf:function(b){this.x-=b.x;this.y-=b.y;return this},multiplyScalar:function(b){this.x*=b;this.y*=b;return this},divideScalar:function(b){0!==b?(this.x/=b,this.y/=b):this.set(0,0);return this},minSelf:function(b){this.x>b.x&&(this.x=b.x);this.y>b.y&&(this.y=b.y);return this},maxSelf:function(b){this.x<b.x&&(this.x=b.x);this.y<b.y&&(this.y=b.y);return this},clampSelf:function(d,c){this.x<d.x?this.x=d.x:this.x>c.x&&(this.x=c.x);this.y<d.y?this.y=d.y:this.y>c.y&&(this.y=c.y);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(b){return this.x*b.x+this.y*b.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},normalize:function(){return this.divideScalar(this.length())},distanceTo:function(b){return Math.sqrt(this.distanceToSquared(b))},distanceToSquared:function(d){var c=this.x-d.x,d=this.y-d.y;return c*c+d*d},setLength:function(d){var c=this.length();0!==c&&d!==c&&this.multiplyScalar(d/c);return this},lerpSelf:function(d,c){this.x+=(d.x-this.x)*c;this.y+=(d.y-this.y)*c;return this},equals:function(b){return b.x===this.x&&b.y===this.y},clone:function(){return new THREE.Vector2(this.x,this.y)}};THREE.Vector3=function(e,d,f){this.x=e||0;this.y=d||0;this.z=f||0};THREE.Vector3.prototype={constructor:THREE.Vector3,set:function(e,d,f){this.x=e;this.y=d;this.z=f;return this},setX:function(b){this.x=b;return this},setY:function(b){this.y=b;return this},setZ:function(b){this.z=b;return this},setComponent:function(d,c){switch(d){case 0:this.x=c;break;case 1:this.y=c;break;case 2:this.z=c;break;default:throw Error("index is out of range: "+d)}},getComponent:function(b){switch(b){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw Error("index is out of range: "+b)}},copy:function(b){this.x=b.x;this.y=b.y;this.z=b.z;return this},add:function(d,c){this.x=d.x+c.x;this.y=d.y+c.y;this.z=d.z+c.z;return this},addSelf:function(b){this.x+=b.x;this.y+=b.y;this.z+=b.z;return this},addScalar:function(b){this.x+=b;this.y+=b;this.z+=b;return this},sub:function(d,c){this.x=d.x-c.x;this.y=d.y-c.y;this.z=d.z-c.z;return this},subSelf:function(b){this.x-=b.x;this.y-=b.y;this.z-=b.z;return this},multiply:function(d,c){this.x=d.x*c.x;this.y=d.y*c.y;this.z=d.z*c.z;return this},multiplySelf:function(b){this.x*=b.x;this.y*=b.y;this.z*=b.z;return this},multiplyScalar:function(b){this.x*=b;this.y*=b;this.z*=b;return this},divideSelf:function(b){this.x/=b.x;this.y/=b.y;this.z/=b.z;return this},divideScalar:function(b){0!==b?(this.x/=b,this.y/=b,this.z/=b):this.z=this.y=this.x=0;return this},minSelf:function(b){this.x>b.x&&(this.x=b.x);this.y>b.y&&(this.y=b.y);this.z>b.z&&(this.z=b.z);return this},maxSelf:function(b){this.x<b.x&&(this.x=b.x);this.y<b.y&&(this.y=b.y);this.z<b.z&&(this.z=b.z);return this},clampSelf:function(d,c){this.x<d.x?this.x=d.x:this.x>c.x&&(this.x=c.x);this.y<d.y?this.y=d.y:this.y>c.y&&(this.y=c.y);this.z<d.z?this.z=d.z:this.z>c.z&&(this.z=c.z);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(b){return this.x*b.x+this.y*b.y+this.z*b.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(d){var c=this.length();0!==c&&d!==c&&this.multiplyScalar(d/c);return this},lerpSelf:function(d,c){this.x+=(d.x-this.x)*c;this.y+=(d.y-this.y)*c;this.z+=(d.z-this.z)*c;return this},cross:function(d,c){this.x=d.y*c.z-d.z*c.y;this.y=d.z*c.x-d.x*c.z;this.z=d.x*c.y-d.y*c.x;return this},crossSelf:function(f){var e=this.x,h=this.y,g=this.z;this.x=h*f.z-g*f.y;this.y=g*f.x-e*f.z;this.z=e*f.y-h*f.x;return this},angleTo:function(b){return Math.acos(this.dot(b)/this.length()/b.length())},distanceTo:function(b){return Math.sqrt(this.distanceToSquared(b))},distanceToSquared:function(e){var d=this.x-e.x,f=this.y-e.y,e=this.z-e.z;return d*d+f*f+e*e},getPositionFromMatrix:function(b){this.x=b.elements[12];this.y=b.elements[13];this.z=b.elements[14];return this},setEulerFromRotationMatrix:function(x,w){function v(b){return Math.min(Math.max(b,-1),1)}var u=x.elements,t=u[0],s=u[4],r=u[8],q=u[1],o=u[5],m=u[9],l=u[2],j=u[6],u=u[10];void 0===w||"XYZ"===w?(this.y=Math.asin(v(r)),0.99999>Math.abs(r)?(this.x=Math.atan2(-m,u),this.z=Math.atan2(-s,t)):(this.x=Math.atan2(j,o),this.z=0)):"YXZ"===w?(this.x=Math.asin(-v(m)),0.99999>Math.abs(m)?(this.y=Math.atan2(r,u),this.z=Math.atan2(q,o)):(this.y=Math.atan2(-l,t),this.z=0)):"ZXY"===w?(this.x=Math.asin(v(j)),0.99999>Math.abs(j)?(this.y=Math.atan2(-l,u),this.z=Math.atan2(-s,o)):(this.y=0,this.z=Math.atan2(q,t))):"ZYX"===w?(this.y=Math.asin(-v(l)),0.99999>Math.abs(l)?(this.x=Math.atan2(j,u),this.z=Math.atan2(q,t)):(this.x=0,this.z=Math.atan2(-s,o))):"YZX"===w?(this.z=Math.asin(v(q)),0.99999>Math.abs(q)?(this.x=Math.atan2(-m,o),this.y=Math.atan2(-l,t)):(this.x=0,this.y=Math.atan2(r,u))):"XZY"===w&&(this.z=Math.asin(-v(s)),0.99999>Math.abs(s)?(this.x=Math.atan2(j,o),this.y=Math.atan2(r,t)):(this.x=Math.atan2(-m,u),this.y=0));return this},setEulerFromQuaternion:function(i,h){function n(b){return Math.min(Math.max(b,-1),1)}var m=i.x*i.x,l=i.y*i.y,k=i.z*i.z,j=i.w*i.w;void 0===h||"XYZ"===h?(this.x=Math.atan2(2*(i.x*i.w-i.y*i.z),j-m-l+k),this.y=Math.asin(n(2*(i.x*i.z+i.y*i.w))),this.z=Math.atan2(2*(i.z*i.w-i.x*i.y),j+m-l-k)):"YXZ"===h?(this.x=Math.asin(n(2*(i.x*i.w-i.y*i.z))),this.y=Math.atan2(2*(i.x*i.z+i.y*i.w),j-m-l+k),this.z=Math.atan2(2*(i.x*i.y+i.z*i.w),j-m+l-k)):"ZXY"===h?(this.x=Math.asin(n(2*(i.x*i.w+i.y*i.z))),this.y=Math.atan2(2*(i.y*i.w-i.z*i.x),j-m-l+k),this.z=Math.atan2(2*(i.z*i.w-i.x*i.y),j-m+l-k)):"ZYX"===h?(this.x=Math.atan2(2*(i.x*i.w+i.z*i.y),j-m-l+k),this.y=Math.asin(n(2*(i.y*i.w-i.x*i.z))),this.z=Math.atan2(2*(i.x*i.y+i.z*i.w),j+m-l-k)):"YZX"===h?(this.x=Math.atan2(2*(i.x*i.w-i.z*i.y),j-m+l-k),this.y=Math.atan2(2*(i.y*i.w-i.x*i.z),j+m-l-k),this.z=Math.asin(n(2*(i.x*i.y+i.z*i.w)))):"XZY"===h&&(this.x=Math.atan2(2*(i.x*i.w+i.y*i.z),j-m+l-k),this.y=Math.atan2(2*(i.x*i.z+i.y*i.w),j+m-l-k),this.z=Math.asin(n(2*(i.z*i.w-i.x*i.y))));return this},getScaleFromMatrix:function(e){var d=this.set(e.elements[0],e.elements[1],e.elements[2]).length(),f=this.set(e.elements[4],e.elements[5],e.elements[6]).length(),e=this.set(e.elements[8],e.elements[9],e.elements[10]).length();this.x=d;this.y=f;this.z=e;return this},equals:function(b){return b.x===this.x&&b.y===this.y&&b.z===this.z},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)}};THREE.Vector4=function(f,e,h,g){this.x=f||0;this.y=e||0;this.z=h||0;this.w=void 0!==g?g:1};THREE.Vector4.prototype={constructor:THREE.Vector4,set:function(f,e,h,g){this.x=f;this.y=e;this.z=h;this.w=g;return this},setX:function(b){this.x=b;return this},setY:function(b){this.y=b;return this},setZ:function(b){this.z=b;return this},setW:function(b){this.w=b;return this},setComponent:function(d,c){switch(d){case 0:this.x=c;break;case 1:this.y=c;break;case 2:this.z=c;break;case 3:this.w=c;break;default:throw Error("index is out of range: "+d)}},getComponent:function(b){switch(b){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw Error("index is out of range: "+b)}},copy:function(b){this.x=b.x;this.y=b.y;this.z=b.z;this.w=void 0!==b.w?b.w:1;return this},addScalar:function(b){this.x+=b;this.y+=b;this.z+=b;this.w+=b;return this},add:function(d,c){this.x=d.x+c.x;this.y=d.y+c.y;this.z=d.z+c.z;this.w=d.w+c.w;return this},addSelf:function(b){this.x+=b.x;this.y+=b.y;this.z+=b.z;this.w+=b.w;return this},sub:function(d,c){this.x=d.x-c.x;this.y=d.y-c.y;this.z=d.z-c.z;this.w=d.w-c.w;return this},subSelf:function(b){this.x-=b.x;this.y-=b.y;this.z-=b.z;this.w-=b.w;return this},multiplyScalar:function(b){this.x*=b;this.y*=b;this.z*=b;this.w*=b;return this},divideScalar:function(b){0!==b?(this.x/=b,this.y/=b,this.z/=b,this.w/=b):(this.z=this.y=this.x=0,this.w=1);return this},minSelf:function(b){this.x>b.x&&(this.x=b.x);this.y>b.y&&(this.y=b.y);this.z>b.z&&(this.z=b.z);this.w>b.w&&(this.w=b.w);return this},maxSelf:function(b){this.x<b.x&&(this.x=b.x);this.y<b.y&&(this.y=b.y);this.z<b.z&&(this.z=b.z);this.w<b.w&&(this.w=b.w);return this},clampSelf:function(d,c){this.x<d.x?this.x=d.x:this.x>c.x&&(this.x=c.x);this.y<d.y?this.y=d.y:this.y>c.y&&(this.y=c.y);this.z<d.z?this.z=d.z:this.z>c.z&&(this.z=c.z);this.w<d.w?this.w=d.w:this.w>c.w&&(this.w=c.w);return this},negate:function(){return this.multiplyScalar(-1)},dot:function(b){return this.x*b.x+this.y*b.y+this.z*b.z+this.w*b.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(d){var c=this.length();0!==c&&d!==c&&this.multiplyScalar(d/c);return this},lerpSelf:function(d,c){this.x+=(d.x-this.x)*c;this.y+=(d.y-this.y)*c;this.z+=(d.z-this.z)*c;this.w+=(d.w-this.w)*c;return this},equals:function(b){return b.x===this.x&&b.y===this.y&&b.z===this.z&&b.w===this.w},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},setAxisAngleFromQuaternion:function(d){this.w=2*Math.acos(d.w);var c=Math.sqrt(1-d.w*d.w);0.0001>c?(this.x=1,this.z=this.y=0):(this.x=d.x/c,this.y=d.y/c,this.z=d.z/c);return this},setAxisAngleFromRotationMatrix:function(t){var s,r,q,t=t.elements,p=t[0];q=t[4];var o=t[8],n=t[1],m=t[5],l=t[9];r=t[2];s=t[6];var j=t[10];if(0.01>Math.abs(q-n)&&0.01>Math.abs(o-r)&&0.01>Math.abs(l-s)){if(0.1>Math.abs(q+n)&&0.1>Math.abs(o+r)&&0.1>Math.abs(l+s)&&0.1>Math.abs(p+m+j-3)){return this.set(1,0,0,0),this}t=Math.PI;p=(p+1)/2;m=(m+1)/2;j=(j+1)/2;q=(q+n)/4;o=(o+r)/4;l=(l+s)/4;p>m&&p>j?0.01>p?(s=0,q=r=0.707106781):(s=Math.sqrt(p),r=q/s,q=o/s):m>j?0.01>m?(s=0.707106781,r=0,q=0.707106781):(r=Math.sqrt(m),s=q/r,q=l/r):0.01>j?(r=s=0.707106781,q=0):(q=Math.sqrt(j),s=o/q,r=l/q);this.set(s,r,q,t);return this}t=Math.sqrt((s-l)*(s-l)+(o-r)*(o-r)+(n-q)*(n-q));0.001>Math.abs(t)&&(t=1);this.x=(s-l)/t;this.y=(o-r)/t;this.z=(n-q)/t;this.w=Math.acos((p+m+j-1)/2);return this}};THREE.Box2=function(d,c){this.min=void 0!==d?d.clone():new THREE.Vector2(Infinity,Infinity);this.max=void 0!==c?c.clone():new THREE.Vector2(-Infinity,-Infinity)};THREE.Box2.prototype={constructor:THREE.Box2,set:function(d,c){this.min.copy(d);this.max.copy(c);return this},setFromPoints:function(f){if(0<f.length){var e=f[0];this.min.copy(e);this.max.copy(e);for(var h=1,g=f.length;h<g;h++){e=f[h],e.x<this.min.x?this.min.x=e.x:e.x>this.max.x&&(this.max.x=e.x),e.y<this.min.y?this.min.y=e.y:e.y>this.max.y&&(this.max.y=e.y)}}else{this.makeEmpty()}return this},setFromCenterAndSize:function(e,d){var f=THREE.Box2.__v1.copy(d).multiplyScalar(0.5);this.min.copy(e).subSelf(f);this.max.copy(e).addSelf(f);return this},copy:function(b){this.min.copy(b.min);this.max.copy(b.max);return this},makeEmpty:function(){this.min.x=this.min.y=Infinity;this.max.x=this.max.y=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},center:function(b){return(b||new THREE.Vector2).add(this.min,this.max).multiplyScalar(0.5)},size:function(b){return(b||new THREE.Vector2).sub(this.max,this.min)},expandByPoint:function(b){this.min.minSelf(b);this.max.maxSelf(b);return this},expandByVector:function(b){this.min.subSelf(b);this.max.addSelf(b);return this},expandByScalar:function(b){this.min.addScalar(-b);this.max.addScalar(b);return this},containsPoint:function(b){return this.min.x<=b.x&&b.x<=this.max.x&&this.min.y<=b.y&&b.y<=this.max.y?!0:!1},containsBox:function(b){return this.min.x<=b.min.x&&b.max.x<=this.max.x&&this.min.y<=b.min.y&&b.max.y<=this.max.y?!0:!1},getParameter:function(b){return new THREE.Vector2((b.x-this.min.x)/(this.max.x-this.min.x),(b.y-this.min.y)/(this.max.y-this.min.y))},isIntersectionBox:function(b){return b.max.x<this.min.x||b.min.x>this.max.x||b.max.y<this.min.y||b.min.y>this.max.y?!1:!0},clampPoint:function(d,c){return(c||new THREE.Vector2).copy(d).clampSelf(this.min,this.max)},distanceToPoint:function(b){return THREE.Box2.__v1.copy(b).clampSelf(this.min,this.max).subSelf(b).length()},intersect:function(b){this.min.maxSelf(b.min);this.max.minSelf(b.max);return this},union:function(b){this.min.minSelf(b.min);this.max.maxSelf(b.max);return this},translate:function(b){this.min.addSelf(b);this.max.addSelf(b);return this},equals:function(b){return b.min.equals(this.min)&&b.max.equals(this.max)},clone:function(){return(new THREE.Box2).copy(this)}};THREE.Box2.__v1=new THREE.Vector2;THREE.Box3=function(d,c){this.min=void 0!==d?d.clone():new THREE.Vector3(Infinity,Infinity,Infinity);this.max=void 0!==c?c.clone():new THREE.Vector3(-Infinity,-Infinity,-Infinity)};THREE.Box3.prototype={constructor:THREE.Box3,set:function(d,c){this.min.copy(d);this.max.copy(c);return this},setFromPoints:function(f){if(0<f.length){var e=f[0];this.min.copy(e);this.max.copy(e);for(var h=1,g=f.length;h<g;h++){e=f[h],e.x<this.min.x?this.min.x=e.x:e.x>this.max.x&&(this.max.x=e.x),e.y<this.min.y?this.min.y=e.y:e.y>this.max.y&&(this.max.y=e.y),e.z<this.min.z?this.min.z=e.z:e.z>this.max.z&&(this.max.z=e.z)}}else{this.makeEmpty()}return this},setFromCenterAndSize:function(e,d){var f=THREE.Box3.__v1.copy(d).multiplyScalar(0.5);this.min.copy(e).subSelf(f);this.max.copy(e).addSelf(f);return this},copy:function(b){this.min.copy(b.min);this.max.copy(b.max);return this},makeEmpty:function(){this.min.x=this.min.y=this.min.z=Infinity;this.max.x=this.max.y=this.max.z=-Infinity;return this},empty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},center:function(b){return(b||new THREE.Vector3).add(this.min,this.max).multiplyScalar(0.5)},size:function(b){return(b||new THREE.Vector3).sub(this.max,this.min)},expandByPoint:function(b){this.min.minSelf(b);this.max.maxSelf(b);return this},expandByVector:function(b){this.min.subSelf(b);this.max.addSelf(b);return this},expandByScalar:function(b){this.min.addScalar(-b);this.max.addScalar(b);return this},containsPoint:function(b){return this.min.x<=b.x&&b.x<=this.max.x&&this.min.y<=b.y&&b.y<=this.max.y&&this.min.z<=b.z&&b.z<=this.max.z?!0:!1},containsBox:function(b){return this.min.x<=b.min.x&&b.max.x<=this.max.x&&this.min.y<=b.min.y&&b.max.y<=this.max.y&&this.min.z<=b.min.z&&b.max.z<=this.max.z?!0:!1},getParameter:function(b){return new THREE.Vector3((b.x-this.min.x)/(this.max.x-this.min.x),(b.y-this.min.y)/(this.max.y-this.min.y),(b.z-this.min.z)/(this.max.z-this.min.z))},isIntersectionBox:function(b){return b.max.x<this.min.x||b.min.x>this.max.x||b.max.y<this.min.y||b.min.y>this.max.y||b.max.z<this.min.z||b.min.z>this.max.z?!1:!0},clampPoint:function(d,c){c||new THREE.Vector3;return(new THREE.Vector3).copy(d).clampSelf(this.min,this.max)},distanceToPoint:function(b){return THREE.Box3.__v1.copy(b).clampSelf(this.min,this.max).subSelf(b).length()},getBoundingSphere:function(b){b=b||new THREE.Sphere;b.center=this.center();b.radius=0.5*this.size(THREE.Box3.__v0).length();return b},intersect:function(b){this.min.maxSelf(b.min);this.max.minSelf(b.max);return this},union:function(b){this.min.minSelf(b.min);this.max.maxSelf(b.max);return this},transform:function(b){b=[b.multiplyVector3(THREE.Box3.__v0.set(this.min.x,this.min.y,this.min.z)),b.multiplyVector3(THREE.Box3.__v1.set(this.min.x,this.min.y,this.max.z)),b.multiplyVector3(THREE.Box3.__v2.set(this.min.x,this.max.y,this.min.z)),b.multiplyVector3(THREE.Box3.__v3.set(this.min.x,this.max.y,this.max.z)),b.multiplyVector3(THREE.Box3.__v4.set(this.max.x,this.min.y,this.min.z)),b.multiplyVector3(THREE.Box3.__v5.set(this.max.x,this.min.y,this.max.z)),b.multiplyVector3(THREE.Box3.__v6.set(this.max.x,this.max.y,this.min.z)),b.multiplyVector3(THREE.Box3.__v7.set(this.max.x,this.max.y,this.max.z))];this.makeEmpty();this.setFromPoints(b);return this},translate:function(b){this.min.addSelf(b);this.max.addSelf(b);return this},equals:function(b){return b.min.equals(this.min)&&b.max.equals(this.max)},clone:function(){return(new THREE.Box3).copy(this)}};THREE.Box3.__v0=new THREE.Vector3;THREE.Box3.__v1=new THREE.Vector3;THREE.Box3.__v2=new THREE.Vector3;THREE.Box3.__v3=new THREE.Vector3;THREE.Box3.__v4=new THREE.Vector3;THREE.Box3.__v5=new THREE.Vector3;THREE.Box3.__v6=new THREE.Vector3;THREE.Box3.__v7=new THREE.Vector3;THREE.Matrix3=function(){this.elements=new Float32Array(9)};THREE.Matrix3.prototype={constructor:THREE.Matrix3,multiplyVector3:function(g){var f=this.elements,j=g.x,i=g.y,h=g.z;g.x=f[0]*j+f[3]*i+f[6]*h;g.y=f[1]*j+f[4]*i+f[7]*h;g.z=f[2]*j+f[5]*i+f[8]*h;return g},multiplyVector3Array:function(f){for(var e=THREE.Matrix3.__v1,h=0,g=f.length;h<g;h+=3){e.x=f[h],e.y=f[h+1],e.z=f[h+2],this.multiplyVector3(e),f[h]=e.x,f[h+1]=e.y,f[h+2]=e.z}return f},getInverse:function(v){var u=v.elements,v=u[10]*u[5]-u[6]*u[9],t=-u[10]*u[1]+u[2]*u[9],s=u[6]*u[1]-u[2]*u[5],r=-u[10]*u[4]+u[6]*u[8],q=u[10]*u[0]-u[2]*u[8],p=-u[6]*u[0]+u[2]*u[4],o=u[9]*u[4]-u[5]*u[8],m=-u[9]*u[0]+u[1]*u[8],l=u[5]*u[0]-u[1]*u[4],u=u[0]*v+u[1]*r+u[2]*o;0===u&&console.warn("Matrix3.getInverse(): determinant == 0");var u=1/u,j=this.elements;j[0]=u*v;j[1]=u*t;j[2]=u*s;j[3]=u*r;j[4]=u*q;j[5]=u*p;j[6]=u*o;j[7]=u*m;j[8]=u*l;return this},transpose:function(){var d,c=this.elements;d=c[1];c[1]=c[3];c[3]=d;d=c[2];c[2]=c[6];c[6]=d;d=c[5];c[5]=c[7];c[7]=d;return this},transposeIntoArray:function(d){var c=this.elements;d[0]=c[0];d[1]=c[3];d[2]=c[6];d[3]=c[1];d[4]=c[4];d[5]=c[7];d[6]=c[2];d[7]=c[5];d[8]=c[8];return this}};THREE.Matrix3.__v1=new THREE.Vector3;THREE.Matrix4=function(E,D,C,B,A,z,y,x,w,v,q,o,t,j,F,u){this.elements=new Float32Array(16);this.set(void 0!==E?E:1,D||0,C||0,B||0,A||0,void 0!==z?z:1,y||0,x||0,w||0,v||0,void 0!==q?q:1,o||0,t||0,j||0,F||0,void 0!==u?u:1)};THREE.Matrix4.prototype={constructor:THREE.Matrix4,set:function(G,F,E,D,C,B,A,z,y,x,u,t,v,j,H,w){var o=this.elements;o[0]=G;o[4]=F;o[8]=E;o[12]=D;o[1]=C;o[5]=B;o[9]=A;o[13]=z;o[2]=y;o[6]=x;o[10]=u;o[14]=t;o[3]=v;o[7]=j;o[11]=H;o[15]=w;return this},identity:function(){this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1);return this},copy:function(b){b=b.elements;this.set(b[0],b[4],b[8],b[12],b[1],b[5],b[9],b[13],b[2],b[6],b[10],b[14],b[3],b[7],b[11],b[15]);return this},setRotationFromEuler:function(z,y){var x=this.elements,w=z.x,v=z.y,u=z.z,t=Math.cos(w),w=Math.sin(w),s=Math.cos(v),v=Math.sin(v),r=Math.cos(u),u=Math.sin(u);if(void 0===y||"XYZ"===y){var q=t*r,l=t*u,j=w*r,o=w*u;x[0]=s*r;x[4]=-s*u;x[8]=v;x[1]=l+j*v;x[5]=q-o*v;x[9]=-w*s;x[2]=o-q*v;x[6]=j+l*v;x[10]=t*s}else{"YXZ"===y?(q=s*r,l=s*u,j=v*r,o=v*u,x[0]=q+o*w,x[4]=j*w-l,x[8]=t*v,x[1]=t*u,x[5]=t*r,x[9]=-w,x[2]=l*w-j,x[6]=o+q*w,x[10]=t*s):"ZXY"===y?(q=s*r,l=s*u,j=v*r,o=v*u,x[0]=q-o*w,x[4]=-t*u,x[8]=j+l*w,x[1]=l+j*w,x[5]=t*r,x[9]=o-q*w,x[2]=-t*v,x[6]=w,x[10]=t*s):"ZYX"===y?(q=t*r,l=t*u,j=w*r,o=w*u,x[0]=s*r,x[4]=j*v-l,x[8]=q*v+o,x[1]=s*u,x[5]=o*v+q,x[9]=l*v-j,x[2]=-v,x[6]=w*s,x[10]=t*s):"YZX"===y?(q=t*s,l=t*v,j=w*s,o=w*v,x[0]=s*r,x[4]=o-q*u,x[8]=j*u+l,x[1]=u,x[5]=t*r,x[9]=-w*r,x[2]=-v*r,x[6]=l*u+j,x[10]=q-o*u):"XZY"===y&&(q=t*s,l=t*v,j=w*s,o=w*v,x[0]=s*r,x[4]=-u,x[8]=v*r,x[1]=q*u+o,x[5]=t*r,x[9]=l*u-j,x[2]=j*u-l,x[6]=w*r,x[10]=o*u+q)}return this},setRotationFromQuaternion:function(v){var u=this.elements,t=v.x,s=v.y,r=v.z,q=v.w,p=t+t,o=s+s,m=r+r,v=t*p,l=t*o,t=t*m,j=s*o,s=s*m,r=r*m,p=q*p,o=q*o,q=q*m;u[0]=1-(j+r);u[4]=l-q;u[8]=t+o;u[1]=l+q;u[5]=1-(v+r);u[9]=s-p;u[2]=t-o;u[6]=s+p;u[10]=1-(v+j);return this},lookAt:function(i,h,n){var m=this.elements,l=THREE.Matrix4.__v1,k=THREE.Matrix4.__v2,j=THREE.Matrix4.__v3;j.sub(i,h).normalize();0===j.length()&&(j.z=1);l.cross(n,j).normalize();0===l.length()&&(j.x+=0.0001,l.cross(n,j).normalize());k.cross(j,l);m[0]=l.x;m[4]=k.x;m[8]=j.x;m[1]=l.y;m[5]=k.y;m[9]=j.y;m[2]=l.z;m[6]=k.z;m[10]=j.z;return this},multiply:function(aq,ap){var ao=aq.elements,an=ap.elements,am=this.elements,al=ao[0],ak=ao[4],aj=ao[8],ai=ao[12],ah=ao[1],ae=ao[5],ad=ao[9],af=ao[13],Z=ao[2],X=ao[6],ag=ao[10],ab=ao[14],U=ao[3],aa=ao[7],P=ao[11],ao=ao[15],V=an[0],T=an[4],Y=an[8],ac=an[12],E=an[1],Q=an[5],S=an[9],O=an[13],j=an[2],W=an[6],v=an[10],N=an[14],M=an[3],w=an[7],o=an[11],an=an[15];am[0]=al*V+ak*E+aj*j+ai*M;am[4]=al*T+ak*Q+aj*W+ai*w;am[8]=al*Y+ak*S+aj*v+ai*o;am[12]=al*ac+ak*O+aj*N+ai*an;am[1]=ah*V+ae*E+ad*j+af*M;am[5]=ah*T+ae*Q+ad*W+af*w;am[9]=ah*Y+ae*S+ad*v+af*o;am[13]=ah*ac+ae*O+ad*N+af*an;am[2]=Z*V+X*E+ag*j+ab*M;am[6]=Z*T+X*Q+ag*W+ab*w;am[10]=Z*Y+X*S+ag*v+ab*o;am[14]=Z*ac+X*O+ag*N+ab*an;am[3]=U*V+aa*E+P*j+ao*M;am[7]=U*T+aa*Q+P*W+ao*w;am[11]=U*Y+aa*S+P*v+ao*o;am[15]=U*ac+aa*O+P*N+ao*an;return this},multiplySelf:function(b){return this.multiply(this,b)},multiplyToArray:function(f,e,h){var g=this.elements;this.multiply(f,e);h[0]=g[0];h[1]=g[1];h[2]=g[2];h[3]=g[3];h[4]=g[4];h[5]=g[5];h[6]=g[6];h[7]=g[7];h[8]=g[8];h[9]=g[9];h[10]=g[10];h[11]=g[11];h[12]=g[12];h[13]=g[13];h[14]=g[14];h[15]=g[15];return this},multiplyScalar:function(d){var c=this.elements;c[0]*=d;c[4]*=d;c[8]*=d;c[12]*=d;c[1]*=d;c[5]*=d;c[9]*=d;c[13]*=d;c[2]*=d;c[6]*=d;c[10]*=d;c[14]*=d;c[3]*=d;c[7]*=d;c[11]*=d;c[15]*=d;return this},multiplyVector3:function(h){var g=this.elements,l=h.x,k=h.y,j=h.z,i=1/(g[3]*l+g[7]*k+g[11]*j+g[15]);h.x=(g[0]*l+g[4]*k+g[8]*j+g[12])*i;h.y=(g[1]*l+g[5]*k+g[9]*j+g[13])*i;h.z=(g[2]*l+g[6]*k+g[10]*j+g[14])*i;return h},multiplyVector4:function(h){var g=this.elements,l=h.x,k=h.y,j=h.z,i=h.w;h.x=g[0]*l+g[4]*k+g[8]*j+g[12]*i;h.y=g[1]*l+g[5]*k+g[9]*j+g[13]*i;h.z=g[2]*l+g[6]*k+g[10]*j+g[14]*i;h.w=g[3]*l+g[7]*k+g[11]*j+g[15]*i;return h},multiplyVector3Array:function(f){for(var e=THREE.Matrix4.__v1,h=0,g=f.length;h<g;h+=3){e.x=f[h],e.y=f[h+1],e.z=f[h+2],this.multiplyVector3(e),f[h]=e.x,f[h+1]=e.y,f[h+2]=e.z}return f},rotateAxis:function(g){var f=this.elements,j=g.x,i=g.y,h=g.z;g.x=j*f[0]+i*f[4]+h*f[8];g.y=j*f[1]+i*f[5]+h*f[9];g.z=j*f[2]+i*f[6]+h*f[10];g.normalize();return g},crossVector:function(e){var d=this.elements,f=new THREE.Vector4;f.x=d[0]*e.x+d[4]*e.y+d[8]*e.z+d[12]*e.w;f.y=d[1]*e.x+d[5]*e.y+d[9]*e.z+d[13]*e.w;f.z=d[2]*e.x+d[6]*e.y+d[10]*e.z+d[14]*e.w;f.w=e.w?d[3]*e.x+d[7]*e.y+d[11]*e.z+d[15]*e.w:1;return f},determinant:function(){var E=this.elements,D=E[0],C=E[4],B=E[8],A=E[12],z=E[1],y=E[5],x=E[9],w=E[13],v=E[2],q=E[6],o=E[10],t=E[14],j=E[3],F=E[7],u=E[11],E=E[15];return A*x*q*j-B*w*q*j-A*y*o*j+C*w*o*j+B*y*t*j-C*x*t*j-A*x*v*F+B*w*v*F+A*z*o*F-D*w*o*F-B*z*t*F+D*x*t*F+A*y*v*u-C*w*v*u-A*z*q*u+D*w*q*u+C*z*t*u-D*y*t*u-B*y*v*E+C*x*v*E+B*z*q*E-D*x*q*E-C*z*o*E+D*y*o*E},transpose:function(){var d=this.elements,c;c=d[1];d[1]=d[4];d[4]=c;c=d[2];d[2]=d[8];d[8]=c;c=d[6];d[6]=d[9];d[9]=c;c=d[3];d[3]=d[12];d[12]=c;c=d[7];d[7]=d[13];d[13]=c;c=d[11];d[11]=d[14];d[14]=c;return this},flattenToArray:function(d){var c=this.elements;d[0]=c[0];d[1]=c[1];d[2]=c[2];d[3]=c[3];d[4]=c[4];d[5]=c[5];d[6]=c[6];d[7]=c[7];d[8]=c[8];d[9]=c[9];d[10]=c[10];d[11]=c[11];d[12]=c[12];d[13]=c[13];d[14]=c[14];d[15]=c[15];return d},flattenToArrayOffset:function(e,d){var f=this.elements;e[d]=f[0];e[d+1]=f[1];e[d+2]=f[2];e[d+3]=f[3];e[d+4]=f[4];e[d+5]=f[5];e[d+6]=f[6];e[d+7]=f[7];e[d+8]=f[8];e[d+9]=f[9];e[d+10]=f[10];e[d+11]=f[11];e[d+12]=f[12];e[d+13]=f[13];e[d+14]=f[14];e[d+15]=f[15];return e},getPosition:function(){var b=this.elements;return THREE.Matrix4.__v1.set(b[12],b[13],b[14])},setPosition:function(d){var c=this.elements;c[12]=d.x;c[13]=d.y;c[14]=d.z;return this},getColumnX:function(){var b=this.elements;return THREE.Matrix4.__v1.set(b[0],b[1],b[2])},getColumnY:function(){var b=this.elements;return THREE.Matrix4.__v1.set(b[4],b[5],b[6])},getColumnZ:function(){var b=this.elements;return THREE.Matrix4.__v1.set(b[8],b[9],b[10])},getInverse:function(J){var I=this.elements,H=J.elements,G=H[0],F=H[4],E=H[8],D=H[12],C=H[1],B=H[5],A=H[9],x=H[13],w=H[2],y=H[6],t=H[10],o=H[14],z=H[3],v=H[7],j=H[11],H=H[15];I[0]=A*o*v-x*t*v+x*y*j-B*o*j-A*y*H+B*t*H;I[4]=D*t*v-E*o*v-D*y*j+F*o*j+E*y*H-F*t*H;I[8]=E*x*v-D*A*v+D*B*j-F*x*j-E*B*H+F*A*H;I[12]=D*A*y-E*x*y-D*B*t+F*x*t+E*B*o-F*A*o;I[1]=x*t*z-A*o*z-x*w*j+C*o*j+A*w*H-C*t*H;I[5]=E*o*z-D*t*z+D*w*j-G*o*j-E*w*H+G*t*H;I[9]=D*A*z-E*x*z-D*C*j+G*x*j+E*C*H-G*A*H;I[13]=E*x*w-D*A*w+D*C*t-G*x*t-E*C*o+G*A*o;I[2]=B*o*z-x*y*z+x*w*v-C*o*v-B*w*H+C*y*H;I[6]=D*y*z-F*o*z-D*w*v+G*o*v+F*w*H-G*y*H;I[10]=F*x*z-D*B*z+D*C*v-G*x*v-F*C*H+G*B*H;I[14]=D*B*w-F*x*w-D*C*y+G*x*y+F*C*o-G*B*o;I[3]=A*y*z-B*t*z-A*w*v+C*t*v+B*w*j-C*y*j;I[7]=F*t*z-E*y*z+E*w*v-G*t*v-F*w*j+G*y*j;I[11]=E*B*z-F*A*z-E*C*v+G*A*v+F*C*j-G*B*j;I[15]=F*A*w-E*B*w+E*C*y-G*A*y-F*C*t+G*B*t;this.multiplyScalar(1/J.determinant());return this},compose:function(h,g,l){var k=this.elements,j=THREE.Matrix4.__m1,i=THREE.Matrix4.__m2;j.identity();j.setRotationFromQuaternion(g);i.makeScale(l);this.multiply(j,i);k[12]=h.x;k[13]=h.y;k[14]=h.z;return this},decompose:function(i,h,n){var m=this.elements,l=THREE.Matrix4.__v1,k=THREE.Matrix4.__v2,j=THREE.Matrix4.__v3;l.set(m[0],m[1],m[2]);k.set(m[4],m[5],m[6]);j.set(m[8],m[9],m[10]);i=i instanceof THREE.Vector3?i:new THREE.Vector3;h=h instanceof THREE.Quaternion?h:new THREE.Quaternion;n=n instanceof THREE.Vector3?n:new THREE.Vector3;n.x=l.length();n.y=k.length();n.z=j.length();i.x=m[12];i.y=m[13];i.z=m[14];m=THREE.Matrix4.__m1;m.copy(this);m.elements[0]/=n.x;m.elements[1]/=n.x;m.elements[2]/=n.x;m.elements[4]/=n.y;m.elements[5]/=n.y;m.elements[6]/=n.y;m.elements[8]/=n.z;m.elements[9]/=n.z;m.elements[10]/=n.z;h.setFromRotationMatrix(m);return[i,h,n]},extractPosition:function(d){var c=this.elements,d=d.elements;c[12]=d[12];c[13]=d[13];c[14]=d[14];return this},extractRotation:function(g){var f=this.elements,g=g.elements,j=THREE.Matrix4.__v1,i=1/j.set(g[0],g[1],g[2]).length(),h=1/j.set(g[4],g[5],g[6]).length(),j=1/j.set(g[8],g[9],g[10]).length();f[0]=g[0]*i;f[1]=g[1]*i;f[2]=g[2]*i;f[4]=g[4]*h;f[5]=g[5]*h;f[6]=g[6]*h;f[8]=g[8]*j;f[9]=g[9]*j;f[10]=g[10]*j;return this},translate:function(f){var e=this.elements,h=f.x,g=f.y,f=f.z;e[12]=e[0]*h+e[4]*g+e[8]*f+e[12];e[13]=e[1]*h+e[5]*g+e[9]*f+e[13];e[14]=e[2]*h+e[6]*g+e[10]*f+e[14];e[15]=e[3]*h+e[7]*g+e[11]*f+e[15];return this},rotateX:function(v){var u=this.elements,t=u[4],s=u[5],r=u[6],q=u[7],p=u[8],o=u[9],m=u[10],l=u[11],j=Math.cos(v),v=Math.sin(v);u[4]=j*t+v*p;u[5]=j*s+v*o;u[6]=j*r+v*m;u[7]=j*q+v*l;u[8]=j*p-v*t;u[9]=j*o-v*s;u[10]=j*m-v*r;u[11]=j*l-v*q;return this},rotateY:function(v){var u=this.elements,t=u[0],s=u[1],r=u[2],q=u[3],p=u[8],o=u[9],m=u[10],l=u[11],j=Math.cos(v),v=Math.sin(v);u[0]=j*t-v*p;u[1]=j*s-v*o;u[2]=j*r-v*m;u[3]=j*q-v*l;u[8]=j*p+v*t;u[9]=j*o+v*s;u[10]=j*m+v*r;u[11]=j*l+v*q;return this},rotateZ:function(v){var u=this.elements,t=u[0],s=u[1],r=u[2],q=u[3],p=u[4],o=u[5],m=u[6],l=u[7],j=Math.cos(v),v=Math.sin(v);u[0]=j*t+v*p;u[1]=j*s+v*o;u[2]=j*r+v*m;u[3]=j*q+v*l;u[4]=j*p-v*t;u[5]=j*o-v*s;u[6]=j*m-v*r;u[7]=j*l-v*q;return this},rotateByAxis:function(V,U){var T=this.elements;if(1===V.x&&0===V.y&&0===V.z){return this.rotateX(U)}if(0===V.x&&1===V.y&&0===V.z){return this.rotateY(U)}if(0===V.x&&0===V.y&&1===V.z){return this.rotateZ(U)}var S=V.x,R=V.y,Q=V.z,P=Math.sqrt(S*S+R*R+Q*Q),S=S/P,R=R/P,Q=Q/P,P=S*S,O=R*R,N=Q*Q,M=Math.cos(U),J=Math.sin(U),I=1-M,K=S*R*I,D=S*Q*I,I=R*Q*I,S=S*J,y=R*J,J=Q*J,Q=P+(1-P)*M,P=K+J,R=D-y,K=K-J,O=O+(1-O)*M,J=I+S,D=D+y,I=I-S,N=N+(1-N)*M,M=T[0],S=T[1],y=T[2],L=T[3],G=T[4],v=T[5],E=T[6],j=T[7],w=T[8],o=T[9],z=T[10],H=T[11];T[0]=Q*M+P*G+R*w;T[1]=Q*S+P*v+R*o;T[2]=Q*y+P*E+R*z;T[3]=Q*L+P*j+R*H;T[4]=K*M+O*G+J*w;T[5]=K*S+O*v+J*o;T[6]=K*y+O*E+J*z;T[7]=K*L+O*j+J*H;T[8]=D*M+I*G+N*w;T[9]=D*S+I*v+N*o;T[10]=D*y+I*E+N*z;T[11]=D*L+I*j+N*H;return this},scale:function(f){var e=this.elements,h=f.x,g=f.y,f=f.z;e[0]*=h;e[4]*=g;e[8]*=f;e[1]*=h;e[5]*=g;e[9]*=f;e[2]*=h;e[6]*=g;e[10]*=f;e[3]*=h;e[7]*=g;e[11]*=f;return this},getMaxScaleOnAxis:function(){var b=this.elements;return Math.sqrt(Math.max(b[0]*b[0]+b[1]*b[1]+b[2]*b[2],Math.max(b[4]*b[4]+b[5]*b[5]+b[6]*b[6],b[8]*b[8]+b[9]*b[9]+b[10]*b[10])))},makeTranslation:function(b){this.set(1,0,0,b.x,0,1,0,b.y,0,0,1,b.z,0,0,0,1);return this},makeRotationX:function(d){var c=Math.cos(d),d=Math.sin(d);this.set(1,0,0,0,0,c,-d,0,0,d,c,0,0,0,0,1);return this},makeRotationY:function(d){var c=Math.cos(d),d=Math.sin(d);this.set(c,0,d,0,0,1,0,0,-d,0,c,0,0,0,0,1);return this},makeRotationZ:function(d){var c=Math.cos(d),d=Math.sin(d);this.set(c,-d,0,0,d,c,0,0,0,0,1,0,0,0,0,1);return this},makeRotationAxis:function(t,s){var r=Math.cos(s),q=Math.sin(s),p=1-r,o=t.x,n=t.y,m=t.z,l=p*o,j=p*n;this.set(l*o+r,l*n-q*m,l*m+q*n,0,l*n+q*m,j*n+r,j*m-q*o,0,l*m-q*n,j*m+q*o,p*m*m+r,0,0,0,0,1);return this},makeScale:function(b){this.set(b.x,0,0,0,0,b.y,0,0,0,0,b.z,0,0,0,0,1);return this},makeFrustum:function(i,h,n,m,l,k){var j=this.elements;j[0]=2*l/(h-i);j[4]=0;j[8]=(h+i)/(h-i);j[12]=0;j[1]=0;j[5]=2*l/(m-n);j[9]=(m+n)/(m-n);j[13]=0;j[2]=0;j[6]=0;j[10]=-(k+l)/(k-l);j[14]=-2*k*l/(k-l);j[3]=0;j[7]=0;j[11]=-1;j[15]=0;return this},makePerspective:function(g,f,j,i){var g=j*Math.tan(THREE.Math.degToRad(0.5*g)),h=-g;return this.makeFrustum(h*f,g*f,h,g,j,i)},makeOrthographic:function(t,s,r,q,p,o){var n=this.elements,m=s-t,l=r-q,j=o-p;n[0]=2/m;n[4]=0;n[8]=0;n[12]=-((s+t)/m);n[1]=0;n[5]=2/l;n[9]=0;n[13]=-((r+q)/l);n[2]=0;n[6]=0;n[10]=-2/j;n[14]=-((o+p)/j);n[3]=0;n[7]=0;n[11]=0;n[15]=1;return this},clone:function(){var b=this.elements;return new THREE.Matrix4(b[0],b[4],b[8],b[12],b[1],b[5],b[9],b[13],b[2],b[6],b[10],b[14],b[3],b[7],b[11],b[15])}};THREE.Matrix4.__v1=new THREE.Vector3;THREE.Matrix4.__v2=new THREE.Vector3;THREE.Matrix4.__v3=new THREE.Vector3;THREE.Matrix4.__m1=new THREE.Matrix4;THREE.Matrix4.__m2=new THREE.Matrix4;THREE.Ray=function(d,c){this.origin=void 0!==d?d.clone():new THREE.Vector3;this.direction=void 0!==c?c.clone():new THREE.Vector3};THREE.Ray.prototype={constructor:THREE.Ray,set:function(d,c){this.origin.copy(d);this.direction.copy(c);return this},copy:function(b){this.origin.copy(b.origin);this.direction.copy(b.direction);return this},at:function(d,c){return(c||new THREE.Vector3).copy(this.direction).multiplyScalar(d).addSelf(this.origin)},recastSelf:function(b){this.origin.copy(this.at(b,THREE.Ray.__v1));return this},closestPointToPoint:function(f,e){var h=e||new THREE.Vector3;h.sub(f,this.origin);var g=h.dot(this.direction);return h.copy(this.direction).multiplyScalar(g).addSelf(this.origin)},distanceToPoint:function(d){var c=THREE.Ray.__v1.sub(d,this.origin).dot(this.direction);THREE.Ray.__v1.copy(this.direction).multiplyScalar(c).addSelf(this.origin);return THREE.Ray.__v1.distanceTo(d)},isIntersectionSphere:function(b){return this.distanceToPoint(b.center)<=b.radius},isIntersectionPlane:function(b){return 0!=b.normal.dot(this.direction)||0==b.distanceToPoint(this.origin)?!0:!1},distanceToPlane:function(d){var c=d.normal.dot(this.direction);if(0==c){if(0==d.distanceToPoint(this.origin)){return 0}}else{return -(this.origin.dot(d.normal)+d.constant)/c}},intersectPlane:function(e,d){var f=this.distanceToPlane(e);return void 0===f?void 0:this.at(f,d)},transform:function(b){this.direction=b.multiplyVector3(this.direction.addSelf(this.origin));this.origin=b.multiplyVector3(this.origin);this.direction.subSelf(this.origin);return this},equals:function(b){return b.origin.equals(this.origin)&&b.direction.equals(this.direction)},clone:function(){return(new THREE.Ray).copy(this)}};THREE.Ray.__v1=new THREE.Vector3;THREE.Ray.__v2=new THREE.Vector3;THREE.Frustum=function(){this.planes=[new THREE.Plane,new THREE.Plane,new THREE.Plane,new THREE.Plane,new THREE.Plane,new THREE.Plane]};THREE.Frustum.prototype.setFromMatrix=function(G){var F=this.planes,E=G.elements,G=E[0],D=E[1],C=E[2],B=E[3],A=E[4],z=E[5],y=E[6],x=E[7],u=E[8],t=E[9],v=E[10],j=E[11],H=E[12],w=E[13],o=E[14],E=E[15];F[0].setComponents(B-G,x-A,j-u,E-H);F[1].setComponents(B+G,x+A,j+u,E+H);F[2].setComponents(B+D,x+z,j+t,E+w);F[3].setComponents(B-D,x-z,j-t,E-w);F[4].setComponents(B-C,x-y,j-v,E-o);F[5].setComponents(B+C,x+y,j+v,E+o);for(G=0;6>G;G++){F[G].normalize()}};THREE.Frustum.prototype.contains=function(g){for(var f=this.planes,j=g.matrixWorld,i=j.getPosition(),g=-g.geometry.boundingSphere.radius*j.getMaxScaleOnAxis(),h=j=0;6>h;h++){if(j=f[h].distanceToPoint(i),j<=g){return !1}}return !0};THREE.Frustum.__v1=new THREE.Vector3;THREE.Plane=function(d,c){this.normal=void 0!==d?d.clone():new THREE.Vector3(1,0,0);this.constant=void 0!==c?c:0};THREE.Plane.prototype={constructor:THREE.Plane,set:function(d,c){this.normal.copy(d);this.constant=c;return this},setComponents:function(f,e,h,g){this.normal.set(f,e,h);this.constant=g;return this},setFromNormalAndCoplanarPoint:function(d,c){this.normal.copy(d).normalize();this.constant=-c.dot(this.normal);return this},setFromCoplanarPoints:function(e,d,f){d=THREE.Plane.__v1.sub(f,d).crossSelf(THREE.Plane.__v2.sub(e,d)).normalize();this.setFromNormalAndCoplanarPoint(d,e);return this},copy:function(b){this.normal.copy(b.normal);this.constant=b.constant;return this},normalize:function(){var b=1/this.normal.length();this.normal.multiplyScalar(b);this.constant*=b;return this},distanceToPoint:function(b){return this.normal.dot(b)+this.constant},distanceToSphere:function(b){return this.distanceToPoint(b.center)-b.radius},projectPoint:function(d,c){return this.orthoPoint(d,c).subSelf(d).negate()},orthoPoint:function(e,d){var f=this.distanceToPoint(e);return(d||new THREE.Vector3).copy(this.normal).multiplyScalar(f)},isIntersectionLine:function(f,e){var h=this.distanceToPoint(f),g=this.distanceToPoint(e);return 0>h&&0<g||0>g&&0<h},coplanarPoint:function(b){return(b||new THREE.Vector3).copy(this.normal).multiplyScalar(-this.constant)},transform:function(f,e){var h=THREE.Plane.__v1,g=THREE.Plane.__v2,e=e||(new THREE.Matrix3).getInverse(f).transpose(),h=e.multiplyVector3(h.copy(this.normal)),g=this.coplanarPoint(g),g=f.multiplyVector3(g);this.setFromNormalAndCoplanarPoint(h,g);return this},translate:function(b){this.constant-=b.dot(this.normal);return this},equals:function(b){return b.normal.equals(this.normal)&&b.constant==this.constant},clone:function(){return(new THREE.Plane).copy(this)}};THREE.Plane.__vZero=new THREE.Vector3(0,0,0);THREE.Plane.__v1=new THREE.Vector3;THREE.Plane.__v2=new THREE.Vector3;THREE.Sphere=function(d,c){this.center=void 0===d?new THREE.Vector3:d.clone();this.radius=void 0===c?0:c};THREE.Sphere.prototype={constructor:THREE.Sphere,set:function(d,c){this.center.copy(d);this.radius=c;return this},setFromCenterAndPoints:function(h,g){for(var l=0,k=0,j=g.length;k<j;k++){var i=h.distanceToSquared(g[k]),l=Math.max(l,i)}this.center=h;this.radius=Math.sqrt(l);return this},copy:function(b){this.center.copy(b.center);this.radius=b.radius;return this},empty:function(){return 0>=this.radius},containsPoint:function(b){return b.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(b){return b.distanceTo(this.center)-this.radius},clampPoint:function(f,e){var h=this.center.distanceToSquared(f),g=e||new THREE.Vector3;g.copy(f);h>this.radius*this.radius&&(g.subSelf(this.center).normalize(),g.multiplyScalar(this.radius).addSelf(this.center));return g},getBoundingBox:function(b){b=b||new THREE.Box3;b.set(this.center,this.center);b.expandByScalar(this.radius);return b},transform:function(b){this.center=b.multiplyVector3(this.center);this.radius*=b.getMaxScaleOnAxis();return this},translate:function(b){this.center.addSelf(b);return this},equals:function(b){return b.center.equals(this.center)&&b.radius===this.radius},clone:function(){return(new THREE.Sphere).copy(this)}};THREE.Math={clamp:function(e,d,f){return e<d?d:e>f?f:e},clampBottom:function(d,c){return d<c?c:d},mapLinear:function(g,f,j,i,h){return i+(g-f)*(h-i)/(j-f)},random16:function(){return(65280*Math.random()+255*Math.random())/65535},randInt:function(d,c){return d+Math.floor(Math.random()*(c-d+1))},randFloat:function(d,c){return d+Math.random()*(c-d)},randFloatSpread:function(b){return b*(0.5-Math.random())},sign:function(b){return 0>b?-1:0<b?1:0},degToRad:function(b){return b*THREE.Math.__d2r},radToDeg:function(b){return b*THREE.Math.__r2d}};THREE.Math.__d2r=Math.PI/180;THREE.Math.__r2d=180/Math.PI;THREE.Quaternion=function(f,e,h,g){this.x=f||0;this.y=e||0;this.z=h||0;this.w=void 0!==g?g:1};THREE.Quaternion.prototype={constructor:THREE.Quaternion,set:function(f,e,h,g){this.x=f;this.y=e;this.z=h;this.w=g;return this},copy:function(b){this.x=b.x;this.y=b.y;this.z=b.z;this.w=b.w;return this},setFromEuler:function(j,i){var p=Math.cos(j.x/2),o=Math.cos(j.y/2),n=Math.cos(j.z/2),m=Math.sin(j.x/2),l=Math.sin(j.y/2),k=Math.sin(j.z/2);void 0===i||"XYZ"===i?(this.x=m*o*n+p*l*k,this.y=p*l*n-m*o*k,this.z=p*o*k+m*l*n,this.w=p*o*n-m*l*k):"YXZ"===i?(this.x=m*o*n+p*l*k,this.y=p*l*n-m*o*k,this.z=p*o*k-m*l*n,this.w=p*o*n+m*l*k):"ZXY"===i?(this.x=m*o*n-p*l*k,this.y=p*l*n+m*o*k,this.z=p*o*k+m*l*n,this.w=p*o*n-m*l*k):"ZYX"===i?(this.x=m*o*n-p*l*k,this.y=p*l*n+m*o*k,this.z=p*o*k-m*l*n,this.w=p*o*n+m*l*k):"YZX"===i?(this.x=m*o*n+p*l*k,this.y=p*l*n+m*o*k,this.z=p*o*k-m*l*n,this.w=p*o*n-m*l*k):"XZY"===i&&(this.x=m*o*n-p*l*k,this.y=p*l*n-m*o*k,this.z=p*o*k+m*l*n,this.w=p*o*n+m*l*k);return this},setFromAxisAngle:function(f,e){var h=e/2,g=Math.sin(h);this.x=f.x*g;this.y=f.y*g;this.z=f.z*g;this.w=Math.cos(h);return this},setFromRotationMatrix:function(t){var s=t.elements,r=s[0],t=s[4],q=s[8],p=s[1],o=s[5],n=s[9],m=s[2],l=s[6],s=s[10],j=r+o+s;0<j?(r=0.5/Math.sqrt(j+1),this.w=0.25/r,this.x=(l-n)*r,this.y=(q-m)*r,this.z=(p-t)*r):r>o&&r>s?(r=2*Math.sqrt(1+r-o-s),this.w=(l-n)/r,this.x=0.25*r,this.y=(t+p)/r,this.z=(q+m)/r):o>s?(r=2*Math.sqrt(1+o-r-s),this.w=(q-m)/r,this.x=(t+p)/r,this.y=0.25*r,this.z=(n+l)/r):(r=2*Math.sqrt(1+s-r-o),this.w=(p-t)/r,this.x=(q+m)/r,this.y=(n+l)/r,this.z=0.25*r);return this},inverse:function(){this.conjugate().normalize();return this},conjugate:function(){this.x*=-1;this.y*=-1;this.z*=-1;return this},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},normalize:function(){var b=this.length();0===b?(this.z=this.y=this.x=0,this.w=1):(b=1/b,this.x*=b,this.y*=b,this.z*=b,this.w*=b);return this},multiply:function(d,c){this.copy(d);return this.multiplySelf(c)},multiplySelf:function(j){var i=this.x,p=this.y,o=this.z,n=this.w,m=j.x,l=j.y,k=j.z,j=j.w;this.x=i*j+n*m+p*k-o*l;this.y=p*j+n*l+o*m-i*k;this.z=o*j+n*k+i*l-p*m;this.w=n*j-i*m-p*l-o*k;return this},multiplyVector3:function(x,w){w||(w=x);var v=x.x,u=x.y,t=x.z,s=this.x,r=this.y,q=this.z,o=this.w,m=o*v+r*t-q*u,l=o*u+q*v-s*t,j=o*t+s*u-r*v,v=-s*v-r*u-q*t;w.x=m*o+v*-s+l*-q-j*-r;w.y=l*o+v*-r+j*-s-m*-q;w.z=j*o+v*-q+m*-r-l*-s;return w},slerpSelf:function(r,q){var p=this.x,o=this.y,n=this.z,m=this.w,l=m*r.w+p*r.x+o*r.y+n*r.z;0>l?(this.w=-r.w,this.x=-r.x,this.y=-r.y,this.z=-r.z,l=-l):this.copy(r);if(1<=l){return this.w=m,this.x=p,this.y=o,this.z=n,this}var k=Math.acos(l),j=Math.sqrt(1-l*l);if(0.001>Math.abs(j)){return this.w=0.5*(m+this.w),this.x=0.5*(p+this.x),this.y=0.5*(o+this.y),this.z=0.5*(n+this.z),this}l=Math.sin((1-q)*k)/j;k=Math.sin(q*k)/j;this.w=m*l+this.w*k;this.x=p*l+this.x*k;this.y=o*l+this.y*k;this.z=n*l+this.z*k;return this},equals:function(b){return b.x===this.x&&b.y===this.y&&b.z===this.z&&b.w===this.w},clone:function(){return new THREE.Quaternion(this.x,this.y,this.z,this.w)}};THREE.Quaternion.slerp=function(f,e,h,g){return h.copy(f).slerpSelf(e,g)};THREE.Spline=function(z){function y(i,h,A,p,n,m,k){i=0.5*(A-i);p=0.5*(p-h);return(2*(h-A)+i+p)*k+(-3*(h-A)-2*i-p)*m+i*n+h}this.points=z;var x=[],w={x:0,y:0,z:0},v,u,t,s,r,q,l,j,o;this.initFromArray=function(d){this.points=[];for(var c=0;c<d.length;c++){this.points[c]={x:d[c][0],y:d[c][1],z:d[c][2]}}};this.getPoint=function(b){v=(this.points.length-1)*b;u=Math.floor(v);t=v-u;x[0]=0===u?u:u-1;x[1]=u;x[2]=u>this.points.length-2?this.points.length-1:u+1;x[3]=u>this.points.length-3?this.points.length-1:u+2;q=this.points[x[0]];l=this.points[x[1]];j=this.points[x[2]];o=this.points[x[3]];s=t*t;r=t*s;w.x=y(q.x,l.x,j.x,o.x,t,s,r);w.y=y(q.y,l.y,j.y,o.y,t,s,r);w.z=y(q.z,l.z,j.z,o.z,t,s,r);return w};this.getControlPointsArray=function(){var f,e,h=this.points.length,g=[];for(f=0;f<h;f++){e=this.points[f],g[f]=[e.x,e.y,e.z]}return g};this.getLength=function(E){var D,C,B,A=D=D=0,p=new THREE.Vector3,n=new THREE.Vector3,m=[],k=0;m[0]=0;E||(E=100);C=this.points.length*E;p.copy(this.points[0]);for(E=1;E<C;E++){D=E/C,B=this.getPoint(D),n.copy(B),k+=n.distanceTo(p),p.copy(B),D*=this.points.length-1,D=Math.floor(D),D!=A&&(m[D]=k,A=D)}m[m.length]=k;return{chunks:m,total:k}};this.reparametrizeByArcLength=function(G){var F,E,D,C,B,A,p=[],n=new THREE.Vector3,m=this.getLength();p.push(n.copy(this.points[0]).clone());for(F=1;F<this.points.length;F++){E=m.chunks[F]-m.chunks[F-1];A=Math.ceil(G*E/m.total);C=(F-1)/(this.points.length-1);B=F/(this.points.length-1);for(E=1;E<A-1;E++){D=C+E*(1/A)*(B-C),D=this.getPoint(D),p.push(n.copy(D).clone())}p.push(n.copy(this.points[F]).clone())}this.points=p}};THREE.Triangle=function(e,d,f){this.a=new THREE.Vector3;this.b=new THREE.Vector3;this.c=new THREE.Vector3;void 0!==e&&(void 0!==d&&void 0!==f)&&(this.a.copy(e),this.b.copy(d),this.c.copy(f))};THREE.Triangle.normal=function(f,e,h,g){g=g||new THREE.Vector3;g.sub(h,e);THREE.Triangle.__v0.sub(f,e);g.crossSelf(THREE.Triangle.__v0);f=g.lengthSq();return 0<f?g.multiplyScalar(1/Math.sqrt(f)):g.set(0,0,0)};THREE.Triangle.barycoordFromPoint=function(i,h,n,m,l){THREE.Triangle.__v0.sub(m,h);THREE.Triangle.__v1.sub(n,h);THREE.Triangle.__v2.sub(i,h);var i=THREE.Triangle.__v0.dot(THREE.Triangle.__v0),h=THREE.Triangle.__v0.dot(THREE.Triangle.__v1),n=THREE.Triangle.__v0.dot(THREE.Triangle.__v2),k=THREE.Triangle.__v1.dot(THREE.Triangle.__v1),m=THREE.Triangle.__v1.dot(THREE.Triangle.__v2),j=i*k-h*h,l=l||new THREE.Vector3;if(0==j){return l.set(-2,-1,-1)}j=1/j;k=(k*n-h*m)*j;i=(i*m-h*n)*j;return l.set(1-k-i,i,k)};THREE.Triangle.containsPoint=function(f,e,h,g){f=THREE.Triangle.barycoordFromPoint(f,e,h,g,THREE.Triangle.__v3);return 0<=f.x&&0<=f.y&&1>=f.x+f.y};THREE.Triangle.prototype={constructor:THREE.Triangle,set:function(e,d,f){this.a.copy(e);this.b.copy(d);this.c.copy(f);return this},setFromPointsAndIndices:function(f,e,h,g){this.a.copy(f[e]);this.b.copy(f[h]);this.c.copy(f[g]);return this},copy:function(b){this.a.copy(b.a);this.b.copy(b.b);this.c.copy(b.c);return this},area:function(){THREE.Triangle.__v0.sub(this.c,this.b);THREE.Triangle.__v1.sub(this.a,this.b);return 0.5*THREE.Triangle.__v0.crossSelf(THREE.Triangle.__v1).length()},midpoint:function(b){return(b||new THREE.Vector3).add(this.a,this.b).addSelf(this.c).multiplyScalar(1/3)},normal:function(b){return THREE.Triangle.normal(this.a,this.b,this.c,b)},plane:function(b){return(b||new THREE.Plane).setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(d,c){return THREE.Triangle.barycoordFromPoint(d,this.a,this.b,this.c,c)},containsPoint:function(b){return THREE.Triangle.containsPoint(b,this.a,this.b,this.c)},equals:function(b){return b.a.equals(this.a)&&b.b.equals(this.b)&&b.c.equals(this.c)},clone:function(){return(new THREE.Triangle).copy(this)}};THREE.Triangle.__v0=new THREE.Vector3;THREE.Triangle.__v1=new THREE.Vector3;THREE.Triangle.__v2=new THREE.Vector3;THREE.Triangle.__v3=new THREE.Vector3;THREE.Vertex=function(b){console.warn("THREE.Vertex has been DEPRECATED. Use THREE.Vector3 instead.");return b};THREE.UV=function(d,c){console.warn("THREE.UV has been DEPRECATED. Use THREE.Vector2 instead.");return new THREE.Vector2(d,c)};THREE.Clock=function(b){this.autoStart=void 0!==b?b:!0;this.elapsedTime=this.oldTime=this.startTime=0;this.running=!1};THREE.Clock.prototype.start=function(){this.oldTime=this.startTime=Date.now();this.running=!0};THREE.Clock.prototype.stop=function(){this.getElapsedTime();this.running=!1};THREE.Clock.prototype.getElapsedTime=function(){this.getDelta();return this.elapsedTime};THREE.Clock.prototype.getDelta=function(){var d=0;this.autoStart&&!this.running&&this.start();if(this.running){var c=Date.now(),d=0.001*(c-this.oldTime);this.oldTime=c;this.elapsedTime+=d}return d};THREE.EventDispatcher=function(){var b={};this.addEventListener=function(a,d){void 0===b[a]&&(b[a]=[]);-1===b[a].indexOf(d)&&b[a].push(d)};this.removeEventListener=function(a,f){var e=b[a].indexOf(f);-1!==e&&b[a].splice(e,1)};this.dispatchEvent=function(a){var h=b[a.type];if(void 0!==h){a.target=this;for(var g=0,f=h.length;g<f;g++){h[g].call(this,a)}}}};(function(r){r.Raycaster=function(a,h,g,f){this.ray=new r.Ray(a,h);0<this.ray.direction.length()&&this.ray.direction.normalize();this.near=g||0;this.far=f||Infinity};var q=new r.Sphere,p=new r.Ray,o=new r.Plane,n=new r.Vector3,m=new r.Matrix4,l=function(d,c){return d.distance-c.distance};new r.Vector3;new r.Vector3;new r.Vector3;var k=function(D,y,w){if(D instanceof r.Particle){y=y.ray.distanceToPoint(D.matrixWorld.getPosition());if(y>D.scale.x){return w}w.push({distance:y,point:D.position,face:null,object:D})}else{if(D instanceof r.Mesh){q.set(D.matrixWorld.getPosition(),D.geometry.boundingSphere.radius*D.matrixWorld.getMaxScaleOnAxis());if(!y.ray.isIntersectionSphere(q)){return w}var f=D.geometry,a=f.vertices,K=D.material instanceof r.MeshFaceMaterial,v=!0===K?D.material.materials:null,c=D.material.side,H,d,G,J=y.precision;D.matrixRotationWorld.extractRotation(D.matrixWorld);m.getInverse(D.matrixWorld);p.copy(y.ray).transform(m);for(var I=0,b=f.faces.length;I<b;I++){var e=f.faces[I],c=!0===K?v[e.materialIndex]:D.material;if(void 0!==c){o.setFromNormalAndCoplanarPoint(e.normal,a[e.a]);var E=p.distanceToPlane(o);if(!(Math.abs(E)<J)&&!(0>E)){c=c.side;if(c!==r.DoubleSide&&(H=p.direction.dot(o.normal),!(c===r.FrontSide?0>H:0<H))){continue}if(!(E<y.near||E>y.far)){n=p.at(E,n);if(e instanceof r.Face3){if(c=a[e.a],H=a[e.b],d=a[e.c],!r.Triangle.containsPoint(n,c,H,d)){continue}}else{if(e instanceof r.Face4){if(c=a[e.a],H=a[e.b],d=a[e.c],G=a[e.d],!r.Triangle.containsPoint(n,c,H,G)&&!r.Triangle.containsPoint(n,H,d,G)){continue}}else{throw Error("face type not supported")}}w.push({distance:E,point:y.ray.at(E),face:e,faceIndex:I,object:D})}}}}}}},j=function(g,f,s){for(var g=g.getDescendants(),i=0,h=g.length;i<h;i++){k(g[i],f,s)}};r.Raycaster.prototype.precision=0.0001;r.Raycaster.prototype.set=function(d,c){this.ray.set(d,c);0<this.ray.direction.length()&&this.ray.direction.normalize()};r.Raycaster.prototype.intersectObject=function(e,d){var f=[];!0===d&&j(e,this,f);k(e,this,f);f.sort(l);return f};r.Raycaster.prototype.intersectObjects=function(g,f){for(var s=[],i=0,h=g.length;i<h;i++){k(g[i],this,s),!0===f&&j(g[i],this,s)}s.sort(l);return s}})(THREE);THREE.Object3D=function(){this.id=THREE.Object3DIdCount++;this.name="";this.properties={};this.parent=void 0;this.children=[];this.up=new THREE.Vector3(0,1,0);this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.eulerOrder=THREE.Object3D.defaultEulerOrder;this.scale=new THREE.Vector3(1,1,1);this.renderDepth=null;this.rotationAutoUpdate=!0;this.matrix=new THREE.Matrix4;this.matrixWorld=new THREE.Matrix4;this.matrixRotationWorld=new THREE.Matrix4;this.matrixWorldNeedsUpdate=this.matrixAutoUpdate=!0;this.quaternion=new THREE.Quaternion;this.useQuaternion=!1;this.visible=!0;this.receiveShadow=this.castShadow=!1;this.frustumCulled=!0;this._vector=new THREE.Vector3};THREE.Object3D.prototype={constructor:THREE.Object3D,applyMatrix:function(b){this.matrix.multiply(b,this.matrix);this.scale.getScaleFromMatrix(this.matrix);b=(new THREE.Matrix4).extractRotation(this.matrix);this.rotation.setEulerFromRotationMatrix(b,this.eulerOrder);this.position.getPositionFromMatrix(this.matrix)},translate:function(d,c){this.matrix.rotateAxis(c);this.position.addSelf(c.multiplyScalar(d))},translateX:function(b){this.translate(b,this._vector.set(1,0,0))},translateY:function(b){this.translate(b,this._vector.set(0,1,0))},translateZ:function(b){this.translate(b,this._vector.set(0,0,1))},localToWorld:function(b){return this.matrixWorld.multiplyVector3(b)},worldToLocal:function(b){return THREE.Object3D.__m1.getInverse(this.matrixWorld).multiplyVector3(b)},lookAt:function(b){this.matrix.lookAt(b,this.position,this.up);this.rotationAutoUpdate&&(!1===this.useQuaternion?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))},add:function(d){if(d===this){console.warn("THREE.Object3D.add: An object can't be added as a child of itself.")}else{if(d instanceof THREE.Object3D){void 0!==d.parent&&d.parent.remove(d);d.parent=this;this.children.push(d);for(var c=this;void 0!==c.parent;){c=c.parent}void 0!==c&&c instanceof THREE.Scene&&c.__addObject(d)}}},remove:function(d){var c=this.children.indexOf(d);if(-1!==c){d.parent=void 0;this.children.splice(c,1);for(c=this;void 0!==c.parent;){c=c.parent}void 0!==c&&c instanceof THREE.Scene&&c.__removeObject(d)}},traverse:function(e){e(this);for(var d=0,f=this.children.length;d<f;d++){this.children[d].traverse(e)}},getChildByName:function(g,f){for(var j=0,i=this.children.length;j<i;j++){var h=this.children[j];if(h.name===g||!0===f&&(h=h.getChildByName(g,f),void 0!==h)){return h}}},getDescendants:function(e){void 0===e&&(e=[]);Array.prototype.push.apply(e,this.children);for(var d=0,f=this.children.length;d<f;d++){this.children[d].getDescendants(e)}return e},updateMatrix:function(){this.matrix.setPosition(this.position);!1===this.useQuaternion?this.matrix.setRotationFromEuler(this.rotation,this.eulerOrder):this.matrix.setRotationFromQuaternion(this.quaternion);(1!==this.scale.x||1!==this.scale.y||1!==this.scale.z)&&this.matrix.scale(this.scale);this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){!0===this.matrixAutoUpdate&&this.updateMatrix();if(!0===this.matrixWorldNeedsUpdate||!0===e){void 0===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0}for(var d=0,f=this.children.length;d<f;d++){this.children[d].updateMatrixWorld(e)}},clone:function(d){void 0===d&&(d=new THREE.Object3D);d.name=this.name;d.up.copy(this.up);d.position.copy(this.position);d.rotation instanceof THREE.Vector3&&d.rotation.copy(this.rotation);d.eulerOrder=this.eulerOrder;d.scale.copy(this.scale);d.renderDepth=this.renderDepth;d.rotationAutoUpdate=this.rotationAutoUpdate;d.matrix.copy(this.matrix);d.matrixWorld.copy(this.matrixWorld);d.matrixRotationWorld.copy(this.matrixRotationWorld);d.matrixAutoUpdate=this.matrixAutoUpdate;d.matrixWorldNeedsUpdate=this.matrixWorldNeedsUpdate;d.quaternion.copy(this.quaternion);d.useQuaternion=this.useQuaternion;d.visible=this.visible;d.castShadow=this.castShadow;d.receiveShadow=this.receiveShadow;d.frustumCulled=this.frustumCulled;for(var c=0;c<this.children.length;c++){d.add(this.children[c].clone())}return d}};THREE.Object3D.__m1=new THREE.Matrix4;THREE.Object3D.defaultEulerOrder="XYZ";THREE.Object3DIdCount=0;THREE.Projector=function(){function at(){if(an===al){var b=new THREE.RenderableObject;am.push(b);al++;an++;return b}return am[an++]}function ar(){if(aj===af){var b=new THREE.RenderableVertex;ag.push(b);af++;aj++;return b}return ag[aj++]}function aq(d,c){return c.z-d.z}function ap(k,i){var r=0,q=1,p=k.z+k.w,n=i.z+i.w,m=-k.z+k.w,l=-i.z+i.w;if(0<=p&&0<=n&&0<=m&&0<=l){return !0}if(0>p&&0>n||0>m&&0>l){return !1}0>p?r=Math.max(r,p/(p-n)):0>n&&(q=Math.min(q,p/(p-n)));0>m?r=Math.max(r,m/(m-l)):0>l&&(q=Math.min(q,m/(m-l)));if(q<r){return !1}k.lerpSelf(i,r);i.lerpSelf(k,1-q);return !0}var ao,an,am=[],al=0,ak,aj,ag=[],af=0,ah,ad,ac=[],ai=0,ae,aa=[],U=0,Z,ab,Q=[],T=0,V,X,N=[],O=0,M={objects:[],sprites:[],lights:[],elements:[]},W=new THREE.Vector3,S=new THREE.Vector4,v=new THREE.Matrix4,Y=new THREE.Matrix4,E=new THREE.Matrix3,w=new THREE.Frustum,j=new THREE.Vector4,o=new THREE.Vector4;this.projectVector=function(d,c){c.matrixWorldInverse.getInverse(c.matrixWorld);v.multiply(c.projectionMatrix,c.matrixWorldInverse);v.multiplyVector3(d);return d};this.unprojectVector=function(d,c){c.projectionMatrixInverse.getInverse(c.projectionMatrix);v.multiply(c.matrixWorld,c.projectionMatrixInverse);v.multiplyVector3(d);return d};this.pickingRay=function(e,d){e.z=-1;var f=new THREE.Vector3(e.x,e.y,1);this.unprojectVector(e,d);this.unprojectVector(f,d);f.subSelf(e).normalize();return new THREE.Raycaster(e,f)};this.projectScene=function(C,B,x,c){var i=B.near,A=B.far,q=!1,m,D,y,k,a,f,F,z,t,e,u,d,r,s,n;X=ab=ae=ad=0;M.elements.length=0;C.updateMatrixWorld();void 0===B.parent&&B.updateMatrixWorld();B.matrixWorldInverse.getInverse(B.matrixWorld);v.multiply(B.projectionMatrix,B.matrixWorldInverse);w.setFromMatrix(v);an=0;M.objects.length=0;M.sprites.length=0;M.lights.length=0;var l=function(g){for(var G=0,p=g.children.length;G<p;G++){var h=g.children[G];if(!1!==h.visible){if(h instanceof THREE.Light){M.lights.push(h)}else{if(h instanceof THREE.Mesh||h instanceof THREE.Line){if(!1===h.frustumCulled||!0===w.contains(h)){ao=at(),ao.object=h,null!==h.renderDepth?ao.z=h.renderDepth:(W.copy(h.matrixWorld.getPosition()),v.multiplyVector3(W),ao.z=W.z),M.objects.push(ao)}}else{h instanceof THREE.Sprite||h instanceof THREE.Particle?(ao=at(),ao.object=h,null!==h.renderDepth?ao.z=h.renderDepth:(W.copy(h.matrixWorld.getPosition()),v.multiplyVector3(W),ao.z=W.z),M.sprites.push(ao)):(ao=at(),ao.object=h,null!==h.renderDepth?ao.z=h.renderDepth:(W.copy(h.matrixWorld.getPosition()),v.multiplyVector3(W),ao.z=W.z),M.objects.push(ao))}}l(h)}}};l(C);!0===x&&M.objects.sort(aq);C=0;for(x=M.objects.length;C<x;C++){if(z=M.objects[C].object,t=z.matrixWorld,aj=0,z instanceof THREE.Mesh){e=z.geometry;y=e.vertices;u=e.faces;e=e.faceVertexUvs;E.getInverse(t);E.transpose();r=z.material instanceof THREE.MeshFaceMaterial;s=!0===r?z.material:null;m=0;for(D=y.length;m<D;m++){ak=ar(),ak.positionWorld.copy(y[m]),t.multiplyVector3(ak.positionWorld),ak.positionScreen.copy(ak.positionWorld),v.multiplyVector4(ak.positionScreen),ak.positionScreen.x/=ak.positionScreen.w,ak.positionScreen.y/=ak.positionScreen.w,ak.visible=ak.positionScreen.z>i&&ak.positionScreen.z<A}y=0;for(m=u.length;y<m;y++){if(D=u[y],n=!0===r?s.materials[D.materialIndex]:z.material,void 0!==n){f=n.side;if(D instanceof THREE.Face3){if(k=ag[D.a],a=ag[D.b],F=ag[D.c],!0===k.visible&&!0===a.visible&&!0===F.visible){if(q=0>(F.positionScreen.x-k.positionScreen.x)*(a.positionScreen.y-k.positionScreen.y)-(F.positionScreen.y-k.positionScreen.y)*(a.positionScreen.x-k.positionScreen.x),f===THREE.DoubleSide||q===(f===THREE.FrontSide)){ad===ai?(d=new THREE.RenderableFace3,ac.push(d),ai++,ad++,ah=d):ah=ac[ad++],ah.v1.copy(k),ah.v2.copy(a),ah.v3.copy(F)}else{continue}}else{continue}}else{if(D instanceof THREE.Face4){if(k=ag[D.a],a=ag[D.b],F=ag[D.c],d=ag[D.d],!0===k.visible&&!0===a.visible&&!0===F.visible&&!0===d.visible){if(q=0>(d.positionScreen.x-k.positionScreen.x)*(a.positionScreen.y-k.positionScreen.y)-(d.positionScreen.y-k.positionScreen.y)*(a.positionScreen.x-k.positionScreen.x)||0>(a.positionScreen.x-F.positionScreen.x)*(d.positionScreen.y-F.positionScreen.y)-(a.positionScreen.y-F.positionScreen.y)*(d.positionScreen.x-F.positionScreen.x),f===THREE.DoubleSide||q===(f===THREE.FrontSide)){if(ae===U){var b=new THREE.RenderableFace4;aa.push(b);U++;ae++;ah=b}else{ah=aa[ae++]}ah.v1.copy(k);ah.v2.copy(a);ah.v3.copy(F);ah.v4.copy(d)}else{continue}}else{continue}}}ah.normalWorld.copy(D.normal);!1===q&&(f===THREE.BackSide||f===THREE.DoubleSide)&&ah.normalWorld.negate();E.multiplyVector3(ah.normalWorld).normalize();ah.centroidWorld.copy(D.centroid);t.multiplyVector3(ah.centroidWorld);ah.centroidScreen.copy(ah.centroidWorld);v.multiplyVector3(ah.centroidScreen);F=D.vertexNormals;k=0;for(a=F.length;k<a;k++){d=ah.vertexNormalsWorld[k],d.copy(F[k]),!1===q&&(f===THREE.BackSide||f===THREE.DoubleSide)&&d.negate(),E.multiplyVector3(d).normalize()}ah.vertexNormalsLength=F.length;k=0;for(a=e.length;k<a;k++){if(d=e[k][y],void 0!==d){f=0;for(F=d.length;f<F;f++){ah.uvs[k][f]=d[f]}}}ah.color=D.color;ah.material=n;ah.z=ah.centroidScreen.z;M.elements.push(ah)}}}else{if(z instanceof THREE.Line){Y.multiply(v,t);y=z.geometry.vertices;k=ar();k.positionScreen.copy(y[0]);Y.multiplyVector4(k.positionScreen);t=z.type===THREE.LinePieces?2:1;m=1;for(D=y.length;m<D;m++){k=ar(),k.positionScreen.copy(y[m]),Y.multiplyVector4(k.positionScreen),0<(m+1)%t||(a=ag[aj-2],j.copy(k.positionScreen),o.copy(a.positionScreen),!0===ap(j,o)&&(j.multiplyScalar(1/j.w),o.multiplyScalar(1/o.w),ab===T?(u=new THREE.RenderableLine,Q.push(u),T++,ab++,Z=u):Z=Q[ab++],Z.v1.positionScreen.copy(j),Z.v2.positionScreen.copy(o),Z.z=Math.max(j.z,o.z),Z.material=z.material,M.elements.push(Z)))}}}}C=0;for(x=M.sprites.length;C<x;C++){z=M.sprites[C].object,t=z.matrixWorld,z instanceof THREE.Particle&&(S.set(t.elements[12],t.elements[13],t.elements[14],1),v.multiplyVector4(S),S.z/=S.w,0<S.z&&1>S.z&&(X===O?(i=new THREE.RenderableParticle,N.push(i),O++,X++,V=i):V=N[X++],V.object=z,V.x=S.x/S.w,V.y=S.y/S.w,V.z=S.z,V.rotation=z.rotation.z,V.scale.x=z.scale.x*Math.abs(V.x-(S.x+B.projectionMatrix.elements[0])/(S.w+B.projectionMatrix.elements[12])),V.scale.y=z.scale.y*Math.abs(V.y-(S.y+B.projectionMatrix.elements[5])/(S.w+B.projectionMatrix.elements[13])),V.material=z.material,M.elements.push(V)))}!0===c&&M.elements.sort(aq);return M}};THREE.Face3=function(h,g,l,k,j,i){this.a=h;this.b=g;this.c=l;this.normal=k instanceof THREE.Vector3?k:new THREE.Vector3;this.vertexNormals=k instanceof Array?k:[];this.color=j instanceof THREE.Color?j:new THREE.Color;this.vertexColors=j instanceof Array?j:[];this.vertexTangents=[];this.materialIndex=void 0!==i?i:0;this.centroid=new THREE.Vector3};THREE.Face3.prototype={constructor:THREE.Face3,clone:function(){var e=new THREE.Face3(this.a,this.b,this.c);e.normal.copy(this.normal);e.color.copy(this.color);e.centroid.copy(this.centroid);e.materialIndex=this.materialIndex;var d,f;d=0;for(f=this.vertexNormals.length;d<f;d++){e.vertexNormals[d]=this.vertexNormals[d].clone()}d=0;for(f=this.vertexColors.length;d<f;d++){e.vertexColors[d]=this.vertexColors[d].clone()}d=0;for(f=this.vertexTangents.length;d<f;d++){e.vertexTangents[d]=this.vertexTangents[d].clone()}return e}};THREE.Face4=function(i,h,n,m,l,k,j){this.a=i;this.b=h;this.c=n;this.d=m;this.normal=l instanceof THREE.Vector3?l:new THREE.Vector3;this.vertexNormals=l instanceof Array?l:[];this.color=k instanceof THREE.Color?k:new THREE.Color;this.vertexColors=k instanceof Array?k:[];this.vertexTangents=[];this.materialIndex=void 0!==j?j:0;this.centroid=new THREE.Vector3};THREE.Face4.prototype={constructor:THREE.Face4,clone:function(){var e=new THREE.Face4(this.a,this.b,this.c,this.d);e.normal.copy(this.normal);e.color.copy(this.color);e.centroid.copy(this.centroid);e.materialIndex=this.materialIndex;var d,f;d=0;for(f=this.vertexNormals.length;d<f;d++){e.vertexNormals[d]=this.vertexNormals[d].clone()}d=0;for(f=this.vertexColors.length;d<f;d++){e.vertexColors[d]=this.vertexColors[d].clone()}d=0;for(f=this.vertexTangents.length;d<f;d++){e.vertexTangents[d]=this.vertexTangents[d].clone()}return e}};THREE.Geometry=function(){THREE.EventDispatcher.call(this);this.id=THREE.GeometryIdCount++;this.name="";this.vertices=[];this.colors=[];this.normals=[];this.faces=[];this.faceUvs=[[]];this.faceVertexUvs=[[]];this.morphTargets=[];this.morphColors=[];this.morphNormals=[];this.skinWeights=[];this.skinIndices=[];this.lineDistances=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.dynamic=!0;this.buffersNeedUpdate=this.lineDistancesNeedUpdate=this.colorsNeedUpdate=this.tangentsNeedUpdate=this.normalsNeedUpdate=this.uvsNeedUpdate=this.elementsNeedUpdate=this.verticesNeedUpdate=!1};THREE.Geometry.prototype={constructor:THREE.Geometry,applyMatrix:function(i){var h=new THREE.Matrix3;h.getInverse(i).transpose();for(var n=0,m=this.vertices.length;n<m;n++){i.multiplyVector3(this.vertices[n])}n=0;for(m=this.faces.length;n<m;n++){var l=this.faces[n];h.multiplyVector3(l.normal).normalize();for(var k=0,j=l.vertexNormals.length;k<j;k++){h.multiplyVector3(l.vertexNormals[k]).normalize()}i.multiplyVector3(l.centroid)}},computeCentroids:function(){var e,d,f;e=0;for(d=this.faces.length;e<d;e++){f=this.faces[e],f.centroid.set(0,0,0),f instanceof THREE.Face3?(f.centroid.addSelf(this.vertices[f.a]),f.centroid.addSelf(this.vertices[f.b]),f.centroid.addSelf(this.vertices[f.c]),f.centroid.divideScalar(3)):f instanceof THREE.Face4&&(f.centroid.addSelf(this.vertices[f.a]),f.centroid.addSelf(this.vertices[f.b]),f.centroid.addSelf(this.vertices[f.c]),f.centroid.addSelf(this.vertices[f.d]),f.centroid.divideScalar(4))}},computeFaceNormals:function(){var j,i,p,o,n,m,l=new THREE.Vector3,k=new THREE.Vector3;j=0;for(i=this.faces.length;j<i;j++){p=this.faces[j],o=this.vertices[p.a],n=this.vertices[p.b],m=this.vertices[p.c],l.sub(m,n),k.sub(o,n),l.crossSelf(k),l.normalize(),p.normal.copy(l)}},computeVertexNormals:function(z){var y,x,w,v;if(void 0===this.__tmpVertices){v=this.__tmpVertices=Array(this.vertices.length);y=0;for(x=this.vertices.length;y<x;y++){v[y]=new THREE.Vector3}y=0;for(x=this.faces.length;y<x;y++){w=this.faces[y],w instanceof THREE.Face3?w.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]:w instanceof THREE.Face4&&(w.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3])}}else{v=this.__tmpVertices;y=0;for(x=this.vertices.length;y<x;y++){v[y].set(0,0,0)}}if(z){var u,t,s,r=new THREE.Vector3,q=new THREE.Vector3,l=new THREE.Vector3,j=new THREE.Vector3,o=new THREE.Vector3;y=0;for(x=this.faces.length;y<x;y++){w=this.faces[y],w instanceof THREE.Face3?(z=this.vertices[w.a],u=this.vertices[w.b],t=this.vertices[w.c],r.sub(t,u),q.sub(z,u),r.crossSelf(q),v[w.a].addSelf(r),v[w.b].addSelf(r),v[w.c].addSelf(r)):w instanceof THREE.Face4&&(z=this.vertices[w.a],u=this.vertices[w.b],t=this.vertices[w.c],s=this.vertices[w.d],l.sub(s,u),q.sub(z,u),l.crossSelf(q),v[w.a].addSelf(l),v[w.b].addSelf(l),v[w.d].addSelf(l),j.sub(s,t),o.sub(u,t),j.crossSelf(o),v[w.b].addSelf(j),v[w.c].addSelf(j),v[w.d].addSelf(j))}}else{y=0;for(x=this.faces.length;y<x;y++){w=this.faces[y],w instanceof THREE.Face3?(v[w.a].addSelf(w.normal),v[w.b].addSelf(w.normal),v[w.c].addSelf(w.normal)):w instanceof THREE.Face4&&(v[w.a].addSelf(w.normal),v[w.b].addSelf(w.normal),v[w.c].addSelf(w.normal),v[w.d].addSelf(w.normal))}}y=0;for(x=this.vertices.length;y<x;y++){v[y].normalize()}y=0;for(x=this.faces.length;y<x;y++){w=this.faces[y],w instanceof THREE.Face3?(w.vertexNormals[0].copy(v[w.a]),w.vertexNormals[1].copy(v[w.b]),w.vertexNormals[2].copy(v[w.c])):w instanceof THREE.Face4&&(w.vertexNormals[0].copy(v[w.a]),w.vertexNormals[1].copy(v[w.b]),w.vertexNormals[2].copy(v[w.c]),w.vertexNormals[3].copy(v[w.d]))}},computeMorphNormals:function(){var t,s,r,q,p;r=0;for(q=this.faces.length;r<q;r++){p=this.faces[r];p.__originalFaceNormal?p.__originalFaceNormal.copy(p.normal):p.__originalFaceNormal=p.normal.clone();p.__originalVertexNormals||(p.__originalVertexNormals=[]);t=0;for(s=p.vertexNormals.length;t<s;t++){p.__originalVertexNormals[t]?p.__originalVertexNormals[t].copy(p.vertexNormals[t]):p.__originalVertexNormals[t]=p.vertexNormals[t].clone()}}var o=new THREE.Geometry;o.faces=this.faces;t=0;for(s=this.morphTargets.length;t<s;t++){if(!this.morphNormals[t]){this.morphNormals[t]={};this.morphNormals[t].faceNormals=[];this.morphNormals[t].vertexNormals=[];var n=this.morphNormals[t].faceNormals,m=this.morphNormals[t].vertexNormals,l,j;r=0;for(q=this.faces.length;r<q;r++){p=this.faces[r],l=new THREE.Vector3,j=p instanceof THREE.Face3?{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3}:{a:new THREE.Vector3,b:new THREE.Vector3,c:new THREE.Vector3,d:new THREE.Vector3},n.push(l),m.push(j)}}n=this.morphNormals[t];o.vertices=this.morphTargets[t].vertices;o.computeFaceNormals();o.computeVertexNormals();r=0;for(q=this.faces.length;r<q;r++){p=this.faces[r],l=n.faceNormals[r],j=n.vertexNormals[r],l.copy(p.normal),p instanceof THREE.Face3?(j.a.copy(p.vertexNormals[0]),j.b.copy(p.vertexNormals[1]),j.c.copy(p.vertexNormals[2])):(j.a.copy(p.vertexNormals[0]),j.b.copy(p.vertexNormals[1]),j.c.copy(p.vertexNormals[2]),j.d.copy(p.vertexNormals[3]))}}r=0;for(q=this.faces.length;r<q;r++){p=this.faces[r],p.normal=p.__originalFaceNormal,p.vertexNormals=p.__originalVertexNormals}},computeTangents:function(){function am(h,g,n,m,k,i,l){af=h.vertices[g];ae=h.vertices[n];ad=h.vertices[m];aa=ag[k];Z=ag[i];ab=ag[l];V=ae.x-af.x;T=ad.x-af.x;ac=ae.y-af.y;X=ad.y-af.y;Q=ae.z-af.z;W=ad.z-af.z;M=Z.x-aa.x;R=ab.x-aa.x;P=Z.y-aa.y;U=ab.y-aa.y;Y=1/(M*U-R*P);K.set((U*V-P*T)*Y,(U*ac-P*X)*Y,(U*Q-P*W)*Y);j.set((M*T-R*V)*Y,(M*X-R*ac)*Y,(M*W-R*Q)*Y);N[g].addSelf(K);N[n].addSelf(K);N[m].addSelf(K);O[g].addSelf(j);O[n].addSelf(j);O[m].addSelf(j)}var al,ak,aj,ai,ah,ag,af,ae,ad,aa,Z,ab,V,T,ac,X,Q,W,M,R,P,U,Y,v,N=[],O=[],K=new THREE.Vector3,j=new THREE.Vector3,S=new THREE.Vector3,o=new THREE.Vector3,E=new THREE.Vector3;al=0;for(ak=this.vertices.length;al<ak;al++){N[al]=new THREE.Vector3,O[al]=new THREE.Vector3}al=0;for(ak=this.faces.length;al<ak;al++){ah=this.faces[al],ag=this.faceVertexUvs[0][al],ah instanceof THREE.Face3?am(this,ah.a,ah.b,ah.c,0,1,2):ah instanceof THREE.Face4&&(am(this,ah.a,ah.b,ah.d,0,1,3),am(this,ah.b,ah.c,ah.d,1,2,3))}var w=["a","b","c","d"];al=0;for(ak=this.faces.length;al<ak;al++){ah=this.faces[al];for(aj=0;aj<ah.vertexNormals.length;aj++){E.copy(ah.vertexNormals[aj]),ai=ah[w[aj]],v=N[ai],S.copy(v),S.subSelf(E.multiplyScalar(E.dot(v))).normalize(),o.cross(ah.vertexNormals[aj],v),ai=o.dot(O[ai]),ai=0>ai?-1:1,ah.vertexTangents[aj]=new THREE.Vector4(S.x,S.y,S.z,ai)}}this.hasTangents=!0},computeLineDistances:function(){for(var f=0,e=this.vertices,h=0,g=e.length;h<g;h++){0<h&&(f+=e[h].distanceTo(e[h-1])),this.lineDistances[h]=f}},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);this.boundingSphere.setFromCenterAndPoints(this.boundingSphere.center,this.vertices)},mergeVertices:function(){var r={},q=[],p=[],o,n=Math.pow(10,4),m,l,k,j;m=0;for(l=this.vertices.length;m<l;m++){o=this.vertices[m],o=[Math.round(o.x*n),Math.round(o.y*n),Math.round(o.z*n)].join("_"),void 0===r[o]?(r[o]=m,q.push(this.vertices[m]),p[m]=q.length-1):p[m]=p[r[o]]}m=0;for(l=this.faces.length;m<l;m++){if(r=this.faces[m],r instanceof THREE.Face3){r.a=p[r.a],r.b=p[r.b],r.c=p[r.c]}else{if(r instanceof THREE.Face4){r.a=p[r.a];r.b=p[r.b];r.c=p[r.c];r.d=p[r.d];o=[r.a,r.b,r.c,r.d];for(n=3;0<n;n--){if(o.indexOf(r["abcd"[n]])!==n){o.splice(n,1);this.faces[m]=new THREE.Face3(o[0],o[1],o[2],r.normal,r.color,r.materialIndex);o=0;for(k=this.faceVertexUvs.length;o<k;o++){(j=this.faceVertexUvs[o][m])&&j.splice(n,1)}this.faces[m].vertexColors=r.vertexColors;break}}}}}p=this.vertices.length-q.length;this.vertices=q;return p},clone:function(){for(var j=new THREE.Geometry,i=this.vertices,p=0,o=i.length;p<o;p++){j.vertices.push(i[p].clone())}i=this.faces;p=0;for(o=i.length;p<o;p++){j.faces.push(i[p].clone())}i=this.faceVertexUvs[0];p=0;for(o=i.length;p<o;p++){for(var n=i[p],m=[],l=0,k=n.length;l<k;l++){m.push(new THREE.Vector2(n[l].x,n[l].y))}j.faceVertexUvs[0].push(m)}return j},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.GeometryIdCount=0;THREE.BufferGeometry=function(){THREE.EventDispatcher.call(this);this.id=THREE.GeometryIdCount++;this.attributes={};this.dynamic=!1;this.offsets=[];this.boundingSphere=this.boundingBox=null;this.hasTangents=!1;this.morphTargets=[]};THREE.BufferGeometry.prototype={constructor:THREE.BufferGeometry,applyMatrix:function(e){var d,f;this.attributes.position&&(d=this.attributes.position.array);this.attributes.normal&&(f=this.attributes.normal.array);void 0!==d&&(e.multiplyVector3Array(d),this.verticesNeedUpdate=!0);void 0!==f&&(d=new THREE.Matrix3,d.getInverse(e).transpose(),d.multiplyVector3Array(f),this.normalizeNormals(),this.normalsNeedUpdate=!0)},computeBoundingBox:function(){null===this.boundingBox&&(this.boundingBox=new THREE.Box3);var i=this.attributes.position.array;if(i){var h=this.boundingBox,n,m,l;3<=i.length&&(h.min.x=h.max.x=i[0],h.min.y=h.max.y=i[1],h.min.z=h.max.z=i[2]);for(var k=3,j=i.length;k<j;k+=3){n=i[k],m=i[k+1],l=i[k+2],n<h.min.x?h.min.x=n:n>h.max.x&&(h.max.x=n),m<h.min.y?h.min.y=m:m>h.max.y&&(h.max.y=m),l<h.min.z?h.min.z=l:l>h.max.z&&(h.max.z=l)}}if(void 0===i||0===i.length){this.boundingBox.min.set(0,0,0),this.boundingBox.max.set(0,0,0)}},computeBoundingSphere:function(){null===this.boundingSphere&&(this.boundingSphere=new THREE.Sphere);var i=this.attributes.position.array;if(i){for(var h,n=0,m,l,k=0,j=i.length;k<j;k+=3){h=i[k],m=i[k+1],l=i[k+2],h=h*h+m*m+l*l,h>n&&(n=h)}this.boundingSphere.radius=Math.sqrt(n)}},computeVertexNormals:function(){if(this.attributes.position){var N,M,L,K;N=this.attributes.position.array.length;if(void 0===this.attributes.normal){this.attributes.normal={itemSize:3,array:new Float32Array(N),numItems:N}}else{N=0;for(M=this.attributes.normal.array.length;N<M;N++){this.attributes.normal.array[N]=0}}var J=this.attributes.position.array,I=this.attributes.normal.array,H,G,F,E,A,z,C=new THREE.Vector3,v=new THREE.Vector3,t=new THREE.Vector3,D=new THREE.Vector3,y=new THREE.Vector3;if(this.attributes.index){var o=this.attributes.index.array,w=this.offsets;L=0;for(K=w.length;L<K;++L){M=w[L].start;H=w[L].count;var j=w[L].index;N=M;for(M+=H;N<M;N+=3){H=j+o[N],G=j+o[N+1],F=j+o[N+2],E=J[3*H],A=J[3*H+1],z=J[3*H+2],C.set(E,A,z),E=J[3*G],A=J[3*G+1],z=J[3*G+2],v.set(E,A,z),E=J[3*F],A=J[3*F+1],z=J[3*F+2],t.set(E,A,z),D.sub(t,v),y.sub(C,v),D.crossSelf(y),I[3*H]+=D.x,I[3*H+1]+=D.y,I[3*H+2]+=D.z,I[3*G]+=D.x,I[3*G+1]+=D.y,I[3*G+2]+=D.z,I[3*F]+=D.x,I[3*F+1]+=D.y,I[3*F+2]+=D.z}}}else{N=0;for(M=J.length;N<M;N+=9){E=J[N],A=J[N+1],z=J[N+2],C.set(E,A,z),E=J[N+3],A=J[N+4],z=J[N+5],v.set(E,A,z),E=J[N+6],A=J[N+7],z=J[N+8],t.set(E,A,z),D.sub(t,v),y.sub(C,v),D.crossSelf(y),I[N]=D.x,I[N+1]=D.y,I[N+2]=D.z,I[N+3]=D.x,I[N+4]=D.y,I[N+5]=D.z,I[N+6]=D.x,I[N+7]=D.y,I[N+8]=D.z}}this.normalizeNormals();this.normalsNeedUpdate=!0}},normalizeNormals:function(){for(var h=this.attributes.normal.array,g,l,k,j=0,i=h.length;j<i;j+=3){g=h[j],l=h[j+1],k=h[j+2],g=1/Math.sqrt(g*g+l*l+k*k),h[j]*=g,h[j+1]*=g,h[j+2]*=g}},computeTangents:function(){function az(b){ab.x=aw[3*b];ab.y=aw[3*b+1];ab.z=aw[3*b+2];ak.copy(ab);Y=aq[b];j.copy(Y);j.subSelf(ab.multiplyScalar(ab.dot(Y))).normalize();o.cross(ak,Y);Z=o.dot(ap[b]);v=0>Z?-1:1;ar[4*b]=j.x;ar[4*b+1]=j.y;ar[4*b+2]=j.z;ar[4*b+3]=v}if(void 0===this.attributes.index||void 0===this.attributes.position||void 0===this.attributes.normal||void 0===this.attributes.uv){console.warn("Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()")}else{var ay=this.attributes.index.array,ax=this.attributes.position.array,aw=this.attributes.normal.array,av=this.attributes.uv.array,au=ax.length/3;if(void 0===this.attributes.tangent){var at=4*au;this.attributes.tangent={itemSize:4,array:new Float32Array(at),numItems:at}}for(var ar=this.attributes.tangent.array,aq=[],ap=[],at=0;at<au;at++){aq[at]=new THREE.Vector3,ap[at]=new THREE.Vector3}var am,al,an,ai,ah,ao,aj,af,W,ae,ag,T,V,X,ac,au=new THREE.Vector3,at=new THREE.Vector3,Q,S,O,aa,U,w,ad,N=this.offsets;O=0;for(aa=N.length;O<aa;++O){S=N[O].start;U=N[O].count;var E=N[O].index;Q=S;for(S+=U;Q<S;Q+=3){U=E+ay[Q],w=E+ay[Q+1],ad=E+ay[Q+2],am=ax[3*U],al=ax[3*U+1],an=ax[3*U+2],ai=ax[3*w],ah=ax[3*w+1],ao=ax[3*w+2],aj=ax[3*ad],af=ax[3*ad+1],W=ax[3*ad+2],ae=av[2*U],ag=av[2*U+1],T=av[2*w],V=av[2*w+1],X=av[2*ad],ac=av[2*ad+1],ai-=am,am=aj-am,ah-=al,al=af-al,ao-=an,an=W-an,T-=ae,ae=X-ae,V-=ag,ag=ac-ag,ac=1/(T*ag-ae*V),au.set((ag*ai-V*am)*ac,(ag*ah-V*al)*ac,(ag*ao-V*an)*ac),at.set((T*am-ae*ai)*ac,(T*al-ae*ah)*ac,(T*an-ae*ao)*ac),aq[U].addSelf(au),aq[w].addSelf(au),aq[ad].addSelf(au),ap[U].addSelf(at),ap[w].addSelf(at),ap[ad].addSelf(at)}}var j=new THREE.Vector3,o=new THREE.Vector3,ab=new THREE.Vector3,ak=new THREE.Vector3,v,Y,Z;O=0;for(aa=N.length;O<aa;++O){S=N[O].start;U=N[O].count;E=N[O].index;Q=S;for(S+=U;Q<S;Q+=3){U=E+ay[Q],w=E+ay[Q+1],ad=E+ay[Q+2],az(U),az(w),az(ad)}}this.tangentsNeedUpdate=this.hasTangents=!0}},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.Camera=function(){THREE.Object3D.call(this);this.matrixWorldInverse=new THREE.Matrix4;this.projectionMatrix=new THREE.Matrix4;this.projectionMatrixInverse=new THREE.Matrix4};THREE.Camera.prototype=Object.create(THREE.Object3D.prototype);THREE.Camera.prototype.lookAt=function(b){this.matrix.lookAt(this.position,b,this.up);!0===this.rotationAutoUpdate&&(!1===this.useQuaternion?this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder):this.quaternion.copy(this.matrix.decompose()[1]))};THREE.OrthographicCamera=function(h,g,l,k,j,i){THREE.Camera.call(this);this.left=h;this.right=g;this.top=l;this.bottom=k;this.near=void 0!==j?j:0.1;this.far=void 0!==i?i:2000;this.updateProjectionMatrix()};THREE.OrthographicCamera.prototype=Object.create(THREE.Camera.prototype);THREE.OrthographicCamera.prototype.updateProjectionMatrix=function(){this.projectionMatrix.makeOrthographic(this.left,this.right,this.top,this.bottom,this.near,this.far)};THREE.PerspectiveCamera=function(f,e,h,g){THREE.Camera.call(this);this.fov=void 0!==f?f:50;this.aspect=void 0!==e?e:1;this.near=void 0!==h?h:0.1;this.far=void 0!==g?g:2000;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype=Object.create(THREE.Camera.prototype);THREE.PerspectiveCamera.prototype.setLens=function(d,c){void 0===c&&(c=24);this.fov=2*THREE.Math.radToDeg(Math.atan(c/(2*d)));this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.setViewOffset=function(h,g,l,k,j,i){this.fullWidth=h;this.fullHeight=g;this.x=l;this.y=k;this.width=j;this.height=i;this.updateProjectionMatrix()};THREE.PerspectiveCamera.prototype.updateProjectionMatrix=function(){if(this.fullWidth){var f=this.fullWidth/this.fullHeight,e=Math.tan(THREE.Math.degToRad(0.5*this.fov))*this.near,h=-e,g=f*h,f=Math.abs(f*e-g),h=Math.abs(e-h);this.projectionMatrix.makeFrustum(g+this.x*f/this.fullWidth,g+(this.x+this.width)*f/this.fullWidth,e-(this.y+this.height)*h/this.fullHeight,e-this.y*h/this.fullHeight,this.near,this.far)}else{this.projectionMatrix.makePerspective(this.fov,this.aspect,this.near,this.far)}};THREE.Light=function(b){THREE.Object3D.call(this);this.color=new THREE.Color(b)};THREE.Light.prototype=Object.create(THREE.Object3D.prototype);THREE.AmbientLight=function(b){THREE.Light.call(this,b)};THREE.AmbientLight.prototype=Object.create(THREE.Light.prototype);THREE.AreaLight=function(d,c){THREE.Light.call(this,d);this.normal=new THREE.Vector3(0,-1,0);this.right=new THREE.Vector3(1,0,0);this.intensity=void 0!==c?c:1;this.height=this.width=1;this.constantAttenuation=1.5;this.linearAttenuation=0.5;this.quadraticAttenuation=0.1};THREE.AreaLight.prototype=Object.create(THREE.Light.prototype);THREE.DirectionalLight=function(d,c){THREE.Light.call(this,d);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==c?c:1;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5000;this.shadowCameraLeft=-500;this.shadowCameraTop=this.shadowCameraRight=500;this.shadowCameraBottom=-500;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowCascade=!1;this.shadowCascadeOffset=new THREE.Vector3(0,0,-1000);this.shadowCascadeCount=2;this.shadowCascadeBias=[0,0,0];this.shadowCascadeWidth=[512,512,512];this.shadowCascadeHeight=[512,512,512];this.shadowCascadeNearZ=[-1,0.99,0.998];this.shadowCascadeFarZ=[0.99,0.998,1];this.shadowCascadeArray=[];this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.DirectionalLight.prototype=Object.create(THREE.Light.prototype);THREE.HemisphereLight=function(e,d,f){THREE.Light.call(this,e);this.groundColor=new THREE.Color(d);this.position=new THREE.Vector3(0,100,0);this.intensity=void 0!==f?f:1};THREE.HemisphereLight.prototype=Object.create(THREE.Light.prototype);THREE.PointLight=function(e,d,f){THREE.Light.call(this,e);this.position=new THREE.Vector3(0,0,0);this.intensity=void 0!==d?d:1;this.distance=void 0!==f?f:0};THREE.PointLight.prototype=Object.create(THREE.Light.prototype);THREE.SpotLight=function(g,f,j,i,h){THREE.Light.call(this,g);this.position=new THREE.Vector3(0,1,0);this.target=new THREE.Object3D;this.intensity=void 0!==f?f:1;this.distance=void 0!==j?j:0;this.angle=void 0!==i?i:Math.PI/2;this.exponent=void 0!==h?h:10;this.onlyShadow=this.castShadow=!1;this.shadowCameraNear=50;this.shadowCameraFar=5000;this.shadowCameraFov=50;this.shadowCameraVisible=!1;this.shadowBias=0;this.shadowDarkness=0.5;this.shadowMapHeight=this.shadowMapWidth=512;this.shadowMatrix=this.shadowCamera=this.shadowMapSize=this.shadowMap=null};THREE.SpotLight.prototype=Object.create(THREE.Light.prototype);THREE.Loader=function(b){this.statusDomElement=(this.showStatus=b)?THREE.Loader.prototype.addStatusElement():null;this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){}};THREE.Loader.prototype={constructor:THREE.Loader,crossOrigin:"anonymous",addStatusElement:function(){var b=document.createElement("div");b.style.position="absolute";b.style.right="0px";b.style.top="0px";b.style.fontSize="0.8em";b.style.textAlign="left";b.style.background="rgba(0,0,0,0.25)";b.style.color="#fff";b.style.width="120px";b.style.padding="0.5em 0.5em 0.5em 0.5em";b.style.zIndex=1000;b.innerHTML="Loading ...";return b},updateProgress:function(d){var c="Loaded ",c=d.total?c+((100*d.loaded/d.total).toFixed(0)+"%"):c+((d.loaded/1000).toFixed(2)+" KB");this.statusDomElement.innerHTML=c},extractUrlBase:function(b){b=b.split("/");b.pop();return(1>b.length?".":b.join("/"))+"/"},initMaterials:function(f,e){for(var h=[],g=0;g<f.length;++g){h[g]=THREE.Loader.prototype.createMaterial(f[g],e)}return h},needsTangents:function(e){for(var d=0,f=e.length;d<f;d++){if(e[d] instanceof THREE.ShaderMaterial){return !0}}return !1},createMaterial:function(t,s){function r(b){b=Math.log(b)/Math.LN2;return Math.floor(b)==b}function q(b){b=Math.log(b)/Math.LN2;return Math.pow(2,Math.round(b))}function p(A,y,w,v,g,d,b){var C=w.toLowerCase().endsWith(".dds"),c=s+"/"+w;if(C){var z=THREE.ImageUtils.loadCompressedTexture(c);A[y]=z}else{z=document.createElement("canvas"),A[y]=new THREE.Texture(z)}A[y].sourceFile=w;v&&(A[y].repeat.set(v[0],v[1]),1!==v[0]&&(A[y].wrapS=THREE.RepeatWrapping),1!==v[1]&&(A[y].wrapT=THREE.RepeatWrapping));g&&A[y].offset.set(g[0],g[1]);d&&(w={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==w[d[0]]&&(A[y].wrapS=w[d[0]]),void 0!==w[d[1]]&&(A[y].wrapT=w[d[1]]));b&&(A[y].anisotropy=b);if(!C){var D=A[y],A=new Image;A.onload=function(){if(!r(this.width)||!r(this.height)){var f=q(this.width),e=q(this.height);D.image.width=f;D.image.height=e;D.image.getContext("2d").drawImage(this,0,0,f,e)}else{D.image=this}D.needsUpdate=!0};A.crossOrigin=n.crossOrigin;A.src=c}}function o(b){return(255*b[0]<<16)+(255*b[1]<<8)+255*b[2]}var n=this,m="MeshLambertMaterial",l={color:15658734,opacity:1,map:null,lightMap:null,normalMap:null,bumpMap:null,wireframe:!1};if(t.shading){var j=t.shading.toLowerCase();"phong"===j?m="MeshPhongMaterial":"basic"===j&&(m="MeshBasicMaterial")}void 0!==t.blending&&void 0!==THREE[t.blending]&&(l.blending=THREE[t.blending]);if(void 0!==t.transparent||1>t.opacity){l.transparent=t.transparent}void 0!==t.depthTest&&(l.depthTest=t.depthTest);void 0!==t.depthWrite&&(l.depthWrite=t.depthWrite);void 0!==t.visible&&(l.visible=t.visible);void 0!==t.flipSided&&(l.side=THREE.BackSide);void 0!==t.doubleSided&&(l.side=THREE.DoubleSide);void 0!==t.wireframe&&(l.wireframe=t.wireframe);void 0!==t.vertexColors&&("face"===t.vertexColors?l.vertexColors=THREE.FaceColors:t.vertexColors&&(l.vertexColors=THREE.VertexColors));t.colorDiffuse?l.color=o(t.colorDiffuse):t.DbgColor&&(l.color=t.DbgColor);t.colorSpecular&&(l.specular=o(t.colorSpecular));t.colorAmbient&&(l.ambient=o(t.colorAmbient));t.transparency&&(l.opacity=t.transparency);t.specularCoef&&(l.shininess=t.specularCoef);t.mapDiffuse&&s&&p(l,"map",t.mapDiffuse,t.mapDiffuseRepeat,t.mapDiffuseOffset,t.mapDiffuseWrap,t.mapDiffuseAnisotropy);t.mapLight&&s&&p(l,"lightMap",t.mapLight,t.mapLightRepeat,t.mapLightOffset,t.mapLightWrap,t.mapLightAnisotropy);t.mapBump&&s&&p(l,"bumpMap",t.mapBump,t.mapBumpRepeat,t.mapBumpOffset,t.mapBumpWrap,t.mapBumpAnisotropy);t.mapNormal&&s&&p(l,"normalMap",t.mapNormal,t.mapNormalRepeat,t.mapNormalOffset,t.mapNormalWrap,t.mapNormalAnisotropy);t.mapSpecular&&s&&p(l,"specularMap",t.mapSpecular,t.mapSpecularRepeat,t.mapSpecularOffset,t.mapSpecularWrap,t.mapSpecularAnisotropy);t.mapBumpScale&&(l.bumpScale=t.mapBumpScale);t.mapNormal?(m=THREE.ShaderUtils.lib.normal,j=THREE.UniformsUtils.clone(m.uniforms),j.tNormal.value=l.normalMap,t.mapNormalFactor&&j.uNormalScale.value.set(t.mapNormalFactor,t.mapNormalFactor),l.map&&(j.tDiffuse.value=l.map,j.enableDiffuse.value=!0),l.specularMap&&(j.tSpecular.value=l.specularMap,j.enableSpecular.value=!0),l.lightMap&&(j.tAO.value=l.lightMap,j.enableAO.value=!0),j.uDiffuseColor.value.setHex(l.color),j.uSpecularColor.value.setHex(l.specular),j.uAmbientColor.value.setHex(l.ambient),j.uShininess.value=l.shininess,void 0!==l.opacity&&(j.uOpacity.value=l.opacity),m=new THREE.ShaderMaterial({fragmentShader:m.fragmentShader,vertexShader:m.vertexShader,uniforms:j,lights:!0,fog:!0}),l.transparent&&(m.transparent=!0)):m=new THREE[m](l);void 0!==t.DbgName&&(m.name=t.DbgName);return m}};THREE.BinaryLoader=function(b){THREE.Loader.call(this,b)};THREE.BinaryLoader.prototype=Object.create(THREE.Loader.prototype);THREE.BinaryLoader.prototype.load=function(g,f,j,i){var j=j&&"string"===typeof j?j:this.extractUrlBase(g),i=i&&"string"===typeof i?i:this.extractUrlBase(g),h=this.showProgress?THREE.Loader.prototype.updateProgress:null;this.onLoadStart();this.loadAjaxJSON(this,g,f,j,i,h)};THREE.BinaryLoader.prototype.loadAjaxJSON=function(i,h,n,m,l,k){var j=new XMLHttpRequest;j.onreadystatechange=function(){if(4==j.readyState){if(200==j.status||0==j.status){var a=JSON.parse(j.responseText);i.loadAjaxBuffers(a,n,l,m,k)}else{console.error("THREE.BinaryLoader: Couldn't load ["+h+"] ["+j.status+"]")}}};j.open("GET",h,!0);j.send(null)};THREE.BinaryLoader.prototype.loadAjaxBuffers=function(j,i,p,o,n){var m=new XMLHttpRequest,l=p+"/"+j.buffers,k=0;m.onreadystatechange=function(){if(4==m.readyState){if(200==m.status||0==m.status){var a=m.response;void 0===a&&(a=(new Uint8Array(m.responseBody)).buffer);THREE.BinaryLoader.prototype.createBinModel(a,i,o,j.materials)}else{console.error("THREE.BinaryLoader: Couldn't load ["+l+"] ["+m.status+"]")}}else{3==m.readyState?n&&(0==k&&(k=m.getResponseHeader("Content-Length")),n({total:k,loaded:m.responseText.length})):2==m.readyState&&(k=m.getResponseHeader("Content-Length"))}};m.open("GET",l,!0);m.responseType="arraybuffer";m.send(null)};THREE.BinaryLoader.prototype.createBinModel=function(g,f,j,i){var h=function(){var au,at,ar,aq,ap,am,al,an,ai,ah,ao,aj,af,W,ae,ag;function T(b){return b%4?4-b%4:0}function V(d,c){return(new Uint8Array(d,c,1))[0]}function X(d,c){return(new Uint32Array(d,c,1))[0]}function ac(y,x){var u,t,s,r,q,p,m,l=new Uint32Array(g,x,3*y);for(u=0;u<y;u++){t=l[3*u],s=l[3*u+1],r=l[3*u+2],q=E[2*t],t=E[2*t+1],p=E[2*s],m=E[2*s+1],s=E[2*r],r=E[2*r+1],w.faceVertexUvs[0].push([new THREE.Vector2(q,t),new THREE.Vector2(p,m),new THREE.Vector2(s,r)])}}function Q(C,B){var A,z,y,x,u,t,s,q,r,l=new Uint32Array(g,B,4*C);for(A=0;A<C;A++){z=l[4*A],y=l[4*A+1],x=l[4*A+2],u=l[4*A+3],t=E[2*z],z=E[2*z+1],s=E[2*y],q=E[2*y+1],y=E[2*x],r=E[2*x+1],x=E[2*u],u=E[2*u+1],w.faceVertexUvs[0].push([new THREE.Vector2(t,z),new THREE.Vector2(s,q),new THREE.Vector2(y,r),new THREE.Vector2(x,u)])}}function S(k,s,r){for(var q,p,n,m,s=new Uint32Array(g,s,3*k),l=new Uint16Array(g,r,k),r=0;r<k;r++){q=s[3*r],p=s[3*r+1],n=s[3*r+2],m=l[r],w.faces.push(new THREE.Face3(q,p,n,null,null,m))}}function O(u,t,s){for(var r,q,p,n,m,t=new Uint32Array(g,t,4*u),l=new Uint16Array(g,s,u),s=0;s<u;s++){r=t[4*s],q=t[4*s+1],p=t[4*s+2],n=t[4*s+3],m=l[s],w.faces.push(new THREE.Face4(r,q,p,n,null,null,m))}}function aa(K,J,I,H){for(var G,F,D,C,B,y,z,J=new Uint32Array(g,J,3*K),I=new Uint32Array(g,I,3*K),x=new Uint16Array(g,H,K),H=0;H<K;H++){G=J[3*H];F=J[3*H+1];D=J[3*H+2];B=I[3*H];y=I[3*H+1];z=I[3*H+2];C=x[H];var t=N[3*y],A=N[3*y+1];y=N[3*y+2];var L=N[3*z],u=N[3*z+1];z=N[3*z+2];w.faces.push(new THREE.Face3(G,F,D,[new THREE.Vector3(N[3*B],N[3*B+1],N[3*B+2]),new THREE.Vector3(t,A,y),new THREE.Vector3(L,u,z)],null,C))}}function U(az,ay,ax,aw){for(var av,R,P,M,L,I,J,H,F,ay=new Uint32Array(g,ay,4*az),ax=new Uint32Array(g,ax,4*az),K=new Uint16Array(g,aw,az),aw=0;aw<az;aw++){av=ay[4*aw];R=ay[4*aw+1];P=ay[4*aw+2];M=ay[4*aw+3];I=ax[4*aw];J=ax[4*aw+1];H=ax[4*aw+2];F=ax[4*aw+3];L=K[aw];var D=N[3*J],G=N[3*J+1];J=N[3*J+2];var C=N[3*H],B=N[3*H+1];H=N[3*H+2];var A=N[3*F],y=N[3*F+1];F=N[3*F+2];w.faces.push(new THREE.Face4(av,R,P,M,[new THREE.Vector3(N[3*I],N[3*I+1],N[3*I+2]),new THREE.Vector3(D,G,J),new THREE.Vector3(C,B,H),new THREE.Vector3(A,y,F)],null,L))}}var w=this,ad=0,N=[],E=[],a,o,ab;THREE.Geometry.call(this);ag=g;o=ad;W=new Uint8Array(ag,o,12);ah="";for(af=0;12>af;af++){ah+=String.fromCharCode(W[o+af])}au=V(ag,o+12);V(ag,o+13);V(ag,o+14);V(ag,o+15);at=V(ag,o+16);ar=V(ag,o+17);aq=V(ag,o+18);ap=V(ag,o+19);am=X(ag,o+20);al=X(ag,o+20+4);an=X(ag,o+20+8);ai=X(ag,o+20+12);ah=X(ag,o+20+16);ao=X(ag,o+20+20);aj=X(ag,o+20+24);af=X(ag,o+20+28);W=X(ag,o+20+32);ae=X(ag,o+20+36);ag=X(ag,o+20+40);ad+=au;o=3*at+ap;ab=4*at+ap;a=ai*o;au=ah*(o+3*ar);at=ao*(o+3*aq);ap=aj*(o+3*ar+3*aq);o=af*ab;ar=W*(ab+4*ar);aq=ae*(ab+4*aq);ab=ad;var ad=new Float32Array(g,ad,3*am),ak,v,Y,Z;for(ak=0;ak<am;ak++){v=ad[3*ak],Y=ad[3*ak+1],Z=ad[3*ak+2],w.vertices.push(new THREE.Vector3(v,Y,Z))}am=ad=ab+3*am*Float32Array.BYTES_PER_ELEMENT;if(al){ad=new Int8Array(g,ad,3*al);for(ab=0;ab<al;ab++){ak=ad[3*ab],v=ad[3*ab+1],Y=ad[3*ab+2],N.push(ak/127,v/127,Y/127)}}ad=am+3*al*Int8Array.BYTES_PER_ELEMENT;al=ad+=T(3*al);if(an){am=new Float32Array(g,ad,2*an);for(ad=0;ad<an;ad++){ab=am[2*ad],ak=am[2*ad+1],E.push(ab,ak)}}an=ad=al+2*an*Float32Array.BYTES_PER_ELEMENT;a=an+a+T(2*ai);al=a+au+T(2*ah);au=al+at+T(2*ao);at=au+ap+T(2*aj);o=at+o+T(2*af);ap=o+ar+T(2*W);ar=ap+aq+T(2*ae);ao&&(aq=al+3*ao*Uint32Array.BYTES_PER_ELEMENT,S(ao,al,aq+3*ao*Uint32Array.BYTES_PER_ELEMENT),ac(ao,aq));aj&&(ao=au+3*aj*Uint32Array.BYTES_PER_ELEMENT,aq=ao+3*aj*Uint32Array.BYTES_PER_ELEMENT,aa(aj,au,ao,aq+3*aj*Uint32Array.BYTES_PER_ELEMENT),ac(aj,aq));ae&&(aj=ap+4*ae*Uint32Array.BYTES_PER_ELEMENT,O(ae,ap,aj+4*ae*Uint32Array.BYTES_PER_ELEMENT),Q(ae,aj));ag&&(ae=ar+4*ag*Uint32Array.BYTES_PER_ELEMENT,aj=ae+4*ag*Uint32Array.BYTES_PER_ELEMENT,U(ag,ar,ae,aj+4*ag*Uint32Array.BYTES_PER_ELEMENT),Q(ag,aj));ai&&S(ai,an,an+3*ai*Uint32Array.BYTES_PER_ELEMENT);ah&&(ai=a+3*ah*Uint32Array.BYTES_PER_ELEMENT,aa(ah,a,ai,ai+3*ah*Uint32Array.BYTES_PER_ELEMENT));af&&O(af,at,at+4*af*Uint32Array.BYTES_PER_ELEMENT);W&&(ah=o+4*W*Uint32Array.BYTES_PER_ELEMENT,U(W,o,ah,ah+4*W*Uint32Array.BYTES_PER_ELEMENT));this.computeCentroids();this.computeFaceNormals()};h.prototype=Object.create(THREE.Geometry.prototype);h=new h(j);j=this.initMaterials(i,j);this.needsTangents(j)&&h.computeTangents();f(h,j)};THREE.ImageLoader=function(){THREE.EventDispatcher.call(this);this.crossOrigin=null};THREE.ImageLoader.prototype={constructor:THREE.ImageLoader,load:function(e,d){var f=this;void 0===d&&(d=new Image);d.addEventListener("load",function(){f.dispatchEvent({type:"load",content:d})},!1);d.addEventListener("error",function(){f.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1);f.crossOrigin&&(d.crossOrigin=f.crossOrigin);d.src=e}};THREE.JSONLoader=function(b){THREE.Loader.call(this,b);this.withCredentials=!1};THREE.JSONLoader.prototype=Object.create(THREE.Loader.prototype);THREE.JSONLoader.prototype.load=function(e,d,f){f=f&&"string"===typeof f?f:this.extractUrlBase(e);this.onLoadStart();this.loadAjaxJSON(this,e,d,f)};THREE.JSONLoader.prototype.loadAjaxJSON=function(i,h,n,m,l){var k=new XMLHttpRequest,j=0;k.withCredentials=this.withCredentials;k.onreadystatechange=function(){if(k.readyState===k.DONE){if(200===k.status||0===k.status){if(k.responseText){var a=JSON.parse(k.responseText);i.createModel(a,n,m)}else{console.warn("THREE.JSONLoader: ["+h+"] seems to be unreachable or file there is empty")}i.onLoadComplete()}else{console.error("THREE.JSONLoader: Couldn't load ["+h+"] ["+k.status+"]")}}else{k.readyState===k.LOADING?l&&(0===j&&(j=k.getResponseHeader("Content-Length")),l({total:j,loaded:k.responseText.length})):k.readyState===k.HEADERS_RECEIVED&&(j=k.getResponseHeader("Content-Length"))}};k.open("GET",h,!0);k.send(null)};THREE.JSONLoader.prototype.createModel=function(V,U,T){var S=new THREE.Geometry,R=void 0!==V.scale?1/V.scale:1,Q,P,O,N,M,J,I,K,D,y,L,G,v,E,j,w=V.faces;y=V.vertices;var o=V.normals,z=V.colors,H=0;for(Q=0;Q<V.uvs.length;Q++){V.uvs[Q].length&&H++}for(Q=0;Q<H;Q++){S.faceUvs[Q]=[],S.faceVertexUvs[Q]=[]}N=0;for(M=y.length;N<M;){J=new THREE.Vector3,J.x=y[N++]*R,J.y=y[N++]*R,J.z=y[N++]*R,S.vertices.push(J)}N=0;for(M=w.length;N<M;){y=w[N++];J=y&1;O=y&2;Q=y&4;P=y&8;K=y&16;I=y&32;L=y&64;y&=128;J?(G=new THREE.Face4,G.a=w[N++],G.b=w[N++],G.c=w[N++],G.d=w[N++],J=4):(G=new THREE.Face3,G.a=w[N++],G.b=w[N++],G.c=w[N++],J=3);O&&(O=w[N++],G.materialIndex=O);O=S.faces.length;if(Q){for(Q=0;Q<H;Q++){v=V.uvs[Q],D=w[N++],j=v[2*D],D=v[2*D+1],S.faceUvs[Q][O]=new THREE.Vector2(j,D)}}if(P){for(Q=0;Q<H;Q++){v=V.uvs[Q];E=[];for(P=0;P<J;P++){D=w[N++],j=v[2*D],D=v[2*D+1],E[P]=new THREE.Vector2(j,D)}S.faceVertexUvs[Q][O]=E}}K&&(K=3*w[N++],P=new THREE.Vector3,P.x=o[K++],P.y=o[K++],P.z=o[K],G.normal=P);if(I){for(Q=0;Q<J;Q++){K=3*w[N++],P=new THREE.Vector3,P.x=o[K++],P.y=o[K++],P.z=o[K],G.vertexNormals.push(P)}}L&&(I=w[N++],I=new THREE.Color(z[I]),G.color=I);if(y){for(Q=0;Q<J;Q++){I=w[N++],I=new THREE.Color(z[I]),G.vertexColors.push(I)}}S.faces.push(G)}if(V.skinWeights){N=0;for(M=V.skinWeights.length;N<M;N+=2){w=V.skinWeights[N],o=V.skinWeights[N+1],S.skinWeights.push(new THREE.Vector4(w,o,0,0))}}if(V.skinIndices){N=0;for(M=V.skinIndices.length;N<M;N+=2){w=V.skinIndices[N],o=V.skinIndices[N+1],S.skinIndices.push(new THREE.Vector4(w,o,0,0))}}S.bones=V.bones;S.animation=V.animation;if(void 0!==V.morphTargets){N=0;for(M=V.morphTargets.length;N<M;N++){S.morphTargets[N]={};S.morphTargets[N].name=V.morphTargets[N].name;S.morphTargets[N].vertices=[];z=S.morphTargets[N].vertices;H=V.morphTargets[N].vertices;w=0;for(o=H.length;w<o;w+=3){y=new THREE.Vector3,y.x=H[w]*R,y.y=H[w+1]*R,y.z=H[w+2]*R,z.push(y)}}}if(void 0!==V.morphColors){N=0;for(M=V.morphColors.length;N<M;N++){S.morphColors[N]={};S.morphColors[N].name=V.morphColors[N].name;S.morphColors[N].colors=[];o=S.morphColors[N].colors;z=V.morphColors[N].colors;R=0;for(w=z.length;R<w;R+=3){H=new THREE.Color(16755200),H.setRGB(z[R],z[R+1],z[R+2]),o.push(H)}}}S.computeCentroids();S.computeFaceNormals();V=this.initMaterials(V.materials,T);this.needsTangents(V)&&S.computeTangents();U(S,V)};THREE.LoadingMonitor=function(){THREE.EventDispatcher.call(this);var f=this,e=0,h=0,g=function(){e++;f.dispatchEvent({type:"progress",loaded:e,total:h});e===h&&f.dispatchEvent({type:"load"})};this.add=function(b){h++;b.addEventListener("load",g,!1)}};THREE.SceneLoader=function(){this.onLoadStart=function(){};this.onLoadProgress=function(){};this.onLoadComplete=function(){};this.callbackSync=function(){};this.callbackProgress=function(){};this.geometryHandlerMap={};this.hierarchyHandlerMap={};this.addGeometryHandler("ascii",THREE.JSONLoader);this.addGeometryHandler("binary",THREE.BinaryLoader)};THREE.SceneLoader.prototype.constructor=THREE.SceneLoader;THREE.SceneLoader.prototype.load=function(f,e){var h=this,g=new XMLHttpRequest;g.onreadystatechange=function(){if(4===g.readyState){if(200===g.status||0===g.status){var a=JSON.parse(g.responseText);h.parse(a,e,f)}else{console.error("THREE.SceneLoader: Couldn't load ["+f+"] ["+g.status+"]")}}};g.open("GET",f,!0);g.send(null)};THREE.SceneLoader.prototype.addGeometryHandler=function(d,c){this.geometryHandlerMap[d]={loaderClass:c}};THREE.SceneLoader.prototype.addHierarchyHandler=function(d,c){this.hierarchyHandlerMap[d]={loaderClass:c}};THREE.SceneLoader.prototype.parse=function(ao,an,am){function al(d,c){return"relativeToHTML"==c?d:ab+"/"+d}function ak(){aj(w.scene,Q.objects)}function aj(C,B){var x,u,s,r,n,f;for(f in B){if(void 0===w.objects[f]){var m=B[f],d=null;if(m.type&&m.type in ac.hierarchyHandlerMap){if(void 0===m.loading){x={type:1,url:1,material:1,position:1,rotation:1,scale:1,visible:1,children:1,properties:1,skin:1,morph:1,mirroredLoop:1,duration:1};u={};for(var D in m){D in x||(u[D]=m[D])}X=w.materials[m.material];m.loading=!0;x=ac.hierarchyHandlerMap[m.type].loaderObject;x.options?x.load(al(m.url,Q.urlBaseType),ah(f,C,X,m)):x.load(al(m.url,Q.urlBaseType),ah(f,C,X,m),u)}}else{if(void 0!==m.geometry){if(ad=w.geometries[m.geometry]){d=!1;X=w.materials[m.material];d=X instanceof THREE.ShaderMaterial;u=m.position;s=m.rotation;r=m.scale;x=m.matrix;n=m.quaternion;m.material||(X=new THREE.MeshFaceMaterial(w.face_materials[m.geometry]));X instanceof THREE.MeshFaceMaterial&&0===X.materials.length&&(X=new THREE.MeshFaceMaterial(w.face_materials[m.geometry]));if(X instanceof THREE.MeshFaceMaterial){for(var z=0;z<X.materials.length;z++){d=d||X.materials[z] instanceof THREE.ShaderMaterial}}d&&ad.computeTangents();m.skin?d=new THREE.SkinnedMesh(ad,X):m.morph?(d=new THREE.MorphAnimMesh(ad,X),void 0!==m.duration&&(d.duration=m.duration),void 0!==m.time&&(d.time=m.time),void 0!==m.mirroredLoop&&(d.mirroredLoop=m.mirroredLoop),X.morphNormals&&ad.computeMorphNormals()):d=new THREE.Mesh(ad,X);d.name=f;x?(d.matrixAutoUpdate=!1,d.matrix.set(x[0],x[1],x[2],x[3],x[4],x[5],x[6],x[7],x[8],x[9],x[10],x[11],x[12],x[13],x[14],x[15])):(d.position.set(u[0],u[1],u[2]),n?(d.quaternion.set(n[0],n[1],n[2],n[3]),d.useQuaternion=!0):d.rotation.set(s[0],s[1],s[2]),d.scale.set(r[0],r[1],r[2]));d.visible=m.visible;d.castShadow=m.castShadow;d.receiveShadow=m.receiveShadow;C.add(d);w.objects[f]=d}}else{"DirectionalLight"===m.type||"PointLight"===m.type||"AmbientLight"===m.type?(Y=void 0!==m.color?m.color:16777215,O=void 0!==m.intensity?m.intensity:1,"DirectionalLight"===m.type?(u=m.direction,S=new THREE.DirectionalLight(Y,O),S.position.set(u[0],u[1],u[2]),m.target&&(P.push({object:S,targetName:m.target}),S.target=null)):"PointLight"===m.type?(u=m.position,x=m.distance,S=new THREE.PointLight(Y,O,x),S.position.set(u[0],u[1],u[2])):"AmbientLight"===m.type&&(S=new THREE.AmbientLight(Y)),C.add(S),S.name=f,w.lights[f]=S,w.objects[f]=S):"PerspectiveCamera"===m.type||"OrthographicCamera"===m.type?("PerspectiveCamera"===m.type?V=new THREE.PerspectiveCamera(m.fov,m.aspect,m.near,m.far):"OrthographicCamera"===m.type&&(V=new THREE.OrthographicCamera(m.left,m.right,m.top,m.bottom,m.near,m.far)),u=m.position,V.position.set(u[0],u[1],u[2]),C.add(V),V.name=f,w.cameras[f]=V,w.objects[f]=V):(u=m.position,s=m.rotation,r=m.scale,n=m.quaternion,d=new THREE.Object3D,d.name=f,d.position.set(u[0],u[1],u[2]),n?(d.quaternion.set(n[0],n[1],n[2],n[3]),d.useQuaternion=!0):d.rotation.set(s[0],s[1],s[2]),d.scale.set(r[0],r[1],r[2]),d.visible=void 0!==m.visible?m.visible:!1,C.add(d),w.objects[f]=d,w.empties[f]=d)}}if(d){if(void 0!==m.properties){for(var h in m.properties){d.properties[h]=m.properties[h]}}void 0!==m.children&&aj(d,m.children)}}}}function ai(b){return function(a,d){w.geometries[b]=a;w.face_materials[b]=d;ak();T-=1;ac.onLoadComplete();af()}}function ah(f,e,h,g){return function(n){var n=n.content?n.content:n.dae?n.scene:n,k=g.position,d=g.rotation,c=g.quaternion,b=g.scale;n.position.set(k[0],k[1],k[2]);c?(n.quaternion.set(c[0],c[1],c[2],c[3]),n.useQuaternion=!0):n.rotation.set(d[0],d[1],d[2]);n.scale.set(b[0],b[1],b[2]);h&&n.traverse(function(i){i.material=h});var a=void 0!==g.visible?g.visible:!0;n.traverse(function(i){i.visible=a});e.add(n);n.name=f;w.objects[f]=n;ak();T-=1;ac.onLoadComplete();af()}}function ag(b){return function(a,d){w.geometries[b]=a;w.face_materials[b]=d}}function af(){ac.callbackProgress({totalModels:W,totalTextures:aa,loadedModels:W-T,loadedTextures:aa-R},w);ac.onLoadProgress();if(0===T&&0===R){for(var b=0;b<P.length;b++){var f=P[b],e=w.objects[f.targetName];e?f.object.target=e:(f.object.target=new THREE.Object3D,w.scene.add(f.object.target));f.object.target.properties.targetInverse=f.object}an(w)}}var ac=this,ab=THREE.Loader.prototype.extractUrlBase(am),ad,X,V,ae,Z,S,Y,O,T,R,W,aa,w,P=[],Q=ao,N;for(N in this.geometryHandlerMap){ao=this.geometryHandlerMap[N].loaderClass,this.geometryHandlerMap[N].loaderObject=new ao}for(N in this.hierarchyHandlerMap){ao=this.hierarchyHandlerMap[N].loaderClass,this.hierarchyHandlerMap[N].loaderObject=new ao}R=T=0;w={scene:new THREE.Scene,geometries:{},face_materials:{},materials:{},textures:{},objects:{},cameras:{},lights:{},fogs:{},empties:{}};if(Q.transform&&(N=Q.transform.position,ao=Q.transform.rotation,am=Q.transform.scale,N&&w.scene.position.set(N[0],N[1],N[2]),ao&&w.scene.rotation.set(ao[0],ao[1],ao[2]),am&&w.scene.scale.set(am[0],am[1],am[2]),N||ao||am)){w.scene.updateMatrix(),w.scene.updateMatrixWorld()}N=function(b){return function(){R-=b;af();ac.onLoadComplete()}};for(var j in Q.fogs){ao=Q.fogs[j],"linear"===ao.type?ae=new THREE.Fog(0,ao.near,ao.far):"exp2"===ao.type&&(ae=new THREE.FogExp2(0,ao.density)),ao=ao.color,ae.color.setRGB(ao[0],ao[1],ao[2]),w.fogs[j]=ae}for(var U in Q.geometries){ae=Q.geometries[U],ae.type in this.geometryHandlerMap&&(T+=1,ac.onLoadStart())}for(var o in Q.objects){ae=Q.objects[o],ae.type&&ae.type in this.hierarchyHandlerMap&&(T+=1,ac.onLoadStart())}W=T;for(U in Q.geometries){if(ae=Q.geometries[U],"cube"===ae.type){ad=new THREE.CubeGeometry(ae.width,ae.height,ae.depth,ae.widthSegments,ae.heightSegments,ae.depthSegments),w.geometries[U]=ad}else{if("plane"===ae.type){ad=new THREE.PlaneGeometry(ae.width,ae.height,ae.widthSegments,ae.heightSegments),w.geometries[U]=ad}else{if("sphere"===ae.type){ad=new THREE.SphereGeometry(ae.radius,ae.widthSegments,ae.heightSegments),w.geometries[U]=ad}else{if("cylinder"===ae.type){ad=new THREE.CylinderGeometry(ae.topRad,ae.botRad,ae.height,ae.radSegs,ae.heightSegs),w.geometries[U]=ad}else{if("torus"===ae.type){ad=new THREE.TorusGeometry(ae.radius,ae.tube,ae.segmentsR,ae.segmentsT),w.geometries[U]=ad}else{if("icosahedron"===ae.type){ad=new THREE.IcosahedronGeometry(ae.radius,ae.subdivisions),w.geometries[U]=ad}else{if(ae.type in this.geometryHandlerMap){o={};for(Z in ae){"type"!==Z&&"url"!==Z&&(o[Z]=ae[Z])}this.geometryHandlerMap[ae.type].loaderObject.load(al(ae.url,Q.urlBaseType),ai(U),o)}else{"embedded"===ae.type&&(o=Q.embeds[ae.id],o.metadata=Q.metadata,o&&this.geometryHandlerMap.ascii.loaderObject.createModel(o,ag(U),""))}}}}}}}}for(var M in Q.textures){if(U=Q.textures[M],U.url instanceof Array){R+=U.url.length;for(Z=0;Z<U.url.length;Z++){ac.onLoadStart()}}else{R+=1,ac.onLoadStart()}}aa=R;for(M in Q.textures){U=Q.textures[M];void 0!==U.mapping&&void 0!==THREE[U.mapping]&&(U.mapping=new THREE[U.mapping]);if(U.url instanceof Array){o=U.url.length;ae=[];for(Z=0;Z<o;Z++){ae[Z]=al(U.url[Z],Q.urlBaseType)}Z=(Z=ae[0].endsWith(".dds"))?THREE.ImageUtils.loadCompressedTextureCube(ae,U.mapping,N(o)):THREE.ImageUtils.loadTextureCube(ae,U.mapping,N(o))}else{Z=U.url.toLowerCase().endsWith(".dds"),o=al(U.url,Q.urlBaseType),ae=N(1),Z=Z?THREE.ImageUtils.loadCompressedTexture(o,U.mapping,ae):THREE.ImageUtils.loadTexture(o,U.mapping,ae),void 0!==THREE[U.minFilter]&&(Z.minFilter=THREE[U.minFilter]),void 0!==THREE[U.magFilter]&&(Z.magFilter=THREE[U.magFilter]),U.anisotropy&&(Z.anisotropy=U.anisotropy),U.repeat&&(Z.repeat.set(U.repeat[0],U.repeat[1]),1!==U.repeat[0]&&(Z.wrapS=THREE.RepeatWrapping),1!==U.repeat[1]&&(Z.wrapT=THREE.RepeatWrapping)),U.offset&&Z.offset.set(U.offset[0],U.offset[1]),U.wrap&&(o={repeat:THREE.RepeatWrapping,mirror:THREE.MirroredRepeatWrapping},void 0!==o[U.wrap[0]]&&(Z.wrapS=o[U.wrap[0]]),void 0!==o[U.wrap[1]]&&(Z.wrapT=o[U.wrap[1]]))}w.textures[M]=Z}var E,v;for(E in Q.materials){M=Q.materials[E];for(v in M.parameters){"envMap"===v||"map"===v||"lightMap"===v||"bumpMap"===v?M.parameters[v]=w.textures[M.parameters[v]]:"shading"===v?M.parameters[v]="flat"===M.parameters[v]?THREE.FlatShading:THREE.SmoothShading:"side"===v?M.parameters[v]="double"==M.parameters[v]?THREE.DoubleSide:"back"==M.parameters[v]?THREE.BackSide:THREE.FrontSide:"blending"===v?M.parameters[v]=M.parameters[v] in THREE?THREE[M.parameters[v]]:THREE.NormalBlending:"combine"===v?M.parameters[v]=M.parameters[v] in THREE?THREE[M.parameters[v]]:THREE.MultiplyOperation:"vertexColors"===v?"face"==M.parameters[v]?M.parameters[v]=THREE.FaceColors:M.parameters[v]&&(M.parameters[v]=THREE.VertexColors):"wrapRGB"===v&&(N=M.parameters[v],M.parameters[v]=new THREE.Vector3(N[0],N[1],N[2]))}void 0!==M.parameters.opacity&&1>M.parameters.opacity&&(M.parameters.transparent=!0);M.parameters.normalMap?(N=THREE.ShaderUtils.lib.normal,U=THREE.UniformsUtils.clone(N.uniforms),Z=M.parameters.color,o=M.parameters.specular,ae=M.parameters.ambient,j=M.parameters.shininess,U.tNormal.value=w.textures[M.parameters.normalMap],M.parameters.normalScale&&U.uNormalScale.value.set(M.parameters.normalScale[0],M.parameters.normalScale[1]),M.parameters.map&&(U.tDiffuse.value=M.parameters.map,U.enableDiffuse.value=!0),M.parameters.envMap&&(U.tCube.value=M.parameters.envMap,U.enableReflection.value=!0,U.uReflectivity.value=M.parameters.reflectivity),M.parameters.lightMap&&(U.tAO.value=M.parameters.lightMap,U.enableAO.value=!0),M.parameters.specularMap&&(U.tSpecular.value=w.textures[M.parameters.specularMap],U.enableSpecular.value=!0),M.parameters.displacementMap&&(U.tDisplacement.value=w.textures[M.parameters.displacementMap],U.enableDisplacement.value=!0,U.uDisplacementBias.value=M.parameters.displacementBias,U.uDisplacementScale.value=M.parameters.displacementScale),U.uDiffuseColor.value.setHex(Z),U.uSpecularColor.value.setHex(o),U.uAmbientColor.value.setHex(ae),U.uShininess.value=j,M.parameters.opacity&&(U.uOpacity.value=M.parameters.opacity),X=new THREE.ShaderMaterial({fragmentShader:N.fragmentShader,vertexShader:N.vertexShader,uniforms:U,lights:!0,fog:!0})):X=new THREE[M.type](M.parameters);w.materials[E]=X}for(E in Q.materials){if(M=Q.materials[E],M.parameters.materials){v=[];for(Z=0;Z<M.parameters.materials.length;Z++){v.push(w.materials[M.parameters.materials[Z]])}w.materials[E].materials=v}}ak();w.cameras&&Q.defaults.camera&&(w.currentCamera=w.cameras[Q.defaults.camera]);w.fogs&&Q.defaults.fog&&(w.scene.fog=w.fogs[Q.defaults.fog]);ao=Q.defaults.bgcolor;w.bgColor=new THREE.Color;w.bgColor.setRGB(ao[0],ao[1],ao[2]);w.bgColorAlpha=Q.defaults.bgalpha;ac.callbackSync(w);af()};THREE.TextureLoader=function(){THREE.EventDispatcher.call(this);this.crossOrigin=null};THREE.TextureLoader.prototype={constructor:THREE.TextureLoader,load:function(e){var d=this,f=new Image;f.addEventListener("load",function(){var b=new THREE.Texture(f);b.needsUpdate=!0;d.dispatchEvent({type:"load",content:b})},!1);f.addEventListener("error",function(){d.dispatchEvent({type:"error",message:"Couldn't load URL ["+e+"]"})},!1);d.crossOrigin&&(f.crossOrigin=d.crossOrigin);f.src=e}};THREE.Material=function(){THREE.EventDispatcher.call(this);this.id=THREE.MaterialIdCount++;this.name="";this.side=THREE.FrontSide;this.opacity=1;this.transparent=!1;this.blending=THREE.NormalBlending;this.blendSrc=THREE.SrcAlphaFactor;this.blendDst=THREE.OneMinusSrcAlphaFactor;this.blendEquation=THREE.AddEquation;this.depthWrite=this.depthTest=!0;this.polygonOffset=!1;this.alphaTest=this.polygonOffsetUnits=this.polygonOffsetFactor=0;this.overdraw=!1;this.needsUpdate=this.visible=!0};THREE.Material.prototype.setValues=function(f){if(void 0!==f){for(var e in f){var h=f[e];if(void 0===h){console.warn("THREE.Material: '"+e+"' parameter is undefined.")}else{if(e in this){var g=this[e];g instanceof THREE.Color&&h instanceof THREE.Color?g.copy(h):g instanceof THREE.Color?g.set(h):g instanceof THREE.Vector3&&h instanceof THREE.Vector3?g.copy(h):this[e]=h}}}}};THREE.Material.prototype.clone=function(b){void 0===b&&(b=new THREE.Material);b.name=this.name;b.side=this.side;b.opacity=this.opacity;b.transparent=this.transparent;b.blending=this.blending;b.blendSrc=this.blendSrc;b.blendDst=this.blendDst;b.blendEquation=this.blendEquation;b.depthTest=this.depthTest;b.depthWrite=this.depthWrite;b.polygonOffset=this.polygonOffset;b.polygonOffsetFactor=this.polygonOffsetFactor;b.polygonOffsetUnits=this.polygonOffsetUnits;b.alphaTest=this.alphaTest;b.overdraw=this.overdraw;b.visible=this.visible;return b};THREE.Material.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})};THREE.MaterialIdCount=0;THREE.LineBasicMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.linewidth=1;this.linejoin=this.linecap="round";this.vertexColors=!1;this.fog=!0;this.setValues(b)};THREE.LineBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineBasicMaterial.prototype.clone=function(){var b=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.linewidth=this.linewidth;b.linecap=this.linecap;b.linejoin=this.linejoin;b.vertexColors=this.vertexColors;b.fog=this.fog;return b};THREE.LineDashedMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.scale=this.linewidth=1;this.dashSize=3;this.gapSize=1;this.vertexColors=!1;this.fog=!0;this.setValues(b)};THREE.LineDashedMaterial.prototype=Object.create(THREE.Material.prototype);THREE.LineDashedMaterial.prototype.clone=function(){var b=new THREE.LineDashedMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.linewidth=this.linewidth;b.scale=this.scale;b.dashSize=this.dashSize;b.gapSize=this.gapSize;b.vertexColors=this.vertexColors;b.fog=this.fog;return b};THREE.MeshBasicMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphTargets=this.skinning=!1;this.setValues(b)};THREE.MeshBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshBasicMaterial.prototype.clone=function(){var b=new THREE.MeshBasicMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.map=this.map;b.lightMap=this.lightMap;b.specularMap=this.specularMap;b.envMap=this.envMap;b.combine=this.combine;b.reflectivity=this.reflectivity;b.refractionRatio=this.refractionRatio;b.fog=this.fog;b.shading=this.shading;b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;b.wireframeLinecap=this.wireframeLinecap;b.wireframeLinejoin=this.wireframeLinejoin;b.vertexColors=this.vertexColors;b.skinning=this.skinning;b.morphTargets=this.morphTargets;return b};THREE.MeshLambertMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.envMap=this.specularMap=this.lightMap=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(b)};THREE.MeshLambertMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshLambertMaterial.prototype.clone=function(){var b=new THREE.MeshLambertMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.ambient.copy(this.ambient);b.emissive.copy(this.emissive);b.wrapAround=this.wrapAround;b.wrapRGB.copy(this.wrapRGB);b.map=this.map;b.lightMap=this.lightMap;b.specularMap=this.specularMap;b.envMap=this.envMap;b.combine=this.combine;b.reflectivity=this.reflectivity;b.refractionRatio=this.refractionRatio;b.fog=this.fog;b.shading=this.shading;b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;b.wireframeLinecap=this.wireframeLinecap;b.wireframeLinejoin=this.wireframeLinejoin;b.vertexColors=this.vertexColors;b.skinning=this.skinning;b.morphTargets=this.morphTargets;b.morphNormals=this.morphNormals;return b};THREE.MeshPhongMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(16777215);this.emissive=new THREE.Color(0);this.specular=new THREE.Color(1118481);this.shininess=30;this.metal=!1;this.perPixel=!0;this.wrapAround=!1;this.wrapRGB=new THREE.Vector3(1,1,1);this.bumpMap=this.lightMap=this.map=null;this.bumpScale=1;this.normalMap=null;this.normalScale=new THREE.Vector2(1,1);this.envMap=this.specularMap=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refractionRatio=0.98;this.fog=!0;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.wireframeLinejoin=this.wireframeLinecap="round";this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(b)};THREE.MeshPhongMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshPhongMaterial.prototype.clone=function(){var b=new THREE.MeshPhongMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.ambient.copy(this.ambient);b.emissive.copy(this.emissive);b.specular.copy(this.specular);b.shininess=this.shininess;b.metal=this.metal;b.perPixel=this.perPixel;b.wrapAround=this.wrapAround;b.wrapRGB.copy(this.wrapRGB);b.map=this.map;b.lightMap=this.lightMap;b.bumpMap=this.bumpMap;b.bumpScale=this.bumpScale;b.normalMap=this.normalMap;b.normalScale.copy(this.normalScale);b.specularMap=this.specularMap;b.envMap=this.envMap;b.combine=this.combine;b.reflectivity=this.reflectivity;b.refractionRatio=this.refractionRatio;b.fog=this.fog;b.shading=this.shading;b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;b.wireframeLinecap=this.wireframeLinecap;b.wireframeLinejoin=this.wireframeLinejoin;b.vertexColors=this.vertexColors;b.skinning=this.skinning;b.morphTargets=this.morphTargets;b.morphNormals=this.morphNormals;return b};THREE.MeshDepthMaterial=function(b){THREE.Material.call(this);this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(b)};THREE.MeshDepthMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshDepthMaterial.prototype.clone=function(){var b=new THREE.LineBasicMaterial;THREE.Material.prototype.clone.call(this,b);b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;return b};THREE.MeshNormalMaterial=function(b){THREE.Material.call(this,b);this.shading=THREE.FlatShading;this.wireframe=!1;this.wireframeLinewidth=1;this.setValues(b)};THREE.MeshNormalMaterial.prototype=Object.create(THREE.Material.prototype);THREE.MeshNormalMaterial.prototype.clone=function(){var b=new THREE.MeshNormalMaterial;THREE.Material.prototype.clone.call(this,b);b.shading=this.shading;b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;return b};THREE.MeshFaceMaterial=function(b){this.materials=b instanceof Array?b:[]};THREE.MeshFaceMaterial.prototype.clone=function(){return new THREE.MeshFaceMaterial(this.materials.slice(0))};THREE.ParticleBasicMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=null;this.size=1;this.sizeAttenuation=!0;this.vertexColors=!1;this.fog=!0;this.setValues(b)};THREE.ParticleBasicMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ParticleBasicMaterial.prototype.clone=function(){var b=new THREE.ParticleBasicMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.map=this.map;b.size=this.size;b.sizeAttenuation=this.sizeAttenuation;b.vertexColors=this.vertexColors;b.fog=this.fog;return b};THREE.ParticleCanvasMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.program=function(){};this.setValues(b)};THREE.ParticleCanvasMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ParticleCanvasMaterial.prototype.clone=function(){var b=new THREE.ParticleCanvasMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.program=this.program;return b};THREE.ParticleDOMMaterial=function(b){this.element=b};THREE.ParticleDOMMaterial.prototype.clone=function(){return new THREE.ParticleDOMMaterial(this.element)};THREE.ShaderMaterial=function(b){THREE.Material.call(this);this.vertexShader=this.fragmentShader="void main() {}";this.uniforms={};this.defines={};this.attributes=null;this.shading=THREE.SmoothShading;this.wireframe=!1;this.wireframeLinewidth=1;this.lights=this.fog=!1;this.vertexColors=THREE.NoColors;this.morphNormals=this.morphTargets=this.skinning=!1;this.setValues(b)};THREE.ShaderMaterial.prototype=Object.create(THREE.Material.prototype);THREE.ShaderMaterial.prototype.clone=function(){var b=new THREE.ShaderMaterial;THREE.Material.prototype.clone.call(this,b);b.fragmentShader=this.fragmentShader;b.vertexShader=this.vertexShader;b.uniforms=THREE.UniformsUtils.clone(this.uniforms);b.attributes=this.attributes;b.defines=this.defines;b.shading=this.shading;b.wireframe=this.wireframe;b.wireframeLinewidth=this.wireframeLinewidth;b.fog=this.fog;b.lights=this.lights;b.vertexColors=this.vertexColors;b.skinning=this.skinning;b.morphTargets=this.morphTargets;b.morphNormals=this.morphNormals;return b};THREE.SpriteMaterial=function(b){THREE.Material.call(this);this.color=new THREE.Color(16777215);this.map=new THREE.Texture;this.useScreenCoordinates=!0;this.depthTest=!this.useScreenCoordinates;this.sizeAttenuation=!this.useScreenCoordinates;this.scaleByViewport=!this.sizeAttenuation;this.alignment=THREE.SpriteAlignment.center.clone();this.fog=!1;this.uvOffset=new THREE.Vector2(0,0);this.uvScale=new THREE.Vector2(1,1);this.setValues(b);b=b||{};void 0===b.depthTest&&(this.depthTest=!this.useScreenCoordinates);void 0===b.sizeAttenuation&&(this.sizeAttenuation=!this.useScreenCoordinates);void 0===b.scaleByViewport&&(this.scaleByViewport=!this.sizeAttenuation)};THREE.SpriteMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteMaterial.prototype.clone=function(){var b=new THREE.SpriteMaterial;THREE.Material.prototype.clone.call(this,b);b.color.copy(this.color);b.map=this.map;b.useScreenCoordinates=this.useScreenCoordinates;b.sizeAttenuation=this.sizeAttenuation;b.scaleByViewport=this.scaleByViewport;b.alignment.copy(this.alignment);b.uvOffset.copy(this.uvOffset);b.uvScale.copy(this.uvScale);b.fog=this.fog;return b};THREE.SpriteAlignment={};THREE.SpriteAlignment.topLeft=new THREE.Vector2(1,-1);THREE.SpriteAlignment.topCenter=new THREE.Vector2(0,-1);THREE.SpriteAlignment.topRight=new THREE.Vector2(-1,-1);THREE.SpriteAlignment.centerLeft=new THREE.Vector2(1,0);THREE.SpriteAlignment.center=new THREE.Vector2(0,0);THREE.SpriteAlignment.centerRight=new THREE.Vector2(-1,0);THREE.SpriteAlignment.bottomLeft=new THREE.Vector2(1,1);THREE.SpriteAlignment.bottomCenter=new THREE.Vector2(0,1);THREE.SpriteAlignment.bottomRight=new THREE.Vector2(-1,1);THREE.Texture=function(r,q,p,o,n,m,l,k,j){THREE.EventDispatcher.call(this);this.id=THREE.TextureIdCount++;this.name="";this.image=r;this.mipmaps=[];this.mapping=void 0!==q?q:new THREE.UVMapping;this.wrapS=void 0!==p?p:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==o?o:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==n?n:THREE.LinearFilter;this.minFilter=void 0!==m?m:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==j?j:1;this.format=void 0!==l?l:THREE.RGBAFormat;this.type=void 0!==k?k:THREE.UnsignedByteType;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.generateMipmaps=!0;this.premultiplyAlpha=!1;this.flipY=!0;this.unpackAlignment=4;this.needsUpdate=!1;this.onUpdate=null};THREE.Texture.prototype={constructor:THREE.Texture,clone:function(b){void 0===b&&(b=new THREE.Texture);b.image=this.image;b.mipmaps=this.mipmaps.slice(0);b.mapping=this.mapping;b.wrapS=this.wrapS;b.wrapT=this.wrapT;b.magFilter=this.magFilter;b.minFilter=this.minFilter;b.anisotropy=this.anisotropy;b.format=this.format;b.type=this.type;b.offset.copy(this.offset);b.repeat.copy(this.repeat);b.generateMipmaps=this.generateMipmaps;b.premultiplyAlpha=this.premultiplyAlpha;b.flipY=this.flipY;b.unpackAlignment=this.unpackAlignment;return b},dispose:function(){this.dispatchEvent({type:"dispose"})}};THREE.TextureIdCount=0;THREE.CompressedTexture=function(v,u,t,s,r,q,p,o,m,l,j){THREE.Texture.call(this,null,q,p,o,m,l,s,r,j);this.image={width:u,height:t};this.mipmaps=v;this.generateMipmaps=!1};THREE.CompressedTexture.prototype=Object.create(THREE.Texture.prototype);THREE.CompressedTexture.prototype.clone=function(){var b=new THREE.CompressedTexture;THREE.Texture.prototype.clone.call(this,b);return b};THREE.DataTexture=function(v,u,t,s,r,q,p,o,m,l,j){THREE.Texture.call(this,null,q,p,o,m,l,s,r,j);this.image={data:v,width:u,height:t}};THREE.DataTexture.prototype=Object.create(THREE.Texture.prototype);THREE.DataTexture.prototype.clone=function(){var b=new THREE.DataTexture;THREE.Texture.prototype.clone.call(this,b);return b};THREE.Particle=function(b){THREE.Object3D.call(this);this.material=b};THREE.Particle.prototype=Object.create(THREE.Object3D.prototype);THREE.Particle.prototype.clone=function(b){void 0===b&&(b=new THREE.Particle(this.material));THREE.Object3D.prototype.clone.call(this,b);return b};THREE.ParticleSystem=function(d,c){THREE.Object3D.call(this);this.geometry=d;this.material=void 0!==c?c:new THREE.ParticleBasicMaterial({color:16777215*Math.random()});this.sortParticles=!1;this.geometry&&null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere();this.frustumCulled=!1};THREE.ParticleSystem.prototype=Object.create(THREE.Object3D.prototype);THREE.ParticleSystem.prototype.clone=function(b){void 0===b&&(b=new THREE.ParticleSystem(this.geometry,this.material));b.sortParticles=this.sortParticles;THREE.Object3D.prototype.clone.call(this,b);return b};THREE.Line=function(e,d,f){THREE.Object3D.call(this);this.geometry=e;this.material=void 0!==d?d:new THREE.LineBasicMaterial({color:16777215*Math.random()});this.type=void 0!==f?f:THREE.LineStrip;this.geometry&&(this.geometry.boundingSphere||this.geometry.computeBoundingSphere())};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=Object.create(THREE.Object3D.prototype);THREE.Line.prototype.clone=function(b){void 0===b&&(b=new THREE.Line(this.geometry,this.material,this.type));THREE.Object3D.prototype.clone.call(this,b);return b};THREE.Mesh=function(e,d){THREE.Object3D.call(this);this.geometry=e;this.material=void 0!==d?d:new THREE.MeshBasicMaterial({color:16777215*Math.random(),wireframe:!0});if(this.geometry&&(null===this.geometry.boundingSphere&&this.geometry.computeBoundingSphere(),this.geometry.morphTargets.length)){this.morphTargetBase=-1;this.morphTargetForcedOrder=[];this.morphTargetInfluences=[];this.morphTargetDictionary={};for(var f=0;f<this.geometry.morphTargets.length;f++){this.morphTargetInfluences.push(0),this.morphTargetDictionary[this.geometry.morphTargets[f].name]=f}}};THREE.Mesh.prototype=Object.create(THREE.Object3D.prototype);THREE.Mesh.prototype.getMorphTargetIndexByName=function(b){if(void 0!==this.morphTargetDictionary[b]){return this.morphTargetDictionary[b]}console.log("THREE.Mesh.getMorphTargetIndexByName: morph target "+b+" does not exist. Returning 0.");return 0};THREE.Mesh.prototype.clone=function(b){void 0===b&&(b=new THREE.Mesh(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,b);return b};THREE.Bone=function(b){THREE.Object3D.call(this);this.skin=b;this.skinMatrix=new THREE.Matrix4};THREE.Bone.prototype=Object.create(THREE.Object3D.prototype);THREE.Bone.prototype.update=function(f,e){this.matrixAutoUpdate&&(e|=this.updateMatrix());if(e||this.matrixWorldNeedsUpdate){f?this.skinMatrix.multiply(f,this.matrix):this.skinMatrix.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0}var h,g=this.children.length;for(h=0;h<g;h++){this.children[h].update(this.skinMatrix,e)}};THREE.SkinnedMesh=function(h,g,l){THREE.Mesh.call(this,h,g);this.useVertexTexture=void 0!==l?l:!0;this.identityMatrix=new THREE.Matrix4;this.bones=[];this.boneMatrices=[];var k,j,i;if(this.geometry&&void 0!==this.geometry.bones){for(h=0;h<this.geometry.bones.length;h++){l=this.geometry.bones[h],k=l.pos,j=l.rotq,i=l.scl,g=this.addBone(),g.name=l.name,g.position.set(k[0],k[1],k[2]),g.quaternion.set(j[0],j[1],j[2],j[3]),g.useQuaternion=!0,void 0!==i?g.scale.set(i[0],i[1],i[2]):g.scale.set(1,1,1)}for(h=0;h<this.bones.length;h++){l=this.geometry.bones[h],g=this.bones[h],-1===l.parent?this.add(g):this.bones[l.parent].add(g)}h=this.bones.length;this.useVertexTexture?(this.boneTextureHeight=this.boneTextureWidth=h=256<h?64:64<h?32:16<h?16:8,this.boneMatrices=new Float32Array(4*this.boneTextureWidth*this.boneTextureHeight),this.boneTexture=new THREE.DataTexture(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,THREE.RGBAFormat,THREE.FloatType),this.boneTexture.minFilter=THREE.NearestFilter,this.boneTexture.magFilter=THREE.NearestFilter,this.boneTexture.generateMipmaps=!1,this.boneTexture.flipY=!1):this.boneMatrices=new Float32Array(16*h);this.pose()}};THREE.SkinnedMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.SkinnedMesh.prototype.addBone=function(b){void 0===b&&(b=new THREE.Bone(this));this.bones.push(b);return b};THREE.SkinnedMesh.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||e){this.parent?this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1}for(var e=0,d=this.children.length;e<d;e++){var f=this.children[e];f instanceof THREE.Bone?f.update(this.identityMatrix,!1):f.updateMatrixWorld(!0)}if(void 0==this.boneInverses){this.boneInverses=[];e=0;for(d=this.bones.length;e<d;e++){f=new THREE.Matrix4,f.getInverse(this.bones[e].skinMatrix),this.boneInverses.push(f)}}e=0;for(d=this.bones.length;e<d;e++){THREE.SkinnedMesh.offsetMatrix.multiply(this.bones[e].skinMatrix,this.boneInverses[e]),THREE.SkinnedMesh.offsetMatrix.flattenToArrayOffset(this.boneMatrices,16*e)}this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)};THREE.SkinnedMesh.prototype.pose=function(){this.updateMatrixWorld(!0);for(var e=0;e<this.geometry.skinIndices.length;e++){var d=this.geometry.skinWeights[e],f=1/d.lengthManhattan();Infinity!==f?d.multiplyScalar(f):d.set(1)}};THREE.SkinnedMesh.prototype.clone=function(b){void 0===b&&(b=new THREE.SkinnedMesh(this.geometry,this.material,this.useVertexTexture));THREE.Mesh.prototype.clone.call(this,b);return b};THREE.SkinnedMesh.offsetMatrix=new THREE.Matrix4;THREE.MorphAnimMesh=function(d,c){THREE.Mesh.call(this,d,c);this.duration=1000;this.mirroredLoop=!1;this.currentKeyframe=this.lastKeyframe=this.time=0;this.direction=1;this.directionBackwards=!1;this.setFrameRange(0,this.geometry.morphTargets.length-1)};THREE.MorphAnimMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphAnimMesh.prototype.setFrameRange=function(d,c){this.startKeyframe=d;this.endKeyframe=c;this.length=this.endKeyframe-this.startKeyframe+1};THREE.MorphAnimMesh.prototype.setDirectionForward=function(){this.direction=1;this.directionBackwards=!1};THREE.MorphAnimMesh.prototype.setDirectionBackward=function(){this.direction=-1;this.directionBackwards=!0};THREE.MorphAnimMesh.prototype.parseAnimations=function(){var j=this.geometry;j.animations||(j.animations={});for(var i,p=j.animations,o=/([a-z]+)(\d+)/,n=0,m=j.morphTargets.length;n<m;n++){var l=j.morphTargets[n].name.match(o);if(l&&1<l.length){l=l[1];p[l]||(p[l]={start:Infinity,end:-Infinity});var k=p[l];n<k.start&&(k.start=n);n>k.end&&(k.end=n);i||(i=l)}}j.firstAnimation=i};THREE.MorphAnimMesh.prototype.setAnimationLabel=function(e,d,f){this.geometry.animations||(this.geometry.animations={});this.geometry.animations[e]={start:d,end:f}};THREE.MorphAnimMesh.prototype.playAnimation=function(e,d){var f=this.geometry.animations[e];f?(this.setFrameRange(f.start,f.end),this.duration=1000*((f.end-f.start)/d),this.time=0):console.warn("animation["+e+"] undefined")};THREE.MorphAnimMesh.prototype.updateAnimation=function(d){var c=this.duration/this.length;this.time+=this.direction*d;if(this.mirroredLoop){if(this.time>this.duration||0>this.time){this.direction*=-1,this.time>this.duration&&(this.time=this.duration,this.directionBackwards=!0),0>this.time&&(this.time=0,this.directionBackwards=!1)}}else{this.time%=this.duration,0>this.time&&(this.time+=this.duration)}d=this.startKeyframe+THREE.Math.clamp(Math.floor(this.time/c),0,this.length-1);d!==this.currentKeyframe&&(this.morphTargetInfluences[this.lastKeyframe]=0,this.morphTargetInfluences[this.currentKeyframe]=1,this.morphTargetInfluences[d]=0,this.lastKeyframe=this.currentKeyframe,this.currentKeyframe=d);c=this.time%c/c;this.directionBackwards&&(c=1-c);this.morphTargetInfluences[this.currentKeyframe]=c;this.morphTargetInfluences[this.lastKeyframe]=1-c};THREE.MorphAnimMesh.prototype.clone=function(b){void 0===b&&(b=new THREE.MorphAnimMesh(this.geometry,this.material));b.duration=this.duration;b.mirroredLoop=this.mirroredLoop;b.time=this.time;b.lastKeyframe=this.lastKeyframe;b.currentKeyframe=this.currentKeyframe;b.direction=this.direction;b.directionBackwards=this.directionBackwards;THREE.Mesh.prototype.clone.call(this,b);return b};THREE.Ribbon=function(d,c){THREE.Object3D.call(this);this.geometry=d;this.material=c};THREE.Ribbon.prototype=Object.create(THREE.Object3D.prototype);THREE.Ribbon.prototype.clone=function(b){void 0===b&&(b=new THREE.Ribbon(this.geometry,this.material));THREE.Object3D.prototype.clone.call(this,b);return b};THREE.LOD=function(){THREE.Object3D.call(this);this.LODs=[]};THREE.LOD.prototype=Object.create(THREE.Object3D.prototype);THREE.LOD.prototype.addLevel=function(e,d){void 0===d&&(d=0);for(var d=Math.abs(d),f=0;f<this.LODs.length&&!(d<this.LODs[f].visibleAtDistance);f++){}this.LODs.splice(f,0,{visibleAtDistance:d,object3D:e});this.add(e)};THREE.LOD.prototype.update=function(d){if(1<this.LODs.length){d.matrixWorldInverse.getInverse(d.matrixWorld);d=d.matrixWorldInverse;d=-(d.elements[2]*this.matrixWorld.elements[12]+d.elements[6]*this.matrixWorld.elements[13]+d.elements[10]*this.matrixWorld.elements[14]+d.elements[14]);this.LODs[0].object3D.visible=!0;for(var c=1;c<this.LODs.length;c++){if(d>=this.LODs[c].visibleAtDistance){this.LODs[c-1].object3D.visible=!1,this.LODs[c].object3D.visible=!0}else{break}}for(;c<this.LODs.length;c++){this.LODs[c].object3D.visible=!1}}};THREE.LOD.prototype.clone=function(){};THREE.Sprite=function(b){THREE.Object3D.call(this);this.material=void 0!==b?b:new THREE.SpriteMaterial;this.rotation3d=this.rotation;this.rotation=0};THREE.Sprite.prototype=Object.create(THREE.Object3D.prototype);THREE.Sprite.prototype.updateMatrix=function(){this.matrix.setPosition(this.position);this.rotation3d.set(0,0,this.rotation);this.matrix.setRotationFromEuler(this.rotation3d);(1!==this.scale.x||1!==this.scale.y)&&this.matrix.scale(this.scale);this.matrixWorldNeedsUpdate=!0};THREE.Sprite.prototype.clone=function(b){void 0===b&&(b=new THREE.Sprite(this.material));THREE.Object3D.prototype.clone.call(this,b);return b};THREE.Scene=function(){THREE.Object3D.call(this);this.overrideMaterial=this.fog=null;this.matrixAutoUpdate=!1;this.__objects=[];this.__lights=[];this.__objectsAdded=[];this.__objectsRemoved=[]};THREE.Scene.prototype=Object.create(THREE.Object3D.prototype);THREE.Scene.prototype.__addObject=function(d){if(d instanceof THREE.Light){-1===this.__lights.indexOf(d)&&this.__lights.push(d),d.target&&void 0===d.target.parent&&this.add(d.target)}else{if(!(d instanceof THREE.Camera||d instanceof THREE.Bone)&&-1===this.__objects.indexOf(d)){this.__objects.push(d);this.__objectsAdded.push(d);var c=this.__objectsRemoved.indexOf(d);-1!==c&&this.__objectsRemoved.splice(c,1)}}for(c=0;c<d.children.length;c++){this.__addObject(d.children[c])}};THREE.Scene.prototype.__removeObject=function(d){if(d instanceof THREE.Light){var c=this.__lights.indexOf(d);-1!==c&&this.__lights.splice(c,1)}else{d instanceof THREE.Camera||(c=this.__objects.indexOf(d),-1!==c&&(this.__objects.splice(c,1),this.__objectsRemoved.push(d),c=this.__objectsAdded.indexOf(d),-1!==c&&this.__objectsAdded.splice(c,1)))}for(c=0;c<d.children.length;c++){this.__removeObject(d.children[c])}};THREE.Fog=function(e,d,f){this.name="";this.color=new THREE.Color(e);this.near=void 0!==d?d:1;this.far=void 0!==f?f:1000};THREE.Fog.prototype.clone=function(){return new THREE.Fog(this.color.getHex(),this.near,this.far)};THREE.FogExp2=function(d,c){this.name="";this.color=new THREE.Color(d);this.density=void 0!==c?c:0.00025};THREE.FogExp2.prototype.clone=function(){return new THREE.FogExp2(this.color.getHex(),this.density)};THREE.CanvasRenderer=function(aA){function az(b){aW!==b&&(aW=an.globalAlpha=b)}function ay(b){ad!==b&&(b===THREE.NormalBlending?an.globalCompositeOperation="source-over":b===THREE.AdditiveBlending?an.globalCompositeOperation="lighter":b===THREE.SubtractiveBlending&&(an.globalCompositeOperation="darker"),ad=b)}function aw(b){af!==b&&(af=an.strokeStyle=b)}function av(b){aR!==b&&(aR=an.fillStyle=b)}console.log("THREE.CanvasRenderer",THREE.REVISION);var aA=aA||{},au=this,at,aq,ap,ao=new THREE.Projector,ak=void 0!==aA.canvas?aA.canvas:document.createElement("canvas"),aj,am,ah,ag,an=ak.getContext("2d"),ai=new THREE.Color(0),ae=0,aW=1,ad=0,af=null,aR=null,aV=null,aX=null,ab=null,aP,aQ,aO,a6,aU=new THREE.RenderableVertex,aK=new THREE.RenderableVertex,ac,aM,aL,aF,aG,al,j,aJ,Y,ba,aB,aI,aH=new THREE.Color,a1=new THREE.Color,be=new THREE.Color,aE=new THREE.Color,U=new THREE.Color,aC=new THREE.Color,a3=new THREE.Color,ax={},aZ={},ar,bb,a8,aS,a2,w,o,X,T,Q,a0=new THREE.Box2,a4=new THREE.Box2,S=new THREE.Box2,aN=!1,a5=new THREE.Color,E=new THREE.Color,bd=new THREE.Color,aY=new THREE.Vector3,bc,a9,v,a7,aT,W,aD=16;bc=document.createElement("canvas");bc.width=bc.height=2;a9=bc.getContext("2d");a9.fillStyle="rgba(0,0,0,1)";a9.fillRect(0,0,2,2);v=a9.getImageData(0,0,2,2);a7=v.data;aT=document.createElement("canvas");aT.width=aT.height=aD;W=aT.getContext("2d");W.translate(-aD/2,-aD/2);W.scale(aD,aD);aD--;this.domElement=ak;this.devicePixelRatio=void 0!==aA.devicePixelRatio?aA.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1;this.sortElements=this.sortObjects=this.autoClear=!0;this.info={render:{vertices:0,faces:0}};this.setSize=function(d,c){aj=d*this.devicePixelRatio;am=c*this.devicePixelRatio;ah=Math.floor(aj/2);ag=Math.floor(am/2);ak.width=aj;ak.height=am;ak.style.width=d+"px";ak.style.height=c+"px";a0.min.set(-ah,-ag);a0.max.set(ah,ag);a4.min.set(-ah,-ag);a4.max.set(ah,ag);aW=1;ad=0;ab=aX=aV=aR=af=null};this.setClearColor=function(d,c){ai.copy(d);ae=void 0!==c?c:1;a4.min.set(-ah,-ag);a4.max.set(ah,ag)};this.setClearColorHex=function(d,c){ai.setHex(d);ae=void 0!==c?c:1;a4.min.set(-ah,-ag);a4.max.set(ah,ag)};this.getMaxAnisotropy=function(){return 0};this.clear=function(){an.setTransform(1,0,0,-1,ah,ag);!1===a4.empty()&&(a4.intersect(a0),a4.expandByScalar(2),1>ae&&an.clearRect(a4.min.x|0,a4.min.y|0,a4.max.x-a4.min.x|0,a4.max.y-a4.min.y|0),0<ae&&(ay(THREE.NormalBlending),az(1),av("rgba("+Math.floor(255*ai.r)+","+Math.floor(255*ai.g)+","+Math.floor(255*ai.b)+","+ae+")"),an.fillRect(a4.min.x|0,a4.min.y|0,a4.max.x-a4.min.x|0,a4.max.y-a4.min.y|0)),a4.makeEmpty())};this.render=function(M,K){function G(F,B,x){for(var u=0,t=ap.length;u<t;u++){var q=ap[u],p=q.color;if(q instanceof THREE.DirectionalLight){var n=q.matrixWorld.getPosition().normalize(),m=B.dot(n);0>=m||(m*=q.intensity,x.r+=p.r*m,x.g+=p.g*m,x.b+=p.b*m)}else{q instanceof THREE.PointLight&&(n=q.matrixWorld.getPosition(),m=B.dot(aY.sub(n,F).normalize()),0>=m||(m*=0==q.distance?1:1-Math.min(F.distanceTo(n)/q.distance,1),0!=m&&(m*=q.intensity,x.r+=p.r*m,x.g+=p.g*m,x.b+=p.b*m)))}}}function H(m,B,x,u,t,q,n,p){au.info.render.vertices+=3;au.info.render.faces++;az(p.opacity);ay(p.blending);ac=m.positionScreen.x;aM=m.positionScreen.y;aL=B.positionScreen.x;aF=B.positionScreen.y;aG=x.positionScreen.x;al=x.positionScreen.y;D(ac,aM,aL,aF,aG,al);(p instanceof THREE.MeshLambertMaterial||p instanceof THREE.MeshPhongMaterial)&&null===p.map&&null===p.map?(aC.copy(p.color),a3.copy(p.emissive),p.vertexColors===THREE.FaceColors&&(aC.r*=n.color.r,aC.g*=n.color.g,aC.b*=n.color.b),!0===aN?!1===p.wireframe&&p.shading==THREE.SmoothShading&&3==n.vertexNormalsLength?(a1.r=be.r=aE.r=a5.r,a1.g=be.g=aE.g=a5.g,a1.b=be.b=aE.b=a5.b,G(n.v1.positionWorld,n.vertexNormalsWorld[0],a1),G(n.v2.positionWorld,n.vertexNormalsWorld[1],be),G(n.v3.positionWorld,n.vertexNormalsWorld[2],aE),a1.r=a1.r*aC.r+a3.r,a1.g=a1.g*aC.g+a3.g,a1.b=a1.b*aC.b+a3.b,be.r=be.r*aC.r+a3.r,be.g=be.g*aC.g+a3.g,be.b=be.b*aC.b+a3.b,aE.r=aE.r*aC.r+a3.r,aE.g=aE.g*aC.g+a3.g,aE.b=aE.b*aC.b+a3.b,U.r=0.5*(be.r+aE.r),U.g=0.5*(be.g+aE.g),U.b=0.5*(be.b+aE.b),a8=r(a1,be,aE,U),A(ac,aM,aL,aF,aG,al,0,0,1,0,0,1,a8)):(aH.r=a5.r,aH.g=a5.g,aH.b=a5.b,G(n.centroidWorld,n.normalWorld,aH),aH.r=aH.r*aC.r+a3.r,aH.g=aH.g*aC.g+a3.g,aH.b=aH.b*aC.b+a3.b,!0===p.wireframe?y(aH,p.wireframeLinewidth,p.wireframeLinecap,p.wireframeLinejoin):s(aH)):!0===p.wireframe?y(p.color,p.wireframeLinewidth,p.wireframeLinecap,p.wireframeLinejoin):s(p.color)):p instanceof THREE.MeshBasicMaterial||p instanceof THREE.MeshLambertMaterial||p instanceof THREE.MeshPhongMaterial?null!==p.map?p.map.mapping instanceof THREE.UVMapping&&(aS=n.uvs[0],k(ac,aM,aL,aF,aG,al,aS[u].x,aS[u].y,aS[t].x,aS[t].y,aS[q].x,aS[q].y,p.map)):null!==p.envMap?p.envMap.mapping instanceof THREE.SphericalReflectionMapping&&(m=K.matrixWorldInverse,aY.copy(n.vertexNormalsWorld[u]),a2=0.5*(aY.x*m.elements[0]+aY.y*m.elements[4]+aY.z*m.elements[8])+0.5,w=0.5*(aY.x*m.elements[1]+aY.y*m.elements[5]+aY.z*m.elements[9])+0.5,aY.copy(n.vertexNormalsWorld[t]),o=0.5*(aY.x*m.elements[0]+aY.y*m.elements[4]+aY.z*m.elements[8])+0.5,X=0.5*(aY.x*m.elements[1]+aY.y*m.elements[5]+aY.z*m.elements[9])+0.5,aY.copy(n.vertexNormalsWorld[q]),T=0.5*(aY.x*m.elements[0]+aY.y*m.elements[4]+aY.z*m.elements[8])+0.5,Q=0.5*(aY.x*m.elements[1]+aY.y*m.elements[5]+aY.z*m.elements[9])+0.5,k(ac,aM,aL,aF,aG,al,a2,w,o,X,T,Q,p.envMap)):(aH.copy(p.color),p.vertexColors===THREE.FaceColors&&(aH.r*=n.color.r,aH.g*=n.color.g,aH.b*=n.color.b),!0===p.wireframe?y(aH,p.wireframeLinewidth,p.wireframeLinecap,p.wireframeLinejoin):s(aH)):p instanceof THREE.MeshDepthMaterial?(ar=K.near,bb=K.far,a1.r=a1.g=a1.b=1-e(m.positionScreen.z,ar,bb),be.r=be.g=be.b=1-e(B.positionScreen.z,ar,bb),aE.r=aE.g=aE.b=1-e(x.positionScreen.z,ar,bb),U.r=0.5*(be.r+aE.r),U.g=0.5*(be.g+aE.g),U.b=0.5*(be.b+aE.b),a8=r(a1,be,aE,U),A(ac,aM,aL,aF,aG,al,0,0,1,0,0,1,a8)):p instanceof THREE.MeshNormalMaterial&&(aH.r=O(n.normalWorld.x),aH.g=O(n.normalWorld.y),aH.b=O(n.normalWorld.z),!0===p.wireframe?y(aH,p.wireframeLinewidth,p.wireframeLinecap,p.wireframeLinejoin):s(aH))}function D(n,m,u,t,q,p){an.beginPath();an.moveTo(n,m);an.lineTo(u,t);an.lineTo(q,p);an.closePath()}function C(n,m,B,x,u,t,q,p){an.beginPath();an.moveTo(n,m);an.lineTo(B,x);an.lineTo(u,t);an.lineTo(q,p);an.closePath()}function y(n,m,q,p){aV!==m&&(aV=an.lineWidth=m);aX!==q&&(aX=an.lineCap=q);ab!==p&&(ab=an.lineJoin=p);aw(n.getStyle());an.stroke();S.expandByScalar(2*m)}function s(m){av(m.getStyle());an.fill()}function k(bj,bi,bh,bg,bf,aa,Z,R,V,P,bl,B,F){if(!(F instanceof THREE.DataTexture||void 0===F.image||0==F.image.width)){if(!0===F.needsUpdate){var x=F.wrapS==THREE.RepeatWrapping,t=F.wrapT==THREE.RepeatWrapping;ax[F.id]=an.createPattern(F.image,!0===x&&!0===t?"repeat":!0===x&&!1===t?"repeat-x":!1===x&&!0===t?"repeat-y":"no-repeat");F.needsUpdate=!1}void 0===ax[F.id]?av("rgba(0,0,0,1)"):av(ax[F.id]);var x=F.offset.x/F.repeat.x,t=F.offset.y/F.repeat.y,bk=F.image.width*F.repeat.x,u=F.image.height*F.repeat.y,Z=(Z+x)*bk,R=(1-R+t)*u,bh=bh-bj,bg=bg-bi,bf=bf-bj,aa=aa-bi,V=(V+x)*bk-Z,P=(1-P+t)*u-R,bl=(bl+x)*bk-Z,B=(1-B+t)*u-R,x=V*B-bl*P;0===x?(void 0===aZ[F.id]&&(bi=document.createElement("canvas"),bi.width=F.image.width,bi.height=F.image.height,bi=bi.getContext("2d"),bi.drawImage(F.image,0,0),aZ[F.id]=bi.getImageData(0,0,F.image.width,F.image.height).data),bi=aZ[F.id],Z=4*(Math.floor(Z)+Math.floor(R)*F.image.width),aH.setRGB(bi[Z]/255,bi[Z+1]/255,bi[Z+2]/255),s(aH)):(x=1/x,F=(B*bh-P*bf)*x,P=(B*bg-P*aa)*x,bh=(V*bf-bl*bh)*x,bg=(V*aa-bl*bg)*x,bj=bj-F*Z-bh*R,Z=bi-P*Z-bg*R,an.save(),an.transform(F,P,bh,bg,bj,Z),an.fill(),an.restore())}}function A(bh,bg,bf,aa,Z,V,R,P,B,F,x,bi,t){var u,q;u=t.width-1;q=t.height-1;R*=u;P*=q;bf-=bh;aa-=bg;Z-=bh;V-=bg;B=B*u-R;F=F*q-P;x=x*u-R;bi=bi*q-P;q=1/(B*bi-x*F);u=(bi*bf-F*Z)*q;F=(bi*aa-F*V)*q;bf=(B*Z-x*bf)*q;aa=(B*V-x*aa)*q;bh=bh-u*R-bf*P;bg=bg-F*R-aa*P;an.save();an.transform(u,F,bf,aa,bh,bg);an.clip();an.drawImage(t,0,0);an.restore()}function r(n,m,q,p){a7[0]=255*n.r|0;a7[1]=255*n.g|0;a7[2]=255*n.b|0;a7[4]=255*m.r|0;a7[5]=255*m.g|0;a7[6]=255*m.b|0;a7[8]=255*q.r|0;a7[9]=255*q.g|0;a7[10]=255*q.b|0;a7[12]=255*p.r|0;a7[13]=255*p.g|0;a7[14]=255*p.b|0;a9.putImageData(v,0,0);W.drawImage(bc,0,0);return aT}function e(n,m,p){n=(n-m)/(p-m);return n*n*(3-2*n)}function O(m){m=0.5*(m+1);return 0>m?0:1<m?1:m}function i(n,m){var t=m.x-n.x,q=m.y-n.y,p=t*t+q*q;0!==p&&(p=1/Math.sqrt(p),t*=p,q*=p,m.x+=t,m.y+=q,n.x-=t,n.y-=q)}if(!1===K instanceof THREE.Camera){console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.")}else{!0===this.autoClear&&this.clear();an.setTransform(1,0,0,-1,ah,ag);au.info.render.vertices=0;au.info.render.faces=0;at=ao.projectScene(M,K,this.sortObjects,this.sortElements);aq=at.elements;ap=at.lights;aN=0<ap.length;if(!0===aN){a5.setRGB(0,0,0);E.setRGB(0,0,0);bd.setRGB(0,0,0);for(var l=0,b=ap.length;l<b;l++){var c=ap[l],J=c.color;c instanceof THREE.AmbientLight?(a5.r+=J.r,a5.g+=J.g,a5.b+=J.b):c instanceof THREE.DirectionalLight?(E.r+=J.r,E.g+=J.g,E.b+=J.b):c instanceof THREE.PointLight&&(bd.r+=J.r,bd.g+=J.g,bd.b+=J.b)}}l=0;for(b=aq.length;l<b;l++){var h=aq[l],c=h.material;if(!(void 0===c||!1===c.visible)){S.makeEmpty();if(h instanceof THREE.RenderableParticle){aP=h;aP.x*=ah;aP.y*=ag;var J=aP,d=h;az(c.opacity);ay(c.blending);var z=void 0,L=void 0,I=void 0,g=void 0,N=h=void 0,f=void 0;c instanceof THREE.ParticleBasicMaterial?null===c.map?(I=d.object.scale.x,g=d.object.scale.y,I*=d.scale.x*ah,g*=d.scale.y*ag,S.min.set(J.x-I,J.y-g),S.max.set(J.x+I,J.y+g),!1!==a0.isIntersectionBox(S)&&(av(c.color.getStyle()),an.save(),an.translate(J.x,J.y),an.rotate(-d.rotation),an.scale(I,g),an.fillRect(-1,-1,2,2),an.restore())):(h=c.map.image,N=h.width>>1,f=h.height>>1,I=d.scale.x*ah,g=d.scale.y*ag,z=I*N,L=g*f,S.min.set(J.x-z,J.y-L),S.max.set(J.x+z,J.y+L),!1!==a0.isIntersectionBox(S)&&(an.save(),an.translate(J.x,J.y),an.rotate(-d.rotation),an.scale(I,-g),an.translate(-N,-f),an.drawImage(h,0,0),an.restore())):c instanceof THREE.ParticleCanvasMaterial&&(z=d.scale.x*ah,L=d.scale.y*ag,S.min.set(J.x-z,J.y-L),S.max.set(J.x+z,J.y+L),!1!==a0.isIntersectionBox(S)&&(aw(c.color.getStyle()),av(c.color.getStyle()),an.save(),an.translate(J.x,J.y),an.rotate(-d.rotation),an.scale(z,L),c.program(an),an.restore()))}else{h instanceof THREE.RenderableLine?(aP=h.v1,aQ=h.v2,aP.positionScreen.x*=ah,aP.positionScreen.y*=ag,aQ.positionScreen.x*=ah,aQ.positionScreen.y*=ag,S.setFromPoints([aP.positionScreen,aQ.positionScreen]),!0===a0.isIntersectionBox(S)&&(J=aP,d=aQ,az(c.opacity),ay(c.blending),an.beginPath(),an.moveTo(J.positionScreen.x,J.positionScreen.y),an.lineTo(d.positionScreen.x,d.positionScreen.y),c instanceof THREE.LineBasicMaterial&&(J=c.linewidth,aV!==J&&(aV=an.lineWidth=J),J=c.linecap,aX!==J&&(aX=an.lineCap=J),J=c.linejoin,ab!==J&&(ab=an.lineJoin=J),aw(c.color.getStyle()),an.stroke(),S.expandByScalar(2*c.linewidth)))):h instanceof THREE.RenderableFace3?(aP=h.v1,aQ=h.v2,aO=h.v3,aP.positionScreen.x*=ah,aP.positionScreen.y*=ag,aQ.positionScreen.x*=ah,aQ.positionScreen.y*=ag,aO.positionScreen.x*=ah,aO.positionScreen.y*=ag,!0===c.overdraw&&(i(aP.positionScreen,aQ.positionScreen),i(aQ.positionScreen,aO.positionScreen),i(aO.positionScreen,aP.positionScreen)),S.setFromPoints([aP.positionScreen,aQ.positionScreen,aO.positionScreen]),!0===a0.isIntersectionBox(S)&&H(aP,aQ,aO,0,1,2,h,c,M)):h instanceof THREE.RenderableFace4&&(aP=h.v1,aQ=h.v2,aO=h.v3,a6=h.v4,aP.positionScreen.x*=ah,aP.positionScreen.y*=ag,aQ.positionScreen.x*=ah,aQ.positionScreen.y*=ag,aO.positionScreen.x*=ah,aO.positionScreen.y*=ag,a6.positionScreen.x*=ah,a6.positionScreen.y*=ag,aU.positionScreen.copy(aQ.positionScreen),aK.positionScreen.copy(a6.positionScreen),!0===c.overdraw&&(i(aP.positionScreen,aQ.positionScreen),i(aQ.positionScreen,a6.positionScreen),i(a6.positionScreen,aP.positionScreen),i(aO.positionScreen,aU.positionScreen),i(aO.positionScreen,aK.positionScreen)),S.setFromPoints([aP.positionScreen,aQ.positionScreen,aO.positionScreen,a6.positionScreen]),!0===a0.isIntersectionBox(S)&&(J=aP,d=aQ,z=aO,L=a6,I=aU,g=aK,N=M,au.info.render.vertices+=4,au.info.render.faces++,az(c.opacity),ay(c.blending),void 0!==c.map&&null!==c.map||void 0!==c.envMap&&null!==c.envMap?(H(J,d,L,0,1,3,h,c,N),H(I,z,g,1,2,3,h,c,N)):(ac=J.positionScreen.x,aM=J.positionScreen.y,aL=d.positionScreen.x,aF=d.positionScreen.y,aG=z.positionScreen.x,al=z.positionScreen.y,j=L.positionScreen.x,aJ=L.positionScreen.y,Y=I.positionScreen.x,ba=I.positionScreen.y,aB=g.positionScreen.x,aI=g.positionScreen.y,c instanceof THREE.MeshLambertMaterial||c instanceof THREE.MeshPhongMaterial?(aC.copy(c.color),a3.copy(c.emissive),c.vertexColors===THREE.FaceColors&&(aC.r*=h.color.r,aC.g*=h.color.g,aC.b*=h.color.b),!0===aN?!1===c.wireframe&&c.shading==THREE.SmoothShading&&4==h.vertexNormalsLength?(a1.r=be.r=aE.r=U.r=a5.r,a1.g=be.g=aE.g=U.g=a5.g,a1.b=be.b=aE.b=U.b=a5.b,G(h.v1.positionWorld,h.vertexNormalsWorld[0],a1),G(h.v2.positionWorld,h.vertexNormalsWorld[1],be),G(h.v4.positionWorld,h.vertexNormalsWorld[3],aE),G(h.v3.positionWorld,h.vertexNormalsWorld[2],U),a1.r=a1.r*aC.r+a3.r,a1.g=a1.g*aC.g+a3.g,a1.b=a1.b*aC.b+a3.b,be.r=be.r*aC.r+a3.r,be.g=be.g*aC.g+a3.g,be.b=be.b*aC.b+a3.b,aE.r=aE.r*aC.r+a3.r,aE.g=aE.g*aC.g+a3.g,aE.b=aE.b*aC.b+a3.b,U.r=U.r*aC.r+a3.r,U.g=U.g*aC.g+a3.g,U.b=U.b*aC.b+a3.b,a8=r(a1,be,aE,U),D(ac,aM,aL,aF,j,aJ),A(ac,aM,aL,aF,j,aJ,0,0,1,0,0,1,a8),D(Y,ba,aG,al,aB,aI),A(Y,ba,aG,al,aB,aI,1,0,1,1,0,1,a8)):(aH.r=a5.r,aH.g=a5.g,aH.b=a5.b,G(h.centroidWorld,h.normalWorld,aH),aH.r=aH.r*aC.r+a3.r,aH.g=aH.g*aC.g+a3.g,aH.b=aH.b*aC.b+a3.b,C(ac,aM,aL,aF,aG,al,j,aJ),!0===c.wireframe?y(aH,c.wireframeLinewidth,c.wireframeLinecap,c.wireframeLinejoin):s(aH)):(aH.r=aC.r+a3.r,aH.g=aC.g+a3.g,aH.b=aC.b+a3.b,C(ac,aM,aL,aF,aG,al,j,aJ),!0===c.wireframe?y(aH,c.wireframeLinewidth,c.wireframeLinecap,c.wireframeLinejoin):s(aH))):c instanceof THREE.MeshBasicMaterial?(aH.copy(c.color),c.vertexColors===THREE.FaceColors&&(aH.r*=h.color.r,aH.g*=h.color.g,aH.b*=h.color.b),C(ac,aM,aL,aF,aG,al,j,aJ),!0===c.wireframe?y(aH,c.wireframeLinewidth,c.wireframeLinecap,c.wireframeLinejoin):s(aH)):c instanceof THREE.MeshNormalMaterial?(aH.r=O(h.normalWorld.x),aH.g=O(h.normalWorld.y),aH.b=O(h.normalWorld.z),C(ac,aM,aL,aF,aG,al,j,aJ),!0===c.wireframe?y(aH,c.wireframeLinewidth,c.wireframeLinecap,c.wireframeLinejoin):s(aH)):c instanceof THREE.MeshDepthMaterial&&(ar=K.near,bb=K.far,a1.r=a1.g=a1.b=1-e(J.positionScreen.z,ar,bb),be.r=be.g=be.b=1-e(d.positionScreen.z,ar,bb),aE.r=aE.g=aE.b=1-e(L.positionScreen.z,ar,bb),U.r=U.g=U.b=1-e(z.positionScreen.z,ar,bb),a8=r(a1,be,aE,U),D(ac,aM,aL,aF,j,aJ),A(ac,aM,aL,aF,j,aJ,0,0,1,0,0,1,a8),D(Y,ba,aG,al,aB,aI),A(Y,ba,aG,al,aB,aI,1,0,1,1,0,1,a8)))))}a4.union(S)}}an.setTransform(1,0,0,1,0,0)}}};THREE.ShaderChunk={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nuniform float reflectivity;\nuniform samplerCube envMap;\nuniform float flipEnvMap;\nuniform int combine;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nuniform bool useRefract;\nuniform float refractionRatio;\n#else\nvarying vec3 vReflect;\n#endif\n#endif",envmap_fragment:"#ifdef USE_ENVMAP\nvec3 reflectVec;\n#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nreflectVec = refract( cameraToVertex, normal, refractionRatio );\n} else { \nreflectVec = reflect( cameraToVertex, normal );\n}\n#else\nreflectVec = vReflect;\n#endif\n#ifdef DOUBLE_SIDED\nfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\nvec4 cubeColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#else\nvec4 cubeColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n#endif\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\nif ( combine == 1 ) {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularStrength * reflectivity );\n} else if ( combine == 2 ) {\ngl_FragColor.xyz += cubeColor.xyz * specularStrength * reflectivity;\n} else {\ngl_FragColor.xyz = mix( gl_FragColor.xyz, gl_FragColor.xyz * cubeColor.xyz, specularStrength * reflectivity );\n}\n#endif",envmap_pars_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvarying vec3 vReflect;\nuniform float refractionRatio;\nuniform bool useRefract;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\n#ifdef USE_SKINNING\nvec4 worldPosition = modelMatrix * skinned;\n#endif\n#if defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\n#endif\n#if ! defined( USE_MORPHTARGETS ) && ! defined( USE_SKINNING )\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\n#endif\n#endif",envmap_vertex:"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP )\nvec3 worldNormal = mat3( modelMatrix[ 0 ].xyz, modelMatrix[ 1 ].xyz, modelMatrix[ 2 ].xyz ) * objectNormal;\nworldNormal = normalize( worldNormal );\nvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, worldNormal );\n}\n#endif",map_particle_pars_fragment:"#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_particle_fragment:"#ifdef USE_MAP\ngl_FragColor = gl_FragColor * texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) );\n#endif",map_pars_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\nuniform vec4 offsetRepeat;\n#endif",map_pars_fragment:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\nuniform sampler2D map;\n#endif",map_vertex:"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP )\nvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\n#endif",map_fragment:"#ifdef USE_MAP\nvec4 texelColor = texture2D( map, vUv );\n#ifdef GAMMA_INPUT\ntexelColor.xyz *= texelColor.xyz;\n#endif\ngl_FragColor = gl_FragColor * texelColor;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\nuniform sampler2D lightMap;\n#endif",lightmap_pars_vertex:"#ifdef USE_LIGHTMAP\nvarying vec2 vUv2;\n#endif",lightmap_fragment:"#ifdef USE_LIGHTMAP\ngl_FragColor = gl_FragColor * texture2D( lightMap, vUv2 );\n#endif",lightmap_vertex:"#ifdef USE_LIGHTMAP\nvUv2 = uv2;\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\nuniform sampler2D bumpMap;\nuniform float bumpScale;\nvec2 dHdxy_fwd() {\nvec2 dSTdx = dFdx( vUv );\nvec2 dSTdy = dFdy( vUv );\nfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\nfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\nfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\nreturn vec2( dBx, dBy );\n}\nvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\nvec3 vSigmaX = dFdx( surf_pos );\nvec3 vSigmaY = dFdy( surf_pos );\nvec3 vN = surf_norm;\nvec3 R1 = cross( vSigmaY, vN );\nvec3 R2 = cross( vN, vSigmaX );\nfloat fDet = dot( vSigmaX, R1 );\nvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\nreturn normalize( abs( fDet ) * surf_norm - vGrad );\n}\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\nuniform sampler2D normalMap;\nuniform vec2 normalScale;\nvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\nvec3 q0 = dFdx( eye_pos.xyz );\nvec3 q1 = dFdy( eye_pos.xyz );\nvec2 st0 = dFdx( vUv.st );\nvec2 st1 = dFdy( vUv.st );\nvec3 S = normalize(  q0 * st1.t - q1 * st0.t );\nvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\nvec3 N = normalize( surf_norm );\nvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\nmapN.xy = normalScale * mapN.xy;\nmat3 tsn = mat3( S, T, N );\nreturn normalize( tsn * mapN );\n}\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\nuniform sampler2D specularMap;\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\nvec4 texelSpecular = texture2D( specularMap, vUv );\nspecularStrength = texelSpecular.r;\n#else\nspecularStrength = 1.0;\n#endif",lights_lambert_pars_vertex:"uniform vec3 ambient;\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif",lights_lambert_vertex:"vLightFront = vec3( 0.0 );\n#ifdef DOUBLE_SIDED\nvLightBack = vec3( 0.0 );\n#endif\ntransformedNormal = normalize( transformedNormal );\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, dirVector );\nvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\ndirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\ndirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\n#ifdef DOUBLE_SIDED\nvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\n#endif\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\npointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\npointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += pointLightColor[ i ] * pointLightWeighting * lDistance;\n#ifdef DOUBLE_SIDED\nvLightBack += pointLightColor[ i ] * pointLightWeightingBack * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\nfloat dotProduct = dot( transformedNormal, lVector );\nvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\n#ifdef DOUBLE_SIDED\nvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\n#endif\n#endif\n#ifdef WRAP_AROUND\nvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\nspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\n#ifdef DOUBLE_SIDED\nspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\n#endif\n#endif\nvLightFront += spotLightColor[ i ] * spotLightWeighting * lDistance * spotEffect;\n#ifdef DOUBLE_SIDED\nvLightBack += spotLightColor[ i ] * spotLightWeightingBack * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( transformedNormal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\nvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\n#ifdef DOUBLE_SIDED\nvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\n#endif\n}\n#endif\nvLightFront = vLightFront * diffuse + ambient * ambientLightColor + emissive;\n#ifdef DOUBLE_SIDED\nvLightBack = vLightBack * diffuse + ambient * ambientLightColor + emissive;\n#endif",lights_phong_pars_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif",lights_phong_vertex:"#ifndef PHONG_PER_PIXEL\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nvPointLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz - mvPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nvSpotLight[ i ] = vec4( lVector, lDistance );\n}\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvWorldPosition = worldPosition.xyz;\n#endif",lights_phong_pars_fragment:"uniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#else\nvarying vec4 vPointLight[ MAX_POINT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\n#ifdef PHONG_PER_PIXEL\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#else\nvarying vec4 vSpotLight[ MAX_SPOT_LIGHTS ];\n#endif\n#endif\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP )\nvarying vec3 vWorldPosition;\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_phong_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#ifdef DOUBLE_SIDED\nnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\n#endif\n#ifdef USE_NORMALMAP\nnormal = perturbNormal2Arb( -viewPosition, normal );\n#elif defined( USE_BUMPMAP )\nnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\n#endif\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse  = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / pointLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vPointLight[ i ].xyz );\nfloat lDistance = vPointLight[ i ].w;\n#endif\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dotProduct, 0.0 );\n#endif\npointDiffuse  += diffuse * pointLightColor[ i ] * pointDiffuseWeight * lDistance;\nvec3 pointHalfVector = normalize( lVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance * specularNormalization;\n#else\npointSpecular += specular * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * lDistance;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse  = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\n#ifdef PHONG_PER_PIXEL\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 lVector = lPosition.xyz + vViewPosition.xyz;\nfloat lDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nlDistance = 1.0 - min( ( length( lVector ) / spotLightDistance[ i ] ), 1.0 );\nlVector = normalize( lVector );\n#else\nvec3 lVector = normalize( vSpotLight[ i ].xyz );\nfloat lDistance = vSpotLight[ i ].w;\n#endif\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\nfloat dotProduct = dot( normal, lVector );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dotProduct, 0.0 );\n#endif\nspotDiffuse += diffuse * spotLightColor[ i ] * spotDiffuseWeight * lDistance * spotEffect;\nvec3 spotHalfVector = normalize( lVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += specular * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * lDistance * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse  = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, dirVector );\n#ifdef WRAP_AROUND\nfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\nfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dotProduct, 0.0 );\n#endif\ndirDiffuse  += diffuse * directionalLightColor[ i ] * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlick = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += diffuse * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularStrength * max( pow( hemiDotNormalHalfSky, shininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularStrength * max( pow( hemiDotNormalHalfGround, shininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( shininess + 2.0001 ) / 8.0;\nvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += specular * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( emissive + totalDiffuse + ambientLightColor * ambient ) + totalSpecular;\n#endif",color_pars_fragment:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_fragment:"#ifdef USE_COLOR\ngl_FragColor = gl_FragColor * vec4( vColor, opacity );\n#endif",color_pars_vertex:"#ifdef USE_COLOR\nvarying vec3 vColor;\n#endif",color_vertex:"#ifdef USE_COLOR\n#ifdef GAMMA_INPUT\nvColor = color * color;\n#else\nvColor = color;\n#endif\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n#ifdef BONE_TEXTURE\nuniform sampler2D boneTexture;\nmat4 getBoneMatrix( const in float i ) {\nfloat j = i * 4.0;\nfloat x = mod( j, N_BONE_PIXEL_X );\nfloat y = floor( j / N_BONE_PIXEL_X );\nconst float dx = 1.0 / N_BONE_PIXEL_X;\nconst float dy = 1.0 / N_BONE_PIXEL_Y;\ny = dy * ( y + 0.5 );\nvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\nvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\nvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\nvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\nmat4 bone = mat4( v1, v2, v3, v4 );\nreturn bone;\n}\n#else\nuniform mat4 boneGlobalMatrices[ MAX_BONES ];\nmat4 getBoneMatrix( const in float i ) {\nmat4 bone = boneGlobalMatrices[ int(i) ];\nreturn bone;\n}\n#endif\n#endif",skinbase_vertex:"#ifdef USE_SKINNING\nmat4 boneMatX = getBoneMatrix( skinIndex.x );\nmat4 boneMatY = getBoneMatrix( skinIndex.y );\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n#ifdef USE_MORPHTARGETS\nvec4 skinVertex = vec4( morphed, 1.0 );\n#else\nvec4 skinVertex = vec4( position, 1.0 );\n#endif\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n#ifndef USE_MORPHNORMALS\nuniform float morphTargetInfluences[ 8 ];\n#else\nuniform float morphTargetInfluences[ 4 ];\n#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\nvec3 morphed = vec3( 0.0 );\nmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\nmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\nmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\nmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\n#ifndef USE_MORPHNORMALS\nmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\nmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\nmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\nmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\n#endif\nmorphed += position;\n#endif",default_vertex:"vec4 mvPosition;\n#ifdef USE_SKINNING\nmvPosition = modelViewMatrix * skinned;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( morphed, 1.0 );\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHTARGETS )\nmvPosition = modelViewMatrix * vec4( position, 1.0 );\n#endif\ngl_Position = projectionMatrix * mvPosition;",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\nvec3 morphedNormal = vec3( 0.0 );\nmorphedNormal +=  ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\nmorphedNormal +=  ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\nmorphedNormal +=  ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\nmorphedNormal +=  ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\nmorphedNormal += normal;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\nmat4 skinMatrix = skinWeight.x * boneMatX;\nskinMatrix \t+= skinWeight.y * boneMatY;\n#ifdef USE_MORPHNORMALS\nvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\n#else\nvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\n#endif\n#endif",defaultnormal_vertex:"vec3 objectNormal;\n#ifdef USE_SKINNING\nobjectNormal = skinnedNormal.xyz;\n#endif\n#if !defined( USE_SKINNING ) && defined( USE_MORPHNORMALS )\nobjectNormal = morphedNormal;\n#endif\n#if !defined( USE_SKINNING ) && ! defined( USE_MORPHNORMALS )\nobjectNormal = normal;\n#endif\n#ifdef FLIP_SIDED\nobjectNormal = -objectNormal;\n#endif\nvec3 transformedNormal = normalMatrix * objectNormal;",shadowmap_pars_fragment:"#ifdef USE_SHADOWMAP\nuniform sampler2D shadowMap[ MAX_SHADOWS ];\nuniform vec2 shadowMapSize[ MAX_SHADOWS ];\nuniform float shadowDarkness[ MAX_SHADOWS ];\nuniform float shadowBias[ MAX_SHADOWS ];\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nfloat unpackDepth( const in vec4 rgba_depth ) {\nconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\nfloat depth = dot( rgba_depth, bit_shift );\nreturn depth;\n}\n#endif",shadowmap_fragment:"#ifdef USE_SHADOWMAP\n#ifdef SHADOWMAP_DEBUG\nvec3 frustumColors[3];\nfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\nfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\nfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\n#endif\n#ifdef SHADOWMAP_CASCADE\nint inFrustumCount = 0;\n#endif\nfloat fDepth;\nvec3 shadowColor = vec3( 1.0 );\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\nbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\nbool inFrustum = all( inFrustumVec );\n#ifdef SHADOWMAP_CASCADE\ninFrustumCount += int( inFrustum );\nbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\n#else\nbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\n#endif\nbool frustumTest = all( frustumTestVec );\nif ( frustumTest ) {\nshadowCoord.z += shadowBias[ i ];\n#if defined( SHADOWMAP_TYPE_PCF )\nfloat shadow = 0.0;\nconst float shadowDelta = 1.0 / 9.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.25 * xPixelOffset;\nfloat dy0 = -1.25 * yPixelOffset;\nfloat dx1 = 1.25 * xPixelOffset;\nfloat dy1 = 1.25 * yPixelOffset;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\nfloat shadow = 0.0;\nfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\nfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\nfloat dx0 = -1.0 * xPixelOffset;\nfloat dy0 = -1.0 * yPixelOffset;\nfloat dx1 = 1.0 * xPixelOffset;\nfloat dy1 = 1.0 * yPixelOffset;\nmat3 shadowKernel;\nmat3 depthKernel;\ndepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\nif ( depthKernel[0][0] < shadowCoord.z ) shadowKernel[0][0] = 0.25;\nelse shadowKernel[0][0] = 0.0;\ndepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\nif ( depthKernel[0][1] < shadowCoord.z ) shadowKernel[0][1] = 0.25;\nelse shadowKernel[0][1] = 0.0;\ndepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i], shadowCoord.xy + vec2( dx0, dy1 ) ) );\nif ( depthKernel[0][2] < shadowCoord.z ) shadowKernel[0][2] = 0.25;\nelse shadowKernel[0][2] = 0.0;\ndepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\nif ( depthKernel[1][0] < shadowCoord.z ) shadowKernel[1][0] = 0.25;\nelse shadowKernel[1][0] = 0.0;\ndepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\nif ( depthKernel[1][1] < shadowCoord.z ) shadowKernel[1][1] = 0.25;\nelse shadowKernel[1][1] = 0.0;\ndepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\nif ( depthKernel[1][2] < shadowCoord.z ) shadowKernel[1][2] = 0.25;\nelse shadowKernel[1][2] = 0.0;\ndepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\nif ( depthKernel[2][0] < shadowCoord.z ) shadowKernel[2][0] = 0.25;\nelse shadowKernel[2][0] = 0.0;\ndepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\nif ( depthKernel[2][1] < shadowCoord.z ) shadowKernel[2][1] = 0.25;\nelse shadowKernel[2][1] = 0.0;\ndepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\nif ( depthKernel[2][2] < shadowCoord.z ) shadowKernel[2][2] = 0.25;\nelse shadowKernel[2][2] = 0.0;\nvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\nshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\nshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\nvec4 shadowValues;\nshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\nshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\nshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\nshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\nshadow = dot( shadowValues, vec4( 1.0 ) );\nshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\n#else\nvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\nfloat fDepth = unpackDepth( rgbaDepth );\nif ( fDepth < shadowCoord.z )\nshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\n#endif\n}\n#ifdef SHADOWMAP_DEBUG\n#ifdef SHADOWMAP_CASCADE\nif ( inFrustum && inFrustumCount == 1 ) gl_FragColor.xyz *= frustumColors[ i ];\n#else\nif ( inFrustum ) gl_FragColor.xyz *= frustumColors[ i ];\n#endif\n#endif\n}\n#ifdef GAMMA_OUTPUT\nshadowColor *= shadowColor;\n#endif\ngl_FragColor.xyz = gl_FragColor.xyz * shadowColor;\n#endif",shadowmap_pars_vertex:"#ifdef USE_SHADOWMAP\nvarying vec4 vShadowCoord[ MAX_SHADOWS ];\nuniform mat4 shadowMatrix[ MAX_SHADOWS ];\n#endif",shadowmap_vertex:"#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif",alphatest_fragment:"#ifdef ALPHATEST\nif ( gl_FragColor.a < ALPHATEST ) discard;\n#endif",linear_to_gamma_fragment:"#ifdef GAMMA_OUTPUT\ngl_FragColor.xyz = sqrt( gl_FragColor.xyz );\n#endif"};THREE.UniformsUtils={merge:function(g){var f,j,i,h={};for(f=0;f<g.length;f++){for(j in i=this.clone(g[f]),i){h[j]=i[j]}}return h},clone:function(g){var f,j,i,h={};for(f in g){for(j in h[f]={},g[f]){i=g[f][j],h[f][j]=i instanceof THREE.Color||i instanceof THREE.Vector2||i instanceof THREE.Vector3||i instanceof THREE.Vector4||i instanceof THREE.Matrix4||i instanceof THREE.Texture?i.clone():i instanceof Array?i.slice():i}}return h}};THREE.UniformsLib={common:{diffuse:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:null},offsetRepeat:{type:"v4",value:new THREE.Vector4(0,0,1,1)},lightMap:{type:"t",value:null},specularMap:{type:"t",value:null},envMap:{type:"t",value:null},flipEnvMap:{type:"f",value:-1},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refractionRatio:{type:"f",value:0.98},combine:{type:"i",value:0},morphTargetInfluences:{type:"f",value:0}},bump:{bumpMap:{type:"t",value:null},bumpScale:{type:"f",value:1}},normalmap:{normalMap:{type:"t",value:null},normalScale:{type:"v2",value:new THREE.Vector2(1,1)}},fog:{fogDensity:{type:"f",value:0.00025},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2000},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{ambientLightColor:{type:"fv",value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},hemisphereLightDirection:{type:"fv",value:[]},hemisphereLightSkyColor:{type:"fv",value:[]},hemisphereLightGroundColor:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightDistance:{type:"fv1",value:[]},spotLightColor:{type:"fv",value:[]},spotLightPosition:{type:"fv",value:[]},spotLightDirection:{type:"fv",value:[]},spotLightDistance:{type:"fv1",value:[]},spotLightAngleCos:{type:"fv1",value:[]},spotLightExponent:{type:"fv1",value:[]}},particle:{psColor:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},size:{type:"f",value:1},scale:{type:"f",value:1},map:{type:"t",value:null},fogDensity:{type:"f",value:0.00025},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2000},fogColor:{type:"c",value:new THREE.Color(16777215)}},shadowmap:{shadowMap:{type:"tv",value:[]},shadowMapSize:{type:"v2v",value:[]},shadowBias:{type:"fv1",value:[]},shadowDarkness:{type:"fv1",value:[]},shadowMatrix:{type:"m4v",value:[]}}};THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2000},opacity:{type:"f",value:1}},vertexShader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform float mNear;\nuniform float mFar;\nuniform float opacity;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), opacity );\n}"},normal:{uniforms:{opacity:{type:"f",value:1}},vertexShader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}",fragmentShader:"uniform float opacity;\nvarying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\n}"},basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.shadowmap]),vertexShader:[THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.skinbase_vertex,"#ifdef USE_ENVMAP",THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"#endif",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},lambert:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define LAMBERT\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_lambert_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_lambert_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform float opacity;\nvarying vec3 vLightFront;\n#ifdef DOUBLE_SIDED\nvarying vec3 vLightBack;\n#endif",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,"#ifdef DOUBLE_SIDED\nif ( gl_FrontFacing )\ngl_FragColor.xyz *= vLightFront;\nelse\ngl_FragColor.xyz *= vLightBack;\n#else\ngl_FragColor.xyz *= vLightFront;\n#endif",THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},phong:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.bump,THREE.UniformsLib.normalmap,THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{ambient:{type:"c",value:new THREE.Color(16777215)},emissive:{type:"c",value:new THREE.Color(0)},specular:{type:"c",value:new THREE.Color(1118481)},shininess:{type:"f",value:30},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),vertexShader:["#define PHONG\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.ShaderChunk.map_pars_vertex,THREE.ShaderChunk.lightmap_pars_vertex,THREE.ShaderChunk.envmap_pars_vertex,THREE.ShaderChunk.lights_phong_pars_vertex,THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.map_vertex,THREE.ShaderChunk.lightmap_vertex,THREE.ShaderChunk.color_vertex,THREE.ShaderChunk.morphnormal_vertex,THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,THREE.ShaderChunk.defaultnormal_vertex,"vNormal = normalize( transformedNormal );",THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"vViewPosition = -mvPosition.xyz;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.envmap_vertex,THREE.ShaderChunk.lights_phong_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_pars_fragment,THREE.ShaderChunk.lightmap_pars_fragment,THREE.ShaderChunk.envmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.lights_phong_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.bumpmap_pars_fragment,THREE.ShaderChunk.normalmap_pars_fragment,THREE.ShaderChunk.specularmap_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3 ( 1.0 ), opacity );",THREE.ShaderChunk.map_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.specularmap_fragment,THREE.ShaderChunk.lights_phong_fragment,THREE.ShaderChunk.lightmap_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.envmap_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},particle_basic:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.particle,THREE.UniformsLib.shadowmap]),vertexShader:["uniform float size;\nuniform float scale;",THREE.ShaderChunk.color_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\n#ifdef USE_SIZEATTENUATION\ngl_PointSize = size * ( scale / length( mvPosition.xyz ) );\n#else\ngl_PointSize = size;\n#endif\ngl_Position = projectionMatrix * mvPosition;",THREE.ShaderChunk.worldpos_vertex,THREE.ShaderChunk.shadowmap_vertex,"}"].join("\n"),fragmentShader:["uniform vec3 psColor;\nuniform float opacity;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.map_particle_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,THREE.ShaderChunk.shadowmap_pars_fragment,"void main() {\ngl_FragColor = vec4( psColor, opacity );",THREE.ShaderChunk.map_particle_fragment,THREE.ShaderChunk.alphatest_fragment,THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},dashed:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.common,THREE.UniformsLib.fog,{scale:{type:"f",value:1},dashSize:{type:"f",value:1},totalSize:{type:"f",value:2}}]),vertexShader:["uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_vertex,"void main() {",THREE.ShaderChunk.color_vertex,"vLineDistance = scale * lineDistance;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\n}"].join("\n"),fragmentShader:["uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;",THREE.ShaderChunk.color_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\nif ( mod( vLineDistance, totalSize ) > dashSize ) {\ndiscard;\n}\ngl_FragColor = vec4( diffuse, opacity );",THREE.ShaderChunk.color_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n")},depthRGBA:{uniforms:{},vertexShader:[THREE.ShaderChunk.morphtarget_pars_vertex,THREE.ShaderChunk.skinning_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.morphtarget_vertex,THREE.ShaderChunk.skinning_vertex,THREE.ShaderChunk.default_vertex,"}"].join("\n"),fragmentShader:"vec4 pack_depth( const in float depth ) {\nconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\nconst vec4 bit_mask  = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\nvec4 res = fract( depth * bit_shift );\nres -= res.xxyz * bit_mask;\nreturn res;\n}\nvoid main() {\ngl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\n}"}};THREE.WebGLRenderer=function(aP){function aO(d){if(d.__webglCustomAttributesList){for(var c in d.__webglCustomAttributesList){aB.deleteBuffer(d.__webglCustomAttributesList[c].buffer)}}}function aN(i,h){var n=i.vertices.length,m=h.material;if(m.attributes){void 0===i.__webglCustomAttributesList&&(i.__webglCustomAttributesList=[]);for(var l in m.attributes){var k=m.attributes[l];if(!k.__webglInitialized||k.createUniqueBuffers){k.__webglInitialized=!0;var j=1;"v2"===k.type?j=2:"v3"===k.type?j=3:"v4"===k.type?j=4:"c"===k.type&&(j=3);k.size=j;k.array=new Float32Array(n*j);k.buffer=aB.createBuffer();k.buffer.belongsToAttribute=l;k.needsUpdate=!0}i.__webglCustomAttributesList.push(k)}}}function aL(A,z){var y=z.geometry,x=A.faces3,u=A.faces4,t=3*x.length+4*u.length,s=1*x.length+2*u.length,u=3*x.length+4*u.length,x=aK(z,A),g=aG(x),j=aH(x),q=x.vertexColors?x.vertexColors:!1;A.__vertexArray=new Float32Array(3*t);j&&(A.__normalArray=new Float32Array(3*t));y.hasTangents&&(A.__tangentArray=new Float32Array(4*t));q&&(A.__colorArray=new Float32Array(3*t));if(g){if(0<y.faceUvs.length||0<y.faceVertexUvs.length){A.__uvArray=new Float32Array(2*t)}if(1<y.faceUvs.length||1<y.faceVertexUvs.length){A.__uv2Array=new Float32Array(2*t)}}z.geometry.skinWeights.length&&z.geometry.skinIndices.length&&(A.__skinIndexArray=new Float32Array(4*t),A.__skinWeightArray=new Float32Array(4*t));A.__faceArray=new Uint16Array(3*s);A.__lineArray=new Uint16Array(2*u);if(A.numMorphTargets){A.__morphTargetsArrays=[];y=0;for(g=A.numMorphTargets;y<g;y++){A.__morphTargetsArrays.push(new Float32Array(3*t))}}if(A.numMorphNormals){A.__morphNormalsArrays=[];y=0;for(g=A.numMorphNormals;y<g;y++){A.__morphNormalsArrays.push(new Float32Array(3*t))}}A.__webglFaceCount=3*s;A.__webglLineCount=2*u;if(x.attributes){void 0===A.__webglCustomAttributesList&&(A.__webglCustomAttributesList=[]);for(var f in x.attributes){var s=x.attributes[f],y={},e;for(e in s){y[e]=s[e]}if(!y.__webglInitialized||y.createUniqueBuffers){y.__webglInitialized=!0,u=1,"v2"===y.type?u=2:"v3"===y.type?u=3:"v4"===y.type?u=4:"c"===y.type&&(u=3),y.size=u,y.array=new Float32Array(t*u),y.buffer=aB.createBuffer(),y.buffer.belongsToAttribute=f,s.needsUpdate=!0,y.__original=s}A.__webglCustomAttributesList.push(y)}}A.__inittedArrays=!0}function aK(d,c){return d.material instanceof THREE.MeshFaceMaterial?d.material.materials[c.materialIndex]:d.material}function aH(b){return b instanceof THREE.MeshBasicMaterial&&!b.envMap||b instanceof THREE.MeshDepthMaterial?!1:b&&void 0!==b.shading&&b.shading===THREE.SmoothShading?THREE.SmoothShading:THREE.FlatShading}function aG(b){return b.map||b.lightMap||b.bumpMap||b.normalMap||b.specularMap||b instanceof THREE.ShaderMaterial?!0:!1}function aE(f){var e,h,g;for(e in f.attributes){g="index"===e?aB.ELEMENT_ARRAY_BUFFER:aB.ARRAY_BUFFER,h=f.attributes[e],h.buffer=aB.createBuffer(),aB.bindBuffer(g,h.buffer),aB.bufferData(g,h.array,aB.STATIC_DRAW)}}function aD(u,t,s){var r=u.attributes,q=r.index,p=r.position,n=r.normal,m=r.uv,l=r.color,r=r.tangent;u.elementsNeedUpdate&&void 0!==q&&(aB.bindBuffer(aB.ELEMENT_ARRAY_BUFFER,q.buffer),aB.bufferData(aB.ELEMENT_ARRAY_BUFFER,q.array,t));u.verticesNeedUpdate&&void 0!==p&&(aB.bindBuffer(aB.ARRAY_BUFFER,p.buffer),aB.bufferData(aB.ARRAY_BUFFER,p.array,t));u.normalsNeedUpdate&&void 0!==n&&(aB.bindBuffer(aB.ARRAY_BUFFER,n.buffer),aB.bufferData(aB.ARRAY_BUFFER,n.array,t));u.uvsNeedUpdate&&void 0!==m&&(aB.bindBuffer(aB.ARRAY_BUFFER,m.buffer),aB.bufferData(aB.ARRAY_BUFFER,m.array,t));u.colorsNeedUpdate&&void 0!==l&&(aB.bindBuffer(aB.ARRAY_BUFFER,l.buffer),aB.bufferData(aB.ARRAY_BUFFER,l.array,t));u.tangentsNeedUpdate&&void 0!==r&&(aB.bindBuffer(aB.ARRAY_BUFFER,r.buffer),aB.bufferData(aB.ARRAY_BUFFER,r.array,t));if(s){for(var j in u.attributes){delete u.attributes[j].array}}}function aA(b){bB[b]||(aB.enableVertexAttribArray(b),bB[b]=!0)}function aw(){for(var b in bB){bB[b]&&(aB.disableVertexAttribArray(b),bB[b]=!1)}}function av(d,c){return d.z!==c.z?c.z-d.z:c.id-d.id}function ay(d,c){return c[0]-d[0]}function ar(g,f,j){if(g.length){for(var i=0,h=g.length;i<h;i++){bs=bD=null,af=aR=bA=aF=ai=v=bx=-1,aS=!0,g[i].render(f,j,bC,bj),bs=bD=null,af=aR=bA=aF=ai=v=bx=-1,aS=!0}}}function aq(C,B,A,z,y,x,u,t){var r,s,q,l;B?(s=C.length-1,l=B=-1):(s=0,B=C.length,l=1);for(var p=s;p!==B;p+=l){if(r=C[p],r.render){s=r.object;q=r.buffer;if(t){r=t}else{r=r[A];if(!r){continue}u&&aZ.setBlending(r.blending,r.blendEquation,r.blendSrc,r.blendDst);aZ.setDepthTest(r.depthTest);aZ.setDepthWrite(r.depthWrite);a8(r.polygonOffset,r.polygonOffsetFactor,r.polygonOffsetUnits)}aZ.setMaterialFaces(r);q instanceof THREE.BufferGeometry?aZ.renderBufferDirect(z,y,x,r,q,s):aZ.renderBuffer(z,y,x,r,q,s)}}}function az(y,x,u,t,s,r,q){for(var p,m,n=0,l=y.length;n<l;n++){if(p=y[n],m=p.object,m.visible){if(q){p=q}else{p=p[x];if(!p){continue}r&&aZ.setBlending(p.blending,p.blendEquation,p.blendSrc,p.blendDst);aZ.setDepthTest(p.depthTest);aZ.setDepthWrite(p.depthWrite);a8(p.polygonOffset,p.polygonOffsetFactor,p.polygonOffsetUnits)}aZ.renderImmediateObject(u,t,s,p,m)}}}function au(e,d,f){e.push({buffer:d,object:f,opaque:null,transparent:null})}function ao(d){for(var c in d.attributes){if(d.attributes[c].needsUpdate){return !0}}return !1}function bg(d){for(var c in d.attributes){d.attributes[c].needsUpdate=!1}}function an(e,d){for(var f=e.length-1;0<=f;f--){e[f].object===d&&e.splice(f,1)}}function ap(e,d){for(var f=e.length-1;0<=f;f--){e[f]===d&&e.splice(f,1)}}function a9(cc,cb,b9,b8,b7){bl=0;b8.needsUpdate&&(b8.program&&a2(b8),aZ.initMaterial(b8,cb,b9,b7),b8.needsUpdate=!1);b8.morphTargets&&!b7.__webglMorphTargetInfluences&&(b7.__webglMorphTargetInfluences=new Float32Array(aZ.maxMorphTargets));var b6=!1,b5=b8.program,b4=b5.uniforms,b3=b8.uniforms;b5!==bD&&(aB.useProgram(b5),bD=b5,b6=!0);b8.id!==af&&(af=b8.id,b6=!0);if(b6||cc!==bs){aB.uniformMatrix4fv(b4.projectionMatrix,!1,cc.projectionMatrix.elements),cc!==bs&&(bs=cc)}if(b8.skinning){if(bp&&b7.useVertexTexture){if(null!==b4.boneTexture){var b2=bf();aB.uniform1i(b4.boneTexture,b2);aZ.setTexture(b7.boneTexture,b2)}}else{null!==b4.boneGlobalMatrices&&aB.uniformMatrix4fv(b4.boneGlobalMatrices,!1,b7.boneMatrices)}}if(b6){b9&&b8.fog&&(b3.fogColor.value=b9.color,b9 instanceof THREE.Fog?(b3.fogNear.value=b9.near,b3.fogFar.value=b9.far):b9 instanceof THREE.FogExp2&&(b3.fogDensity.value=b9.density));if(b8 instanceof THREE.MeshPhongMaterial||b8 instanceof THREE.MeshLambertMaterial||b8.lights){if(aS){for(var bZ,b0=b2=0,b1=0,bY,bW,bV,bX=aJ,bU=bX.directional.colors,bT=bX.directional.positions,bR=bX.point.colors,bP=bX.point.positions,bK=bX.point.distances,bL=bX.spot.colors,bJ=bX.spot.positions,bI=bX.spot.distances,N=bX.spot.directions,bH=bX.spot.anglesCos,bd=bX.spot.exponents,H=bX.hemi.skyColors,ab=bX.hemi.groundColors,j=bX.hemi.positions,bM=0,J=0,K=0,C=0,bN=0,bQ=0,z=0,bO=0,D=bZ=0,b9=bV=D=0,b6=cb.length;b9<b6;b9++){bZ=cb[b9],bZ.onlyShadow||(bY=bZ.color,bW=bZ.intensity,bV=bZ.distance,bZ instanceof THREE.AmbientLight?bZ.visible&&(aZ.gammaInput?(b2+=bY.r*bY.r,b0+=bY.g*bY.g,b1+=bY.b*bY.b):(b2+=bY.r,b0+=bY.g,b1+=bY.b)):bZ instanceof THREE.DirectionalLight?(bN+=1,bZ.visible&&(ag.copy(bZ.matrixWorld.getPosition()),ag.subSelf(bZ.target.matrixWorld.getPosition()),ag.normalize(),0===ag.x&&0===ag.y&&0===ag.z||(bZ=3*bM,bT[bZ]=ag.x,bT[bZ+1]=ag.y,bT[bZ+2]=ag.z,aZ.gammaInput?ak(bU,bZ,bY,bW*bW):a7(bU,bZ,bY,bW),bM+=1))):bZ instanceof THREE.PointLight?(bQ+=1,bZ.visible&&(D=3*J,aZ.gammaInput?ak(bR,D,bY,bW*bW):a7(bR,D,bY,bW),bW=bZ.matrixWorld.getPosition(),bP[D]=bW.x,bP[D+1]=bW.y,bP[D+2]=bW.z,bK[J]=bV,J+=1)):bZ instanceof THREE.SpotLight?(z+=1,bZ.visible&&(D=3*K,aZ.gammaInput?ak(bL,D,bY,bW*bW):a7(bL,D,bY,bW),bW=bZ.matrixWorld.getPosition(),bJ[D]=bW.x,bJ[D+1]=bW.y,bJ[D+2]=bW.z,bI[K]=bV,ag.copy(bW),ag.subSelf(bZ.target.matrixWorld.getPosition()),ag.normalize(),N[D]=ag.x,N[D+1]=ag.y,N[D+2]=ag.z,bH[K]=Math.cos(bZ.angle),bd[K]=bZ.exponent,K+=1)):bZ instanceof THREE.HemisphereLight&&(bO+=1,bZ.visible&&(ag.copy(bZ.matrixWorld.getPosition()),ag.normalize(),0===ag.x&&0===ag.y&&0===ag.z||(bV=3*C,j[bV]=ag.x,j[bV+1]=ag.y,j[bV+2]=ag.z,bY=bZ.color,bZ=bZ.groundColor,aZ.gammaInput?(bW*=bW,ak(H,bV,bY,bW),ak(ab,bV,bZ,bW)):(a7(H,bV,bY,bW),a7(ab,bV,bZ,bW)),C+=1))))}b9=3*bM;for(b6=Math.max(bU.length,3*bN);b9<b6;b9++){bU[b9]=0}b9=3*J;for(b6=Math.max(bR.length,3*bQ);b9<b6;b9++){bR[b9]=0}b9=3*K;for(b6=Math.max(bL.length,3*z);b9<b6;b9++){bL[b9]=0}b9=3*C;for(b6=Math.max(H.length,3*bO);b9<b6;b9++){H[b9]=0}b9=3*C;for(b6=Math.max(ab.length,3*bO);b9<b6;b9++){ab[b9]=0}bX.directional.length=bM;bX.point.length=J;bX.spot.length=K;bX.hemi.length=C;bX.ambient[0]=b2;bX.ambient[1]=b0;bX.ambient[2]=b1;aS=!1}b9=aJ;b3.ambientLightColor.value=b9.ambient;b3.directionalLightColor.value=b9.directional.colors;b3.directionalLightDirection.value=b9.directional.positions;b3.pointLightColor.value=b9.point.colors;b3.pointLightPosition.value=b9.point.positions;b3.pointLightDistance.value=b9.point.distances;b3.spotLightColor.value=b9.spot.colors;b3.spotLightPosition.value=b9.spot.positions;b3.spotLightDistance.value=b9.spot.distances;b3.spotLightDirection.value=b9.spot.directions;b3.spotLightAngleCos.value=b9.spot.anglesCos;b3.spotLightExponent.value=b9.spot.exponents;b3.hemisphereLightSkyColor.value=b9.hemi.skyColors;b3.hemisphereLightGroundColor.value=b9.hemi.groundColors;b3.hemisphereLightDirection.value=b9.hemi.positions}if(b8 instanceof THREE.MeshBasicMaterial||b8 instanceof THREE.MeshLambertMaterial||b8 instanceof THREE.MeshPhongMaterial){b3.opacity.value=b8.opacity;aZ.gammaInput?b3.diffuse.value.copyGammaToLinear(b8.color):b3.diffuse.value=b8.color;b3.map.value=b8.map;b3.lightMap.value=b8.lightMap;b3.specularMap.value=b8.specularMap;b8.bumpMap&&(b3.bumpMap.value=b8.bumpMap,b3.bumpScale.value=b8.bumpScale);b8.normalMap&&(b3.normalMap.value=b8.normalMap,b3.normalScale.value.copy(b8.normalScale));var bS;b8.map?bS=b8.map:b8.specularMap?bS=b8.specularMap:b8.normalMap?bS=b8.normalMap:b8.bumpMap&&(bS=b8.bumpMap);void 0!==bS&&(b9=bS.offset,bS=bS.repeat,b3.offsetRepeat.value.set(b9.x,b9.y,bS.x,bS.y));b3.envMap.value=b8.envMap;b3.flipEnvMap.value=b8.envMap instanceof THREE.WebGLRenderTargetCube?1:-1;b3.reflectivity.value=b8.reflectivity;b3.refractionRatio.value=b8.refractionRatio;b3.combine.value=b8.combine;b3.useRefract.value=b8.envMap&&b8.envMap.mapping instanceof THREE.CubeRefractionMapping}b8 instanceof THREE.LineBasicMaterial?(b3.diffuse.value=b8.color,b3.opacity.value=b8.opacity):b8 instanceof THREE.LineDashedMaterial?(b3.diffuse.value=b8.color,b3.opacity.value=b8.opacity,b3.dashSize.value=b8.dashSize,b3.totalSize.value=b8.dashSize+b8.gapSize,b3.scale.value=b8.scale):b8 instanceof THREE.ParticleBasicMaterial?(b3.psColor.value=b8.color,b3.opacity.value=b8.opacity,b3.size.value=b8.size,b3.scale.value=a3.height/2,b3.map.value=b8.map):b8 instanceof THREE.MeshPhongMaterial?(b3.shininess.value=b8.shininess,aZ.gammaInput?(b3.ambient.value.copyGammaToLinear(b8.ambient),b3.emissive.value.copyGammaToLinear(b8.emissive),b3.specular.value.copyGammaToLinear(b8.specular)):(b3.ambient.value=b8.ambient,b3.emissive.value=b8.emissive,b3.specular.value=b8.specular),b8.wrapAround&&b3.wrapRGB.value.copy(b8.wrapRGB)):b8 instanceof THREE.MeshLambertMaterial?(aZ.gammaInput?(b3.ambient.value.copyGammaToLinear(b8.ambient),b3.emissive.value.copyGammaToLinear(b8.emissive)):(b3.ambient.value=b8.ambient,b3.emissive.value=b8.emissive),b8.wrapAround&&b3.wrapRGB.value.copy(b8.wrapRGB)):b8 instanceof THREE.MeshDepthMaterial?(b3.mNear.value=cc.near,b3.mFar.value=cc.far,b3.opacity.value=b8.opacity):b8 instanceof THREE.MeshNormalMaterial&&(b3.opacity.value=b8.opacity);if(b7.receiveShadow&&!b8._shadowPass&&b3.shadowMatrix){b9=bS=0;for(b6=cb.length;b9<b6;b9++){if(b2=cb[b9],b2.castShadow&&(b2 instanceof THREE.SpotLight||b2 instanceof THREE.DirectionalLight&&!b2.shadowCascade)){b3.shadowMap.value[bS]=b2.shadowMap,b3.shadowMapSize.value[bS]=b2.shadowMapSize,b3.shadowMatrix.value[bS]=b2.shadowMatrix,b3.shadowDarkness.value[bS]=b2.shadowDarkness,b3.shadowBias.value[bS]=b2.shadowBias,bS++}}}cb=b8.uniformsList;b3=0;for(bS=cb.length;b3<bS;b3++){if(b6=b5.uniforms[cb[b3][1]]){if(b9=cb[b3][0],b0=b9.type,b2=b9.value,"i"===b0){aB.uniform1i(b6,b2)}else{if("f"===b0){aB.uniform1f(b6,b2)}else{if("v2"===b0){aB.uniform2f(b6,b2.x,b2.y)}else{if("v3"===b0){aB.uniform3f(b6,b2.x,b2.y,b2.z)}else{if("v4"===b0){aB.uniform4f(b6,b2.x,b2.y,b2.z,b2.w)}else{if("c"===b0){aB.uniform3f(b6,b2.r,b2.g,b2.b)}else{if("iv1"===b0){aB.uniform1iv(b6,b2)}else{if("iv"===b0){aB.uniform3iv(b6,b2)}else{if("fv1"===b0){aB.uniform1fv(b6,b2)}else{if("fv"===b0){aB.uniform3fv(b6,b2)}else{if("v2v"===b0){void 0===b9._array&&(b9._array=new Float32Array(2*b2.length));b0=0;for(b1=b2.length;b0<b1;b0++){bX=2*b0,b9._array[bX]=b2[b0].x,b9._array[bX+1]=b2[b0].y}aB.uniform2fv(b6,b9._array)}else{if("v3v"===b0){void 0===b9._array&&(b9._array=new Float32Array(3*b2.length));b0=0;for(b1=b2.length;b0<b1;b0++){bX=3*b0,b9._array[bX]=b2[b0].x,b9._array[bX+1]=b2[b0].y,b9._array[bX+2]=b2[b0].z}aB.uniform3fv(b6,b9._array)}else{if("v4v"===b0){void 0===b9._array&&(b9._array=new Float32Array(4*b2.length));b0=0;for(b1=b2.length;b0<b1;b0++){bX=4*b0,b9._array[bX]=b2[b0].x,b9._array[bX+1]=b2[b0].y,b9._array[bX+2]=b2[b0].z,b9._array[bX+3]=b2[b0].w}aB.uniform4fv(b6,b9._array)}else{if("m4"===b0){void 0===b9._array&&(b9._array=new Float32Array(16)),b2.flattenToArray(b9._array),aB.uniformMatrix4fv(b6,!1,b9._array)}else{if("m4v"===b0){void 0===b9._array&&(b9._array=new Float32Array(16*b2.length));b0=0;for(b1=b2.length;b0<b1;b0++){b2[b0].flattenToArrayOffset(b9._array,16*b0)}aB.uniformMatrix4fv(b6,!1,b9._array)}else{if("t"===b0){if(bX=b2,b2=bf(),aB.uniform1i(b6,b2),bX){if(bX.image instanceof Array&&6===bX.image.length){if(b9=bX,b6=b2,6===b9.image.length){if(b9.needsUpdate){b9.image.__webglTextureCube||(b9.image.__webglTextureCube=aB.createTexture(),aZ.info.memory.textures++);aB.activeTexture(aB.TEXTURE0+b6);aB.bindTexture(aB.TEXTURE_CUBE_MAP,b9.image.__webglTextureCube);aB.pixelStorei(aB.UNPACK_FLIP_Y_WEBGL,b9.flipY);b6=b9 instanceof THREE.CompressedTexture;b2=[];for(b0=0;6>b0;b0++){aZ.autoScaleCubemaps&&!b6?(b1=b2,bX=b0,bU=b9.image[b0],bR=aV,bU.width<=bR&&bU.height<=bR||(bP=Math.max(bU.width,bU.height),bT=Math.floor(bU.width*bR/bP),bR=Math.floor(bU.height*bR/bP),bP=document.createElement("canvas"),bP.width=bT,bP.height=bR,bP.getContext("2d").drawImage(bU,0,0,bU.width,bU.height,0,0,bT,bR),bU=bP),b1[bX]=bU):b2[b0]=b9.image[b0]}b0=b2[0];b1=0===(b0.width&b0.width-1)&&0===(b0.height&b0.height-1);bX=a4(b9.format);bU=a4(b9.type);bc(aB.TEXTURE_CUBE_MAP,b9,b1);for(b0=0;6>b0;b0++){if(b6){bR=b2[b0].mipmaps;bP=0;for(bK=bR.length;bP<bK;bP++){bT=bR[bP],aB.compressedTexImage2D(aB.TEXTURE_CUBE_MAP_POSITIVE_X+b0,bP,bX,bT.width,bT.height,0,bT.data)}}else{aB.texImage2D(aB.TEXTURE_CUBE_MAP_POSITIVE_X+b0,0,bX,bX,bU,b2[b0])}}b9.generateMipmaps&&b1&&aB.generateMipmap(aB.TEXTURE_CUBE_MAP);b9.needsUpdate=!1;if(b9.onUpdate){b9.onUpdate()}}else{aB.activeTexture(aB.TEXTURE0+b6),aB.bindTexture(aB.TEXTURE_CUBE_MAP,b9.image.__webglTextureCube)}}}else{bX instanceof THREE.WebGLRenderTargetCube?(b9=bX,aB.activeTexture(aB.TEXTURE0+b2),aB.bindTexture(aB.TEXTURE_CUBE_MAP,b9.__webglTexture)):aZ.setTexture(bX,b2)}}}else{if("tv"===b0){void 0===b9._array&&(b9._array=[]);b0=0;for(b1=b9.value.length;b0<b1;b0++){b9._array[b0]=bf()}aB.uniform1iv(b6,b9._array);b0=0;for(b1=b9.value.length;b0<b1;b0++){bX=b9.value[b0],b2=b9._array[b0],bX&&aZ.setTexture(bX,b2)}}}}}}}}}}}}}}}}}}}}if((b8 instanceof THREE.ShaderMaterial||b8 instanceof THREE.MeshPhongMaterial||b8.envMap)&&null!==b4.cameraPosition){cb=cc.matrixWorld.getPosition(),aB.uniform3f(b4.cameraPosition,cb.x,cb.y,cb.z)}(b8 instanceof THREE.MeshPhongMaterial||b8 instanceof THREE.MeshLambertMaterial||b8 instanceof THREE.ShaderMaterial||b8.skinning)&&null!==b4.viewMatrix&&aB.uniformMatrix4fv(b4.viewMatrix,!1,cc.matrixWorldInverse.elements)}aB.uniformMatrix4fv(b4.modelViewMatrix,!1,b7._modelViewMatrix.elements);b4.normalMatrix&&aB.uniformMatrix3fv(b4.normalMatrix,!1,b7._normalMatrix.elements);null!==b4.modelMatrix&&aB.uniformMatrix4fv(b4.modelMatrix,!1,b7.matrixWorld.elements);return b5}function bf(){var b=bl;b>=T&&console.warn("WebGLRenderer: trying to use "+b+" texture units while this GPU supports only "+T);bl+=1;return b}function bi(d,c){d._modelViewMatrix.multiply(c.matrixWorldInverse,d.matrixWorld);d._normalMatrix.getInverse(d._modelViewMatrix);d._normalMatrix.transpose()}function ak(f,e,h,g){f[e]=h.r*h.r*g;f[e+1]=h.g*h.g*g;f[e+2]=h.b*h.b*g}function a7(f,e,h,g){f[e]=h.r*g;f[e+1]=h.g*g;f[e+2]=h.b*g}function a8(e,d,f){ae!==e&&(e?aB.enable(aB.POLYGON_OFFSET_FILL):aB.disable(aB.POLYGON_OFFSET_FILL),ae=e);if(e&&(W!==d||bm!==f)){aB.polygonOffset(d,f),W=d,bm=f}}function a6(e){for(var e=e.split("\n"),d=0,f=e.length;d<f;d++){e[d]=d+1+": "+e[d]}return e.join("\n")}function bv(e,d){var f;"fragment"===e?f=aB.createShader(aB.FRAGMENT_SHADER):"vertex"===e&&(f=aB.createShader(aB.VERTEX_SHADER));aB.shaderSource(f,d);aB.compileShader(f);return !aB.getShaderParameter(f,aB.COMPILE_STATUS)?(console.error(aB.getShaderInfoLog(f)),console.error(a6(d)),null):f}function bc(e,d,f){f?(aB.texParameteri(e,aB.TEXTURE_WRAP_S,a4(d.wrapS)),aB.texParameteri(e,aB.TEXTURE_WRAP_T,a4(d.wrapT)),aB.texParameteri(e,aB.TEXTURE_MAG_FILTER,a4(d.magFilter)),aB.texParameteri(e,aB.TEXTURE_MIN_FILTER,a4(d.minFilter))):(aB.texParameteri(e,aB.TEXTURE_WRAP_S,aB.CLAMP_TO_EDGE),aB.texParameteri(e,aB.TEXTURE_WRAP_T,aB.CLAMP_TO_EDGE),aB.texParameteri(e,aB.TEXTURE_MAG_FILTER,al(d.magFilter)),aB.texParameteri(e,aB.TEXTURE_MIN_FILTER,al(d.minFilter)));if(ad&&d.type!==THREE.FloatType&&(1<d.anisotropy||d.__oldAnisotropy)){aB.texParameterf(e,ad.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(d.anisotropy,ah)),d.__oldAnisotropy=d.anisotropy}}function a1(d,c){aB.bindRenderbuffer(aB.RENDERBUFFER,d);c.depthBuffer&&!c.stencilBuffer?(aB.renderbufferStorage(aB.RENDERBUFFER,aB.DEPTH_COMPONENT16,c.width,c.height),aB.framebufferRenderbuffer(aB.FRAMEBUFFER,aB.DEPTH_ATTACHMENT,aB.RENDERBUFFER,d)):c.depthBuffer&&c.stencilBuffer?(aB.renderbufferStorage(aB.RENDERBUFFER,aB.DEPTH_STENCIL,c.width,c.height),aB.framebufferRenderbuffer(aB.FRAMEBUFFER,aB.DEPTH_STENCIL_ATTACHMENT,aB.RENDERBUFFER,d)):aB.renderbufferStorage(aB.RENDERBUFFER,aB.RGBA4,c.width,c.height)}function al(b){return b===THREE.NearestFilter||b===THREE.NearestMipMapNearestFilter||b===THREE.NearestMipMapLinearFilter?aB.NEAREST:aB.LINEAR}function a4(b){if(b===THREE.RepeatWrapping){return aB.REPEAT}if(b===THREE.ClampToEdgeWrapping){return aB.CLAMP_TO_EDGE}if(b===THREE.MirroredRepeatWrapping){return aB.MIRRORED_REPEAT}if(b===THREE.NearestFilter){return aB.NEAREST}if(b===THREE.NearestMipMapNearestFilter){return aB.NEAREST_MIPMAP_NEAREST}if(b===THREE.NearestMipMapLinearFilter){return aB.NEAREST_MIPMAP_LINEAR}if(b===THREE.LinearFilter){return aB.LINEAR}if(b===THREE.LinearMipMapNearestFilter){return aB.LINEAR_MIPMAP_NEAREST}if(b===THREE.LinearMipMapLinearFilter){return aB.LINEAR_MIPMAP_LINEAR}if(b===THREE.UnsignedByteType){return aB.UNSIGNED_BYTE}if(b===THREE.UnsignedShort4444Type){return aB.UNSIGNED_SHORT_4_4_4_4}if(b===THREE.UnsignedShort5551Type){return aB.UNSIGNED_SHORT_5_5_5_1}if(b===THREE.UnsignedShort565Type){return aB.UNSIGNED_SHORT_5_6_5}if(b===THREE.ByteType){return aB.BYTE}if(b===THREE.ShortType){return aB.SHORT}if(b===THREE.UnsignedShortType){return aB.UNSIGNED_SHORT}if(b===THREE.IntType){return aB.INT}if(b===THREE.UnsignedIntType){return aB.UNSIGNED_INT}if(b===THREE.FloatType){return aB.FLOAT}if(b===THREE.AlphaFormat){return aB.ALPHA}if(b===THREE.RGBFormat){return aB.RGB}if(b===THREE.RGBAFormat){return aB.RGBA}if(b===THREE.LuminanceFormat){return aB.LUMINANCE}if(b===THREE.LuminanceAlphaFormat){return aB.LUMINANCE_ALPHA}if(b===THREE.AddEquation){return aB.FUNC_ADD}if(b===THREE.SubtractEquation){return aB.FUNC_SUBTRACT}if(b===THREE.ReverseSubtractEquation){return aB.FUNC_REVERSE_SUBTRACT}if(b===THREE.ZeroFactor){return aB.ZERO}if(b===THREE.OneFactor){return aB.ONE}if(b===THREE.SrcColorFactor){return aB.SRC_COLOR}if(b===THREE.OneMinusSrcColorFactor){return aB.ONE_MINUS_SRC_COLOR}if(b===THREE.SrcAlphaFactor){return aB.SRC_ALPHA}if(b===THREE.OneMinusSrcAlphaFactor){return aB.ONE_MINUS_SRC_ALPHA}if(b===THREE.DstAlphaFactor){return aB.DST_ALPHA}if(b===THREE.OneMinusDstAlphaFactor){return aB.ONE_MINUS_DST_ALPHA}if(b===THREE.DstColorFactor){return aB.DST_COLOR}if(b===THREE.OneMinusDstColorFactor){return aB.ONE_MINUS_DST_COLOR}if(b===THREE.SrcAlphaSaturateFactor){return aB.SRC_ALPHA_SATURATE}if(void 0!==aC){if(b===THREE.RGB_S3TC_DXT1_Format){return aC.COMPRESSED_RGB_S3TC_DXT1_EXT}if(b===THREE.RGBA_S3TC_DXT1_Format){return aC.COMPRESSED_RGBA_S3TC_DXT1_EXT}if(b===THREE.RGBA_S3TC_DXT3_Format){return aC.COMPRESSED_RGBA_S3TC_DXT3_EXT}if(b===THREE.RGBA_S3TC_DXT5_Format){return aC.COMPRESSED_RGBA_S3TC_DXT5_EXT}}return 0}console.log("THREE.WebGLRenderer",THREE.REVISION);var aP=aP||{},a3=void 0!==aP.canvas?aP.canvas:document.createElement("canvas"),aW=void 0!==aP.precision?aP.precision:"highp",aX=void 0!==aP.alpha?aP.alpha:!0,ax=void 0!==aP.premultipliedAlpha?aP.premultipliedAlpha:!0,o=void 0!==aP.antialias?aP.antialias:!1,a0=void 0!==aP.stencil?aP.stencil:!0,aj=void 0!==aP.preserveDrawingBuffer?aP.preserveDrawingBuffer:!1,bz=void 0!==aP.clearColor?new THREE.Color(aP.clearColor):new THREE.Color(0),aQ=void 0!==aP.clearAlpha?aP.clearAlpha:0;this.domElement=a3;this.context=null;this.devicePixelRatio=void 0!==aP.devicePixelRatio?aP.devicePixelRatio:void 0!==window.devicePixelRatio?window.devicePixelRatio:1;this.autoUpdateScene=this.autoUpdateObjects=this.sortObjects=this.autoClearStencil=this.autoClearDepth=this.autoClearColor=this.autoClear=!0;this.shadowMapEnabled=this.physicallyBasedShading=this.gammaOutput=this.gammaInput=!1;this.shadowMapAutoUpdate=!0;this.shadowMapType=THREE.PCFShadowMap;this.shadowMapCullFace=THREE.CullFaceFront;this.shadowMapCascade=this.shadowMapDebug=!1;this.maxMorphTargets=8;this.maxMorphNormals=4;this.autoScaleCubemaps=!0;this.renderPluginsPre=[];this.renderPluginsPost=[];this.info={memory:{programs:0,geometries:0,textures:0},render:{calls:0,vertices:0,faces:0,points:0}};var aZ=this,aY=[],bo=0,bD=null,aU=null,af=-1,aR=null,bs=null,aM=0,bl=0,aF=-1,bA=-1,bx=-1,ba=-1,br=-1,E=-1,v=-1,ai=-1,ae=null,W=null,bm=null,bt=null,Y=0,a5=0,bu=0,U=0,bC=0,bj=0,bB={},by=new THREE.Frustum,w=new THREE.Matrix4,bw=new THREE.Matrix4,bb=new THREE.Vector3,ag=new THREE.Vector3,aS=!0,aJ={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[],distances:[]},spot:{length:0,colors:[],positions:[],distances:[],directions:[],anglesCos:[],exponents:[]},hemi:{length:0,skyColors:[],groundColors:[],positions:[]}},aB,S,bq,ad,aC;try{if(!(aB=a3.getContext("experimental-webgl",{alpha:aX,premultipliedAlpha:ax,antialias:o,stencil:a0,preserveDrawingBuffer:aj}))){throw"Error creating WebGL context."}}catch(at){console.error(at)}S=aB.getExtension("OES_texture_float");bq=aB.getExtension("OES_standard_derivatives");ad=aB.getExtension("EXT_texture_filter_anisotropic")||aB.getExtension("MOZ_EXT_texture_filter_anisotropic")||aB.getExtension("WEBKIT_EXT_texture_filter_anisotropic");aC=aB.getExtension("WEBGL_compressed_texture_s3tc")||aB.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||aB.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");S||console.log("THREE.WebGLRenderer: Float textures not supported.");bq||console.log("THREE.WebGLRenderer: Standard derivatives not supported.");ad||console.log("THREE.WebGLRenderer: Anisotropic texture filtering not supported.");aC||console.log("THREE.WebGLRenderer: S3TC compressed textures not supported.");aB.clearColor(0,0,0,1);aB.clearDepth(1);aB.clearStencil(0);aB.enable(aB.DEPTH_TEST);aB.depthFunc(aB.LEQUAL);aB.frontFace(aB.CCW);aB.cullFace(aB.BACK);aB.enable(aB.CULL_FACE);aB.enable(aB.BLEND);aB.blendEquation(aB.FUNC_ADD);aB.blendFunc(aB.SRC_ALPHA,aB.ONE_MINUS_SRC_ALPHA);aB.clearColor(bz.r,bz.g,bz.b,aQ);this.context=aB;var T=aB.getParameter(aB.MAX_TEXTURE_IMAGE_UNITS),ac=aB.getParameter(aB.MAX_VERTEX_TEXTURE_IMAGE_UNITS);aB.getParameter(aB.MAX_TEXTURE_SIZE);var aV=aB.getParameter(aB.MAX_CUBE_MAP_TEXTURE_SIZE),ah=ad?aB.getParameter(ad.MAX_TEXTURE_MAX_ANISOTROPY_EXT):0,bF=0<ac,bp=bF&&S;aC&&aB.getParameter(aB.COMPRESSED_TEXTURE_FORMATS);var bh=aB.getShaderPrecisionFormat(aB.VERTEX_SHADER,aB.HIGH_FLOAT),bk=aB.getShaderPrecisionFormat(aB.VERTEX_SHADER,aB.MEDIUM_FLOAT);aB.getShaderPrecisionFormat(aB.VERTEX_SHADER,aB.LOW_FLOAT);var bG=aB.getShaderPrecisionFormat(aB.FRAGMENT_SHADER,aB.HIGH_FLOAT),aT=aB.getShaderPrecisionFormat(aB.FRAGMENT_SHADER,aB.MEDIUM_FLOAT);aB.getShaderPrecisionFormat(aB.FRAGMENT_SHADER,aB.LOW_FLOAT);aB.getShaderPrecisionFormat(aB.VERTEX_SHADER,aB.HIGH_INT);aB.getShaderPrecisionFormat(aB.VERTEX_SHADER,aB.MEDIUM_INT);aB.getShaderPrecisionFormat(aB.VERTEX_SHADER,aB.LOW_INT);aB.getShaderPrecisionFormat(aB.FRAGMENT_SHADER,aB.HIGH_INT);aB.getShaderPrecisionFormat(aB.FRAGMENT_SHADER,aB.MEDIUM_INT);aB.getShaderPrecisionFormat(aB.FRAGMENT_SHADER,aB.LOW_INT);var bE=0<bh.precision&&0<bG.precision,Q=0<bk.precision&&0<aT.precision;"highp"===aW&&!bE&&(Q?(aW="mediump",console.warn("WebGLRenderer: highp not supported, using mediump")):(aW="lowp",console.warn("WebGLRenderer: highp and mediump not supported, using lowp")));"mediump"===aW&&!Q&&(aW="lowp",console.warn("WebGLRenderer: mediump not supported, using lowp"));this.getContext=function(){return aB};this.supportsVertexTextures=function(){return bF};this.getMaxAnisotropy=function(){return ah};this.setSize=function(d,c){a3.width=d*this.devicePixelRatio;a3.height=c*this.devicePixelRatio;a3.style.width=d+"px";a3.style.height=c+"px";this.setViewport(0,0,a3.width,a3.height)};this.setViewport=function(f,e,h,g){Y=void 0!==f?f:0;a5=void 0!==e?e:0;bu=void 0!==h?h:a3.width;U=void 0!==g?g:a3.height;aB.viewport(Y,a5,bu,U)};this.setScissor=function(f,e,h,g){aB.scissor(f,e,h,g)};this.enableScissorTest=function(b){b?aB.enable(aB.SCISSOR_TEST):aB.disable(aB.SCISSOR_TEST)};this.setClearColorHex=function(d,c){bz.setHex(d);aQ=c;aB.clearColor(bz.r,bz.g,bz.b,aQ)};this.setClearColor=function(d,c){bz.copy(d);aQ=c;aB.clearColor(bz.r,bz.g,bz.b,aQ)};this.getClearColor=function(){return bz};this.getClearAlpha=function(){return aQ};this.clear=function(f,e,h){var g=0;if(void 0===f||f){g|=aB.COLOR_BUFFER_BIT}if(void 0===e||e){g|=aB.DEPTH_BUFFER_BIT}if(void 0===h||h){g|=aB.STENCIL_BUFFER_BIT}aB.clear(g)};this.clearTarget=function(f,e,h,g){this.setRenderTarget(f);this.clear(e,h,g)};this.addPostPlugin=function(b){b.init(this);this.renderPluginsPost.push(b)};this.addPrePlugin=function(b){b.init(this);this.renderPluginsPre.push(b)};this.updateShadowMap=function(d,c){bD=null;af=aR=ai=v=bx=-1;aS=!0;bA=aF=-1;this.shadowMapPlugin.update(d,c)};var be=function(b){b=b.target;b.removeEventListener("dispose",be);b.__webglInit=void 0;void 0!==b.__webglVertexBuffer&&aB.deleteBuffer(b.__webglVertexBuffer);void 0!==b.__webglNormalBuffer&&aB.deleteBuffer(b.__webglNormalBuffer);void 0!==b.__webglTangentBuffer&&aB.deleteBuffer(b.__webglTangentBuffer);void 0!==b.__webglColorBuffer&&aB.deleteBuffer(b.__webglColorBuffer);void 0!==b.__webglUVBuffer&&aB.deleteBuffer(b.__webglUVBuffer);void 0!==b.__webglUV2Buffer&&aB.deleteBuffer(b.__webglUV2Buffer);void 0!==b.__webglSkinIndicesBuffer&&aB.deleteBuffer(b.__webglSkinIndicesBuffer);void 0!==b.__webglSkinWeightsBuffer&&aB.deleteBuffer(b.__webglSkinWeightsBuffer);void 0!==b.__webglFaceBuffer&&aB.deleteBuffer(b.__webglFaceBuffer);void 0!==b.__webglLineBuffer&&aB.deleteBuffer(b.__webglLineBuffer);void 0!==b.__webglLineDistanceBuffer&&aB.deleteBuffer(b.__webglLineDistanceBuffer);if(void 0!==b.geometryGroups){for(var j in b.geometryGroups){var i=b.geometryGroups[j];if(void 0!==i.numMorphTargets){for(var h=0,g=i.numMorphTargets;h<g;h++){aB.deleteBuffer(i.__webglMorphTargetsBuffers[h])}}if(void 0!==i.numMorphNormals){h=0;for(g=i.numMorphNormals;h<g;h++){aB.deleteBuffer(i.__webglMorphNormalsBuffers[h])}}aO(i)}}aO(b);aZ.info.memory.geometries--},am=function(b){b=b.target;b.removeEventListener("dispose",am);b.image&&b.image.__webglTextureCube?aB.deleteTexture(b.image.__webglTextureCube):b.__webglInit&&(b.__webglInit=!1,aB.deleteTexture(b.__webglTexture));aZ.info.memory.textures--},bn=function(d){d=d.target;d.removeEventListener("dispose",bn);if(d&&d.__webglTexture){if(aB.deleteTexture(d.__webglTexture),d instanceof THREE.WebGLRenderTargetCube){for(var c=0;6>c;c++){aB.deleteFramebuffer(d.__webglFramebuffer[c]),aB.deleteRenderbuffer(d.__webglRenderbuffer[c])}}else{aB.deleteFramebuffer(d.__webglFramebuffer),aB.deleteRenderbuffer(d.__webglRenderbuffer)}}aZ.info.memory.textures--},aI=function(b){b=b.target;b.removeEventListener("dispose",aI);a2(b)},a2=function(g){var f=g.program;if(void 0!==f){g.program=void 0;var j,i,h=!1,g=0;for(j=aY.length;g<j;g++){if(i=aY[g],i.program===f){i.usedTimes--;0===i.usedTimes&&(h=!0);break}}if(!0===h){h=[];g=0;for(j=aY.length;g<j;g++){i=aY[g],i.program!==f&&h.push(i)}aY=h;aB.deleteProgram(f);aZ.info.memory.programs--}}};this.renderBufferImmediate=function(H,G,F){H.hasPositions&&!H.__webglVertexBuffer&&(H.__webglVertexBuffer=aB.createBuffer());H.hasNormals&&!H.__webglNormalBuffer&&(H.__webglNormalBuffer=aB.createBuffer());H.hasUvs&&!H.__webglUvBuffer&&(H.__webglUvBuffer=aB.createBuffer());H.hasColors&&!H.__webglColorBuffer&&(H.__webglColorBuffer=aB.createBuffer());H.hasPositions&&(aB.bindBuffer(aB.ARRAY_BUFFER,H.__webglVertexBuffer),aB.bufferData(aB.ARRAY_BUFFER,H.positionArray,aB.DYNAMIC_DRAW),aB.enableVertexAttribArray(G.attributes.position),aB.vertexAttribPointer(G.attributes.position,3,aB.FLOAT,!1,0,0));if(H.hasNormals){aB.bindBuffer(aB.ARRAY_BUFFER,H.__webglNormalBuffer);if(F.shading===THREE.FlatShading){var D,C,B,A,z,y,x,s,t,u,q,j=3*H.count;for(q=0;q<j;q+=9){u=H.normalArray,D=u[q],C=u[q+1],B=u[q+2],A=u[q+3],y=u[q+4],s=u[q+5],z=u[q+6],x=u[q+7],t=u[q+8],D=(D+A+z)/3,C=(C+y+x)/3,B=(B+s+t)/3,u[q]=D,u[q+1]=C,u[q+2]=B,u[q+3]=D,u[q+4]=C,u[q+5]=B,u[q+6]=D,u[q+7]=C,u[q+8]=B}}aB.bufferData(aB.ARRAY_BUFFER,H.normalArray,aB.DYNAMIC_DRAW);aB.enableVertexAttribArray(G.attributes.normal);aB.vertexAttribPointer(G.attributes.normal,3,aB.FLOAT,!1,0,0)}H.hasUvs&&F.map&&(aB.bindBuffer(aB.ARRAY_BUFFER,H.__webglUvBuffer),aB.bufferData(aB.ARRAY_BUFFER,H.uvArray,aB.DYNAMIC_DRAW),aB.enableVertexAttribArray(G.attributes.uv),aB.vertexAttribPointer(G.attributes.uv,2,aB.FLOAT,!1,0,0));H.hasColors&&F.vertexColors!==THREE.NoColors&&(aB.bindBuffer(aB.ARRAY_BUFFER,H.__webglColorBuffer),aB.bufferData(aB.ARRAY_BUFFER,H.colorArray,aB.DYNAMIC_DRAW),aB.enableVertexAttribArray(G.attributes.color),aB.vertexAttribPointer(G.attributes.color,3,aB.FLOAT,!1,0,0));aB.drawArrays(aB.TRIANGLES,0,H.count);H.count=0};this.renderBufferDirect=function(y,x,u,t,s,r){if(!1!==t.visible){if(u=a9(y,x,u,t,r),y=u.attributes,x=!1,t=16777215*s.id+2*u.id+(t.wireframe?1:0),t!==aR&&(aR=t,x=!0),x&&aw(),r instanceof THREE.Mesh){if(r=s.attributes.index){t=s.offsets;1<t.length&&(x=!0);for(var u=0,q=t.length;u<q;u++){var p=t[u].index;if(x){var n=s.attributes.position,j=n.itemSize;aB.bindBuffer(aB.ARRAY_BUFFER,n.buffer);aA(y.position);aB.vertexAttribPointer(y.position,j,aB.FLOAT,!1,0,4*p*j);j=s.attributes.normal;if(0<=y.normal&&j){var k=j.itemSize;aB.bindBuffer(aB.ARRAY_BUFFER,j.buffer);aA(y.normal);aB.vertexAttribPointer(y.normal,k,aB.FLOAT,!1,0,4*p*k)}j=s.attributes.uv;0<=y.uv&&j&&(k=j.itemSize,aB.bindBuffer(aB.ARRAY_BUFFER,j.buffer),aA(y.uv),aB.vertexAttribPointer(y.uv,k,aB.FLOAT,!1,0,4*p*k));j=s.attributes.color;0<=y.color&&j&&(k=j.itemSize,aB.bindBuffer(aB.ARRAY_BUFFER,j.buffer),aA(y.color),aB.vertexAttribPointer(y.color,k,aB.FLOAT,!1,0,4*p*k));j=s.attributes.tangent;0<=y.tangent&&j&&(k=j.itemSize,aB.bindBuffer(aB.ARRAY_BUFFER,j.buffer),aA(y.tangent),aB.vertexAttribPointer(y.tangent,k,aB.FLOAT,!1,0,4*p*k));aB.bindBuffer(aB.ELEMENT_ARRAY_BUFFER,r.buffer)}aB.drawElements(aB.TRIANGLES,t[u].count,aB.UNSIGNED_SHORT,2*t[u].start);aZ.info.render.calls++;aZ.info.render.vertices+=t[u].count;aZ.info.render.faces+=t[u].count/3}}else{x&&(n=s.attributes.position,j=n.itemSize,aB.bindBuffer(aB.ARRAY_BUFFER,n.buffer),aA(y.position),aB.vertexAttribPointer(y.position,j,aB.FLOAT,!1,0,0),j=s.attributes.normal,0<=y.normal&&j&&(k=j.itemSize,aB.bindBuffer(aB.ARRAY_BUFFER,j.buffer),aA(y.normal),aB.vertexAttribPointer(y.normal,k,aB.FLOAT,!1,0,0)),j=s.attributes.uv,0<=y.uv&&j&&(k=j.itemSize,aB.bindBuffer(aB.ARRAY_BUFFER,j.buffer),aA(y.uv),aB.vertexAttribPointer(y.uv,k,aB.FLOAT,!1,0,0)),j=s.attributes.color,0<=y.color&&j&&(k=j.itemSize,aB.bindBuffer(aB.ARRAY_BUFFER,j.buffer),aA(y.color),aB.vertexAttribPointer(y.color,k,aB.FLOAT,!1,0,0)),j=s.attributes.tangent,0<=y.tangent&&j&&(k=j.itemSize,aB.bindBuffer(aB.ARRAY_BUFFER,j.buffer),aA(y.tangent),aB.vertexAttribPointer(y.tangent,k,aB.FLOAT,!1,0,0))),aB.drawArrays(aB.TRIANGLES,0,n.numItems/3),aZ.info.render.calls++,aZ.info.render.vertices+=n.numItems/3,aZ.info.render.faces+=n.numItems/3/3}}else{r instanceof THREE.ParticleSystem&&x&&(n=s.attributes.position,j=n.itemSize,aB.bindBuffer(aB.ARRAY_BUFFER,n.buffer),aA(y.position),aB.vertexAttribPointer(y.position,j,aB.FLOAT,!1,0,0),j=s.attributes.color,0<=y.color&&j&&(k=j.itemSize,aB.bindBuffer(aB.ARRAY_BUFFER,j.buffer),aA(y.color),aB.vertexAttribPointer(y.color,k,aB.FLOAT,!1,0,0)),aB.drawArrays(aB.POINTS,0,n.numItems/3),aZ.info.render.calls++,aZ.info.render.points+=n.numItems/3)}}};this.renderBuffer=function(y,x,u,t,s,r){if(!1!==t.visible){var q,n,u=a9(y,x,u,t,r),x=u.attributes,y=!1,u=16777215*s.id+2*u.id+(t.wireframe?1:0);u!==aR&&(aR=u,y=!0);y&&aw();if(!t.morphTargets&&0<=x.position){y&&(aB.bindBuffer(aB.ARRAY_BUFFER,s.__webglVertexBuffer),aA(x.position),aB.vertexAttribPointer(x.position,3,aB.FLOAT,!1,0,0))}else{if(r.morphTargetBase){u=t.program.attributes;-1!==r.morphTargetBase&&0<=u.position?(aB.bindBuffer(aB.ARRAY_BUFFER,s.__webglMorphTargetsBuffers[r.morphTargetBase]),aA(u.position),aB.vertexAttribPointer(u.position,3,aB.FLOAT,!1,0,0)):0<=u.position&&(aB.bindBuffer(aB.ARRAY_BUFFER,s.__webglVertexBuffer),aA(u.position),aB.vertexAttribPointer(u.position,3,aB.FLOAT,!1,0,0));if(r.morphTargetForcedOrder.length){var m=0;n=r.morphTargetForcedOrder;for(q=r.morphTargetInfluences;m<t.numSupportedMorphTargets&&m<n.length;){0<=u["morphTarget"+m]&&(aB.bindBuffer(aB.ARRAY_BUFFER,s.__webglMorphTargetsBuffers[n[m]]),aA(u["morphTarget"+m]),aB.vertexAttribPointer(u["morphTarget"+m],3,aB.FLOAT,!1,0,0)),0<=u["morphNormal"+m]&&t.morphNormals&&(aB.bindBuffer(aB.ARRAY_BUFFER,s.__webglMorphNormalsBuffers[n[m]]),aA(u["morphNormal"+m]),aB.vertexAttribPointer(u["morphNormal"+m],3,aB.FLOAT,!1,0,0)),r.__webglMorphTargetInfluences[m]=q[n[m]],m++}}else{n=[];q=r.morphTargetInfluences;var k,j=q.length;for(k=0;k<j;k++){m=q[k],0<m&&n.push([m,k])}n.length>t.numSupportedMorphTargets?(n.sort(ay),n.length=t.numSupportedMorphTargets):n.length>t.numSupportedMorphNormals?n.sort(ay):0===n.length&&n.push([0,0]);for(m=0;m<t.numSupportedMorphTargets;){n[m]?(k=n[m][1],0<=u["morphTarget"+m]&&(aB.bindBuffer(aB.ARRAY_BUFFER,s.__webglMorphTargetsBuffers[k]),aA(u["morphTarget"+m]),aB.vertexAttribPointer(u["morphTarget"+m],3,aB.FLOAT,!1,0,0)),0<=u["morphNormal"+m]&&t.morphNormals&&(aB.bindBuffer(aB.ARRAY_BUFFER,s.__webglMorphNormalsBuffers[k]),aA(u["morphNormal"+m]),aB.vertexAttribPointer(u["morphNormal"+m],3,aB.FLOAT,!1,0,0)),r.__webglMorphTargetInfluences[m]=q[k]):r.__webglMorphTargetInfluences[m]=0,m++}}null!==t.program.uniforms.morphTargetInfluences&&aB.uniform1fv(t.program.uniforms.morphTargetInfluences,r.__webglMorphTargetInfluences)}}if(y){if(s.__webglCustomAttributesList){q=0;for(n=s.__webglCustomAttributesList.length;q<n;q++){u=s.__webglCustomAttributesList[q],0<=x[u.buffer.belongsToAttribute]&&(aB.bindBuffer(aB.ARRAY_BUFFER,u.buffer),aA(x[u.buffer.belongsToAttribute]),aB.vertexAttribPointer(x[u.buffer.belongsToAttribute],u.size,aB.FLOAT,!1,0,0))}}0<=x.color&&(aB.bindBuffer(aB.ARRAY_BUFFER,s.__webglColorBuffer),aA(x.color),aB.vertexAttribPointer(x.color,3,aB.FLOAT,!1,0,0));0<=x.normal&&(aB.bindBuffer(aB.ARRAY_BUFFER,s.__webglNormalBuffer),aA(x.normal),aB.vertexAttribPointer(x.normal,3,aB.FLOAT,!1,0,0));0<=x.tangent&&(aB.bindBuffer(aB.ARRAY_BUFFER,s.__webglTangentBuffer),aA(x.tangent),aB.vertexAttribPointer(x.tangent,4,aB.FLOAT,!1,0,0));0<=x.uv&&(aB.bindBuffer(aB.ARRAY_BUFFER,s.__webglUVBuffer),aA(x.uv),aB.vertexAttribPointer(x.uv,2,aB.FLOAT,!1,0,0));0<=x.uv2&&(aB.bindBuffer(aB.ARRAY_BUFFER,s.__webglUV2Buffer),aA(x.uv2),aB.vertexAttribPointer(x.uv2,2,aB.FLOAT,!1,0,0));t.skinning&&(0<=x.skinIndex&&0<=x.skinWeight)&&(aB.bindBuffer(aB.ARRAY_BUFFER,s.__webglSkinIndicesBuffer),aA(x.skinIndex),aB.vertexAttribPointer(x.skinIndex,4,aB.FLOAT,!1,0,0),aB.bindBuffer(aB.ARRAY_BUFFER,s.__webglSkinWeightsBuffer),aA(x.skinWeight),aB.vertexAttribPointer(x.skinWeight,4,aB.FLOAT,!1,0,0));0<=x.lineDistance&&(aB.bindBuffer(aB.ARRAY_BUFFER,s.__webglLineDistanceBuffer),aA(x.lineDistance),aB.vertexAttribPointer(x.lineDistance,1,aB.FLOAT,!1,0,0))}r instanceof THREE.Mesh?(t.wireframe?(t=t.wireframeLinewidth,t!==bt&&(aB.lineWidth(t),bt=t),y&&aB.bindBuffer(aB.ELEMENT_ARRAY_BUFFER,s.__webglLineBuffer),aB.drawElements(aB.LINES,s.__webglLineCount,aB.UNSIGNED_SHORT,0)):(y&&aB.bindBuffer(aB.ELEMENT_ARRAY_BUFFER,s.__webglFaceBuffer),aB.drawElements(aB.TRIANGLES,s.__webglFaceCount,aB.UNSIGNED_SHORT,0)),aZ.info.render.calls++,aZ.info.render.vertices+=s.__webglFaceCount,aZ.info.render.faces+=s.__webglFaceCount/3):r instanceof THREE.Line?(r=r.type===THREE.LineStrip?aB.LINE_STRIP:aB.LINES,t=t.linewidth,t!==bt&&(aB.lineWidth(t),bt=t),aB.drawArrays(r,0,s.__webglLineCount),aZ.info.render.calls++):r instanceof THREE.ParticleSystem?(aB.drawArrays(aB.POINTS,0,s.__webglParticleCount),aZ.info.render.calls++,aZ.info.render.points+=s.__webglParticleCount):r instanceof THREE.Ribbon&&(aB.drawArrays(aB.TRIANGLE_STRIP,0,s.__webglVertexCount),aZ.info.render.calls++)}};this.render=function(D,C,B,A){if(!1===C instanceof THREE.Camera){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.")}else{var z,y,x,u,s=D.__lights,r=D.fog;af=-1;aS=!0;this.autoUpdateScene&&D.updateMatrixWorld();void 0===C.parent&&C.updateMatrixWorld();C.matrixWorldInverse.getInverse(C.matrixWorld);w.multiply(C.projectionMatrix,C.matrixWorldInverse);by.setFromMatrix(w);this.autoUpdateObjects&&this.initWebGLObjects(D);ar(this.renderPluginsPre,D,C);aZ.info.render.calls=0;aZ.info.render.vertices=0;aZ.info.render.faces=0;aZ.info.render.points=0;this.setRenderTarget(B);(this.autoClear||A)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil);u=D.__webglObjects;A=0;for(z=u.length;A<z;A++){if(y=u[A],x=y.object,y.render=!1,x.visible&&(!(x instanceof THREE.Mesh||x instanceof THREE.ParticleSystem)||!x.frustumCulled||by.contains(x))){bi(x,C);var p=y,l=p.buffer,j=void 0,F=j=void 0,F=p.object.material;if(F instanceof THREE.MeshFaceMaterial){j=l.materialIndex,j=F.materials[j],j.transparent?(p.transparent=j,p.opaque=null):(p.opaque=j,p.transparent=null)}else{if(j=F){j.transparent?(p.transparent=j,p.opaque=null):(p.opaque=j,p.transparent=null)}}y.render=!0;!0===this.sortObjects&&(null!==x.renderDepth?y.z=x.renderDepth:(bb.copy(x.matrixWorld.getPosition()),w.multiplyVector3(bb),y.z=bb.z),y.id=x.id)}}this.sortObjects&&u.sort(av);u=D.__webglObjectsImmediate;A=0;for(z=u.length;A<z;A++){y=u[A],x=y.object,x.visible&&(bi(x,C),x=y.object.material,x.transparent?(y.transparent=x,y.opaque=null):(y.opaque=x,y.transparent=null))}D.overrideMaterial?(A=D.overrideMaterial,this.setBlending(A.blending,A.blendEquation,A.blendSrc,A.blendDst),this.setDepthTest(A.depthTest),this.setDepthWrite(A.depthWrite),a8(A.polygonOffset,A.polygonOffsetFactor,A.polygonOffsetUnits),aq(D.__webglObjects,!1,"",C,s,r,!0,A),az(D.__webglObjectsImmediate,"",C,s,r,!1,A)):(A=null,this.setBlending(THREE.NoBlending),aq(D.__webglObjects,!0,"opaque",C,s,r,!1,A),az(D.__webglObjectsImmediate,"opaque",C,s,r,!1,A),aq(D.__webglObjects,!1,"transparent",C,s,r,!0,A),az(D.__webglObjectsImmediate,"transparent",C,s,r,!0,A));ar(this.renderPluginsPost,D,C);B&&(B.generateMipmaps&&B.minFilter!==THREE.NearestFilter&&B.minFilter!==THREE.LinearFilter)&&(B instanceof THREE.WebGLRenderTargetCube?(aB.bindTexture(aB.TEXTURE_CUBE_MAP,B.__webglTexture),aB.generateMipmap(aB.TEXTURE_CUBE_MAP),aB.bindTexture(aB.TEXTURE_CUBE_MAP,null)):(aB.bindTexture(aB.TEXTURE_2D,B.__webglTexture),aB.generateMipmap(aB.TEXTURE_2D),aB.bindTexture(aB.TEXTURE_2D,null)));this.setDepthTest(!0);this.setDepthWrite(!0)}};this.renderImmediateObject=function(h,g,l,k,j){var i=a9(h,g,l,k,j);aR=-1;aZ.setMaterialFaces(k);j.immediateRenderCallback?j.immediateRenderCallback(i,aB,by):j.render(function(b){aZ.renderBufferImmediate(b,i,k)})};this.initWebGLObjects=function(dU){dU.__webglObjects||(dU.__webglObjects=[],dU.__webglObjectsImmediate=[],dU.__webglSprites=[],dU.__webglFlares=[]);for(;dU.__objectsAdded.length;){var dT=dU.__objectsAdded[0],dO=dU,dM=void 0,dN=void 0,dL=void 0,dI=void 0;if(!dT.__webglInit){if(dT.__webglInit=!0,dT._modelViewMatrix=new THREE.Matrix4,dT._normalMatrix=new THREE.Matrix3,void 0!==dT.geometry&&void 0===dT.geometry.__webglInit&&(dT.geometry.__webglInit=!0,dT.geometry.addEventListener("dispose",be)),dT instanceof THREE.Mesh){if(dN=dT.geometry,dL=dT.material,dN instanceof THREE.Geometry){if(void 0===dN.geometryGroups){var dH=dN,dD=void 0,dB=void 0,eA=void 0,ex=void 0,ew=void 0,eu=void 0,et={},ei=dH.morphTargets.length,eq=dH.morphNormals.length,ep=dL instanceof THREE.MeshFaceMaterial;dH.geometryGroups={};dD=0;for(dB=dH.faces.length;dD<dB;dD++){eA=dH.faces[dD],ex=ep?eA.materialIndex:0,void 0===et[ex]&&(et[ex]={hash:ex,counter:0}),eu=et[ex].hash+"_"+et[ex].counter,void 0===dH.geometryGroups[eu]&&(dH.geometryGroups[eu]={faces3:[],faces4:[],materialIndex:ex,vertices:0,numMorphTargets:ei,numMorphNormals:eq}),ew=eA instanceof THREE.Face3?3:4,65535<dH.geometryGroups[eu].vertices+ew&&(et[ex].counter+=1,eu=et[ex].hash+"_"+et[ex].counter,void 0===dH.geometryGroups[eu]&&(dH.geometryGroups[eu]={faces3:[],faces4:[],materialIndex:ex,vertices:0,numMorphTargets:ei,numMorphNormals:eq})),eA instanceof THREE.Face3?dH.geometryGroups[eu].faces3.push(dD):dH.geometryGroups[eu].faces4.push(dD),dH.geometryGroups[eu].vertices+=ew}dH.geometryGroupsList=[];var el=void 0;for(el in dH.geometryGroups){dH.geometryGroups[el].id=aM++,dH.geometryGroupsList.push(dH.geometryGroups[el])}}for(dM in dN.geometryGroups){if(dI=dN.geometryGroups[dM],!dI.__webglVertexBuffer){var em=dI;em.__webglVertexBuffer=aB.createBuffer();em.__webglNormalBuffer=aB.createBuffer();em.__webglTangentBuffer=aB.createBuffer();em.__webglColorBuffer=aB.createBuffer();em.__webglUVBuffer=aB.createBuffer();em.__webglUV2Buffer=aB.createBuffer();em.__webglSkinIndicesBuffer=aB.createBuffer();em.__webglSkinWeightsBuffer=aB.createBuffer();em.__webglFaceBuffer=aB.createBuffer();em.__webglLineBuffer=aB.createBuffer();var ek=void 0,d5=void 0;if(em.numMorphTargets){em.__webglMorphTargetsBuffers=[];ek=0;for(d5=em.numMorphTargets;ek<d5;ek++){em.__webglMorphTargetsBuffers.push(aB.createBuffer())}}if(em.numMorphNormals){em.__webglMorphNormalsBuffers=[];ek=0;for(d5=em.numMorphNormals;ek<d5;ek++){em.__webglMorphNormalsBuffers.push(aB.createBuffer())}}aZ.info.memory.geometries++;aL(dI,dT);dN.verticesNeedUpdate=!0;dN.morphTargetsNeedUpdate=!0;dN.elementsNeedUpdate=!0;dN.uvsNeedUpdate=!0;dN.normalsNeedUpdate=!0;dN.tangentsNeedUpdate=!0;dN.colorsNeedUpdate=!0}}}else{dN instanceof THREE.BufferGeometry&&aE(dN)}}else{if(dT instanceof THREE.Ribbon){if(dN=dT.geometry,!dN.__webglVertexBuffer){var ej=dN;ej.__webglVertexBuffer=aB.createBuffer();ej.__webglColorBuffer=aB.createBuffer();ej.__webglNormalBuffer=aB.createBuffer();aZ.info.memory.geometries++;var eR=dN,d1=dT,c0=eR.vertices.length;eR.__vertexArray=new Float32Array(3*c0);eR.__colorArray=new Float32Array(3*c0);eR.__normalArray=new Float32Array(3*c0);eR.__webglVertexCount=c0;aN(eR,d1);dN.verticesNeedUpdate=!0;dN.colorsNeedUpdate=!0;dN.normalsNeedUpdate=!0}}else{if(dT instanceof THREE.Line){if(dN=dT.geometry,!dN.__webglVertexBuffer){var ee=dN;ee.__webglVertexBuffer=aB.createBuffer();ee.__webglColorBuffer=aB.createBuffer();ee.__webglLineDistanceBuffer=aB.createBuffer();aZ.info.memory.geometries++;var eh=dN,cJ=dT,d3=eh.vertices.length;eh.__vertexArray=new Float32Array(3*d3);eh.__colorArray=new Float32Array(3*d3);eh.__lineDistanceArray=new Float32Array(1*d3);eh.__webglLineCount=d3;aN(eh,cJ);dN.verticesNeedUpdate=!0;dN.colorsNeedUpdate=!0;dN.lineDistancesNeedUpdate=!0}}else{if(dT instanceof THREE.ParticleSystem&&(dN=dT.geometry,!dN.__webglVertexBuffer)){if(dN instanceof THREE.Geometry){var eS=dN;eS.__webglVertexBuffer=aB.createBuffer();eS.__webglColorBuffer=aB.createBuffer();aZ.info.memory.geometries++;var bW=dN,d=dT,bH=bW.vertices.length;bW.__vertexArray=new Float32Array(3*bH);bW.__colorArray=new Float32Array(3*bH);bW.__sortArray=[];bW.__webglParticleCount=bH;aN(bW,d);dN.verticesNeedUpdate=!0;dN.colorsNeedUpdate=!0}else{dN instanceof THREE.BufferGeometry&&aE(dN)}}}}}}if(!dT.__webglActive){if(dT instanceof THREE.Mesh){if(dN=dT.geometry,dN instanceof THREE.BufferGeometry){au(dO.__webglObjects,dN,dT)}else{for(dM in dN.geometryGroups){dI=dN.geometryGroups[dM],au(dO.__webglObjects,dI,dT)}}}else{dT instanceof THREE.Ribbon||dT instanceof THREE.Line||dT instanceof THREE.ParticleSystem?(dN=dT.geometry,au(dO.__webglObjects,dN,dT)):dT instanceof THREE.ImmediateRenderObject||dT.immediateRenderCallback?dO.__webglObjectsImmediate.push({object:dT,opaque:null,transparent:null}):dT instanceof THREE.Sprite?dO.__webglSprites.push(dT):dT instanceof THREE.LensFlare&&dO.__webglFlares.push(dT)}dT.__webglActive=!0}dU.__objectsAdded.splice(0,1)}for(;dU.__objectsRemoved.length;){var dS=dU.__objectsRemoved[0],dC=dU;dS instanceof THREE.Mesh||dS instanceof THREE.ParticleSystem||dS instanceof THREE.Ribbon||dS instanceof THREE.Line?an(dC.__webglObjects,dS):dS instanceof THREE.Sprite?ap(dC.__webglSprites,dS):dS instanceof THREE.LensFlare?ap(dC.__webglFlares,dS):(dS instanceof THREE.ImmediateRenderObject||dS.immediateRenderCallback)&&an(dC.__webglObjectsImmediate,dS);dS.__webglActive=!1;dU.__objectsRemoved.splice(0,1)}for(var cP=0,e7=dU.__webglObjects.length;cP<e7;cP++){var eN=dU.__webglObjects[cP].object,d4=eN.geometry,m=void 0,b9=void 0,e0=void 0;if(eN instanceof THREE.Mesh){if(d4 instanceof THREE.BufferGeometry){(d4.verticesNeedUpdate||d4.elementsNeedUpdate||d4.uvsNeedUpdate||d4.normalsNeedUpdate||d4.colorsNeedUpdate||d4.tangentsNeedUpdate)&&aD(d4,aB.DYNAMIC_DRAW,!d4.dynamic),d4.verticesNeedUpdate=!1,d4.elementsNeedUpdate=!1,d4.uvsNeedUpdate=!1,d4.normalsNeedUpdate=!1,d4.colorsNeedUpdate=!1,d4.tangentsNeedUpdate=!1}else{for(var bT=0,cy=d4.geometryGroupsList.length;bT<cy;bT++){if(m=d4.geometryGroupsList[bT],e0=aK(eN,m),d4.buffersNeedUpdate&&aL(m,eN),b9=e0.attributes&&ao(e0),d4.verticesNeedUpdate||d4.morphTargetsNeedUpdate||d4.elementsNeedUpdate||d4.uvsNeedUpdate||d4.normalsNeedUpdate||d4.colorsNeedUpdate||d4.tangentsNeedUpdate||b9){var cB=m,e5=eN,cm=aB.DYNAMIC_DRAW,bL=!d4.dynamic,eX=e0;if(cB.__inittedArrays){var ef=aH(eX),eF=eX.vertexColors?eX.vertexColors:!1,d0=aG(eX),ct=ef===THREE.SmoothShading,ev=void 0,d2=void 0,dK=void 0,eg=void 0,eQ=void 0,N=void 0,eL=void 0,cE=void 0,df=void 0,dA=void 0,dm=void 0,d9=void 0,d8=void 0,d6=void 0,c7=void 0,cS=void 0,cZ=void 0,cI=void 0,cA=void 0,cM=void 0,cx=void 0,ci=void 0,e6=void 0,bZ=void 0,bK=void 0,g=void 0,eM=void 0,e3=void 0,eJ=void 0,ed=void 0,cp=void 0,dJ=void 0,dq=void 0,c9=void 0,b7=void 0,cX=void 0,dt=void 0,fh=void 0,bM=void 0,i=void 0,er=void 0,bU=void 0,dr=void 0,da=void 0,eY=void 0,de=void 0,ck=0,h=0,cY=0,cH=0,bS=0,c=0,B=0,c6=0,b1=0,dg=0,eG=0,dE=0,cG=void 0,dR=cB.__vertexArray,dj=cB.__uvArray,c3=cB.__uv2Array,x=cB.__normalArray,dz=cB.__tangentArray,du=cB.__colorArray,dk=cB.__skinIndexArray,c4=cB.__skinWeightArray,dl=cB.__morphTargetsArrays,c5=cB.__morphNormalsArrays,cW=cB.__webglCustomAttributesList,dF=void 0,cR=cB.__faceArray,cV=cB.__lineArray,cl=e5.geometry,dV=cl.elementsNeedUpdate,cD=cl.uvsNeedUpdate,dv=cl.normalsNeedUpdate,dh=cl.tangentsNeedUpdate,en=cl.colorsNeedUpdate,dP=cl.morphTargetsNeedUpdate,cO=cl.vertices,b3=cB.faces3,bO=cB.faces4,eZ=cl.faces,cF=cl.faceVertexUvs[0],cq=cl.faceVertexUvs[1],cz=cl.skinIndices,eE=cl.skinWeights,dZ=cl.morphTargets,c1=cl.morphNormals;if(cl.verticesNeedUpdate){ev=0;for(d2=b3.length;ev<d2;ev++){eg=eZ[b3[ev]],d9=cO[eg.a],d8=cO[eg.b],d6=cO[eg.c],dR[h]=d9.x,dR[h+1]=d9.y,dR[h+2]=d9.z,dR[h+3]=d8.x,dR[h+4]=d8.y,dR[h+5]=d8.z,dR[h+6]=d6.x,dR[h+7]=d6.y,dR[h+8]=d6.z,h+=9}ev=0;for(d2=bO.length;ev<d2;ev++){eg=eZ[bO[ev]],d9=cO[eg.a],d8=cO[eg.b],d6=cO[eg.c],c7=cO[eg.d],dR[h]=d9.x,dR[h+1]=d9.y,dR[h+2]=d9.z,dR[h+3]=d8.x,dR[h+4]=d8.y,dR[h+5]=d8.z,dR[h+6]=d6.x,dR[h+7]=d6.y,dR[h+8]=d6.z,dR[h+9]=c7.x,dR[h+10]=c7.y,dR[h+11]=c7.z,h+=12}aB.bindBuffer(aB.ARRAY_BUFFER,cB.__webglVertexBuffer);aB.bufferData(aB.ARRAY_BUFFER,dR,cm)}if(dP){er=0;for(bU=dZ.length;er<bU;er++){ev=eG=0;for(d2=b3.length;ev<d2;ev++){eY=b3[ev],eg=eZ[eY],d9=dZ[er].vertices[eg.a],d8=dZ[er].vertices[eg.b],d6=dZ[er].vertices[eg.c],dr=dl[er],dr[eG]=d9.x,dr[eG+1]=d9.y,dr[eG+2]=d9.z,dr[eG+3]=d8.x,dr[eG+4]=d8.y,dr[eG+5]=d8.z,dr[eG+6]=d6.x,dr[eG+7]=d6.y,dr[eG+8]=d6.z,eX.morphNormals&&(ct?(de=c1[er].vertexNormals[eY],cM=de.a,cx=de.b,ci=de.c):ci=cx=cM=c1[er].faceNormals[eY],da=c5[er],da[eG]=cM.x,da[eG+1]=cM.y,da[eG+2]=cM.z,da[eG+3]=cx.x,da[eG+4]=cx.y,da[eG+5]=cx.z,da[eG+6]=ci.x,da[eG+7]=ci.y,da[eG+8]=ci.z),eG+=9}ev=0;for(d2=bO.length;ev<d2;ev++){eY=bO[ev],eg=eZ[eY],d9=dZ[er].vertices[eg.a],d8=dZ[er].vertices[eg.b],d6=dZ[er].vertices[eg.c],c7=dZ[er].vertices[eg.d],dr=dl[er],dr[eG]=d9.x,dr[eG+1]=d9.y,dr[eG+2]=d9.z,dr[eG+3]=d8.x,dr[eG+4]=d8.y,dr[eG+5]=d8.z,dr[eG+6]=d6.x,dr[eG+7]=d6.y,dr[eG+8]=d6.z,dr[eG+9]=c7.x,dr[eG+10]=c7.y,dr[eG+11]=c7.z,eX.morphNormals&&(ct?(de=c1[er].vertexNormals[eY],cM=de.a,cx=de.b,ci=de.c,e6=de.d):e6=ci=cx=cM=c1[er].faceNormals[eY],da=c5[er],da[eG]=cM.x,da[eG+1]=cM.y,da[eG+2]=cM.z,da[eG+3]=cx.x,da[eG+4]=cx.y,da[eG+5]=cx.z,da[eG+6]=ci.x,da[eG+7]=ci.y,da[eG+8]=ci.z,da[eG+9]=e6.x,da[eG+10]=e6.y,da[eG+11]=e6.z),eG+=12}aB.bindBuffer(aB.ARRAY_BUFFER,cB.__webglMorphTargetsBuffers[er]);aB.bufferData(aB.ARRAY_BUFFER,dl[er],cm);eX.morphNormals&&(aB.bindBuffer(aB.ARRAY_BUFFER,cB.__webglMorphNormalsBuffers[er]),aB.bufferData(aB.ARRAY_BUFFER,c5[er],cm))}}if(eE.length){ev=0;for(d2=b3.length;ev<d2;ev++){eg=eZ[b3[ev]],e3=eE[eg.a],eJ=eE[eg.b],ed=eE[eg.c],c4[dg]=e3.x,c4[dg+1]=e3.y,c4[dg+2]=e3.z,c4[dg+3]=e3.w,c4[dg+4]=eJ.x,c4[dg+5]=eJ.y,c4[dg+6]=eJ.z,c4[dg+7]=eJ.w,c4[dg+8]=ed.x,c4[dg+9]=ed.y,c4[dg+10]=ed.z,c4[dg+11]=ed.w,dJ=cz[eg.a],dq=cz[eg.b],c9=cz[eg.c],dk[dg]=dJ.x,dk[dg+1]=dJ.y,dk[dg+2]=dJ.z,dk[dg+3]=dJ.w,dk[dg+4]=dq.x,dk[dg+5]=dq.y,dk[dg+6]=dq.z,dk[dg+7]=dq.w,dk[dg+8]=c9.x,dk[dg+9]=c9.y,dk[dg+10]=c9.z,dk[dg+11]=c9.w,dg+=12}ev=0;for(d2=bO.length;ev<d2;ev++){eg=eZ[bO[ev]],e3=eE[eg.a],eJ=eE[eg.b],ed=eE[eg.c],cp=eE[eg.d],c4[dg]=e3.x,c4[dg+1]=e3.y,c4[dg+2]=e3.z,c4[dg+3]=e3.w,c4[dg+4]=eJ.x,c4[dg+5]=eJ.y,c4[dg+6]=eJ.z,c4[dg+7]=eJ.w,c4[dg+8]=ed.x,c4[dg+9]=ed.y,c4[dg+10]=ed.z,c4[dg+11]=ed.w,c4[dg+12]=cp.x,c4[dg+13]=cp.y,c4[dg+14]=cp.z,c4[dg+15]=cp.w,dJ=cz[eg.a],dq=cz[eg.b],c9=cz[eg.c],b7=cz[eg.d],dk[dg]=dJ.x,dk[dg+1]=dJ.y,dk[dg+2]=dJ.z,dk[dg+3]=dJ.w,dk[dg+4]=dq.x,dk[dg+5]=dq.y,dk[dg+6]=dq.z,dk[dg+7]=dq.w,dk[dg+8]=c9.x,dk[dg+9]=c9.y,dk[dg+10]=c9.z,dk[dg+11]=c9.w,dk[dg+12]=b7.x,dk[dg+13]=b7.y,dk[dg+14]=b7.z,dk[dg+15]=b7.w,dg+=16}0<dg&&(aB.bindBuffer(aB.ARRAY_BUFFER,cB.__webglSkinIndicesBuffer),aB.bufferData(aB.ARRAY_BUFFER,dk,cm),aB.bindBuffer(aB.ARRAY_BUFFER,cB.__webglSkinWeightsBuffer),aB.bufferData(aB.ARRAY_BUFFER,c4,cm))}if(en&&eF){ev=0;for(d2=b3.length;ev<d2;ev++){eg=eZ[b3[ev]],eL=eg.vertexColors,cE=eg.color,3===eL.length&&eF===THREE.VertexColors?(bZ=eL[0],bK=eL[1],g=eL[2]):g=bK=bZ=cE,du[b1]=bZ.r,du[b1+1]=bZ.g,du[b1+2]=bZ.b,du[b1+3]=bK.r,du[b1+4]=bK.g,du[b1+5]=bK.b,du[b1+6]=g.r,du[b1+7]=g.g,du[b1+8]=g.b,b1+=9}ev=0;for(d2=bO.length;ev<d2;ev++){eg=eZ[bO[ev]],eL=eg.vertexColors,cE=eg.color,4===eL.length&&eF===THREE.VertexColors?(bZ=eL[0],bK=eL[1],g=eL[2],eM=eL[3]):eM=g=bK=bZ=cE,du[b1]=bZ.r,du[b1+1]=bZ.g,du[b1+2]=bZ.b,du[b1+3]=bK.r,du[b1+4]=bK.g,du[b1+5]=bK.b,du[b1+6]=g.r,du[b1+7]=g.g,du[b1+8]=g.b,du[b1+9]=eM.r,du[b1+10]=eM.g,du[b1+11]=eM.b,b1+=12}0<b1&&(aB.bindBuffer(aB.ARRAY_BUFFER,cB.__webglColorBuffer),aB.bufferData(aB.ARRAY_BUFFER,du,cm))}if(dh&&cl.hasTangents){ev=0;for(d2=b3.length;ev<d2;ev++){eg=eZ[b3[ev]],df=eg.vertexTangents,cS=df[0],cZ=df[1],cI=df[2],dz[B]=cS.x,dz[B+1]=cS.y,dz[B+2]=cS.z,dz[B+3]=cS.w,dz[B+4]=cZ.x,dz[B+5]=cZ.y,dz[B+6]=cZ.z,dz[B+7]=cZ.w,dz[B+8]=cI.x,dz[B+9]=cI.y,dz[B+10]=cI.z,dz[B+11]=cI.w,B+=12}ev=0;for(d2=bO.length;ev<d2;ev++){eg=eZ[bO[ev]],df=eg.vertexTangents,cS=df[0],cZ=df[1],cI=df[2],cA=df[3],dz[B]=cS.x,dz[B+1]=cS.y,dz[B+2]=cS.z,dz[B+3]=cS.w,dz[B+4]=cZ.x,dz[B+5]=cZ.y,dz[B+6]=cZ.z,dz[B+7]=cZ.w,dz[B+8]=cI.x,dz[B+9]=cI.y,dz[B+10]=cI.z,dz[B+11]=cI.w,dz[B+12]=cA.x,dz[B+13]=cA.y,dz[B+14]=cA.z,dz[B+15]=cA.w,B+=16}aB.bindBuffer(aB.ARRAY_BUFFER,cB.__webglTangentBuffer);aB.bufferData(aB.ARRAY_BUFFER,dz,cm)}if(dv&&ef){ev=0;for(d2=b3.length;ev<d2;ev++){if(eg=eZ[b3[ev]],eQ=eg.vertexNormals,N=eg.normal,3===eQ.length&&ct){for(cX=0;3>cX;cX++){fh=eQ[cX],x[c]=fh.x,x[c+1]=fh.y,x[c+2]=fh.z,c+=3}}else{for(cX=0;3>cX;cX++){x[c]=N.x,x[c+1]=N.y,x[c+2]=N.z,c+=3}}}ev=0;for(d2=bO.length;ev<d2;ev++){if(eg=eZ[bO[ev]],eQ=eg.vertexNormals,N=eg.normal,4===eQ.length&&ct){for(cX=0;4>cX;cX++){fh=eQ[cX],x[c]=fh.x,x[c+1]=fh.y,x[c+2]=fh.z,c+=3}}else{for(cX=0;4>cX;cX++){x[c]=N.x,x[c+1]=N.y,x[c+2]=N.z,c+=3}}}aB.bindBuffer(aB.ARRAY_BUFFER,cB.__webglNormalBuffer);aB.bufferData(aB.ARRAY_BUFFER,x,cm)}if(cD&&cF&&d0){ev=0;for(d2=b3.length;ev<d2;ev++){if(dK=b3[ev],dA=cF[dK],void 0!==dA){for(cX=0;3>cX;cX++){bM=dA[cX],dj[cY]=bM.x,dj[cY+1]=bM.y,cY+=2}}}ev=0;for(d2=bO.length;ev<d2;ev++){if(dK=bO[ev],dA=cF[dK],void 0!==dA){for(cX=0;4>cX;cX++){bM=dA[cX],dj[cY]=bM.x,dj[cY+1]=bM.y,cY+=2}}}0<cY&&(aB.bindBuffer(aB.ARRAY_BUFFER,cB.__webglUVBuffer),aB.bufferData(aB.ARRAY_BUFFER,dj,cm))}if(cD&&cq&&d0){ev=0;for(d2=b3.length;ev<d2;ev++){if(dK=b3[ev],dm=cq[dK],void 0!==dm){for(cX=0;3>cX;cX++){i=dm[cX],c3[cH]=i.x,c3[cH+1]=i.y,cH+=2}}}ev=0;for(d2=bO.length;ev<d2;ev++){if(dK=bO[ev],dm=cq[dK],void 0!==dm){for(cX=0;4>cX;cX++){i=dm[cX],c3[cH]=i.x,c3[cH+1]=i.y,cH+=2}}}0<cH&&(aB.bindBuffer(aB.ARRAY_BUFFER,cB.__webglUV2Buffer),aB.bufferData(aB.ARRAY_BUFFER,c3,cm))}if(dV){ev=0;for(d2=b3.length;ev<d2;ev++){cR[bS]=ck,cR[bS+1]=ck+1,cR[bS+2]=ck+2,bS+=3,cV[c6]=ck,cV[c6+1]=ck+1,cV[c6+2]=ck,cV[c6+3]=ck+2,cV[c6+4]=ck+1,cV[c6+5]=ck+2,c6+=6,ck+=3}ev=0;for(d2=bO.length;ev<d2;ev++){cR[bS]=ck,cR[bS+1]=ck+1,cR[bS+2]=ck+3,cR[bS+3]=ck+1,cR[bS+4]=ck+2,cR[bS+5]=ck+3,bS+=6,cV[c6]=ck,cV[c6+1]=ck+1,cV[c6+2]=ck,cV[c6+3]=ck+3,cV[c6+4]=ck+1,cV[c6+5]=ck+2,cV[c6+6]=ck+2,cV[c6+7]=ck+3,c6+=8,ck+=4}aB.bindBuffer(aB.ELEMENT_ARRAY_BUFFER,cB.__webglFaceBuffer);aB.bufferData(aB.ELEMENT_ARRAY_BUFFER,cR,cm);aB.bindBuffer(aB.ELEMENT_ARRAY_BUFFER,cB.__webglLineBuffer);aB.bufferData(aB.ELEMENT_ARRAY_BUFFER,cV,cm)}if(cW){cX=0;for(dt=cW.length;cX<dt;cX++){if(dF=cW[cX],dF.__original.needsUpdate){dE=0;if(1===dF.size){if(void 0===dF.boundTo||"vertices"===dF.boundTo){ev=0;for(d2=b3.length;ev<d2;ev++){eg=eZ[b3[ev]],dF.array[dE]=dF.value[eg.a],dF.array[dE+1]=dF.value[eg.b],dF.array[dE+2]=dF.value[eg.c],dE+=3}ev=0;for(d2=bO.length;ev<d2;ev++){eg=eZ[bO[ev]],dF.array[dE]=dF.value[eg.a],dF.array[dE+1]=dF.value[eg.b],dF.array[dE+2]=dF.value[eg.c],dF.array[dE+3]=dF.value[eg.d],dE+=4}}else{if("faces"===dF.boundTo){ev=0;for(d2=b3.length;ev<d2;ev++){cG=dF.value[b3[ev]],dF.array[dE]=cG,dF.array[dE+1]=cG,dF.array[dE+2]=cG,dE+=3}ev=0;for(d2=bO.length;ev<d2;ev++){cG=dF.value[bO[ev]],dF.array[dE]=cG,dF.array[dE+1]=cG,dF.array[dE+2]=cG,dF.array[dE+3]=cG,dE+=4}}}}else{if(2===dF.size){if(void 0===dF.boundTo||"vertices"===dF.boundTo){ev=0;for(d2=b3.length;ev<d2;ev++){eg=eZ[b3[ev]],d9=dF.value[eg.a],d8=dF.value[eg.b],d6=dF.value[eg.c],dF.array[dE]=d9.x,dF.array[dE+1]=d9.y,dF.array[dE+2]=d8.x,dF.array[dE+3]=d8.y,dF.array[dE+4]=d6.x,dF.array[dE+5]=d6.y,dE+=6}ev=0;for(d2=bO.length;ev<d2;ev++){eg=eZ[bO[ev]],d9=dF.value[eg.a],d8=dF.value[eg.b],d6=dF.value[eg.c],c7=dF.value[eg.d],dF.array[dE]=d9.x,dF.array[dE+1]=d9.y,dF.array[dE+2]=d8.x,dF.array[dE+3]=d8.y,dF.array[dE+4]=d6.x,dF.array[dE+5]=d6.y,dF.array[dE+6]=c7.x,dF.array[dE+7]=c7.y,dE+=8}}else{if("faces"===dF.boundTo){ev=0;for(d2=b3.length;ev<d2;ev++){d6=d8=d9=cG=dF.value[b3[ev]],dF.array[dE]=d9.x,dF.array[dE+1]=d9.y,dF.array[dE+2]=d8.x,dF.array[dE+3]=d8.y,dF.array[dE+4]=d6.x,dF.array[dE+5]=d6.y,dE+=6}ev=0;for(d2=bO.length;ev<d2;ev++){c7=d6=d8=d9=cG=dF.value[bO[ev]],dF.array[dE]=d9.x,dF.array[dE+1]=d9.y,dF.array[dE+2]=d8.x,dF.array[dE+3]=d8.y,dF.array[dE+4]=d6.x,dF.array[dE+5]=d6.y,dF.array[dE+6]=c7.x,dF.array[dE+7]=c7.y,dE+=8}}}}else{if(3===dF.size){var es;es="c"===dF.type?["r","g","b"]:["x","y","z"];if(void 0===dF.boundTo||"vertices"===dF.boundTo){ev=0;for(d2=b3.length;ev<d2;ev++){eg=eZ[b3[ev]],d9=dF.value[eg.a],d8=dF.value[eg.b],d6=dF.value[eg.c],dF.array[dE]=d9[es[0]],dF.array[dE+1]=d9[es[1]],dF.array[dE+2]=d9[es[2]],dF.array[dE+3]=d8[es[0]],dF.array[dE+4]=d8[es[1]],dF.array[dE+5]=d8[es[2]],dF.array[dE+6]=d6[es[0]],dF.array[dE+7]=d6[es[1]],dF.array[dE+8]=d6[es[2]],dE+=9}ev=0;for(d2=bO.length;ev<d2;ev++){eg=eZ[bO[ev]],d9=dF.value[eg.a],d8=dF.value[eg.b],d6=dF.value[eg.c],c7=dF.value[eg.d],dF.array[dE]=d9[es[0]],dF.array[dE+1]=d9[es[1]],dF.array[dE+2]=d9[es[2]],dF.array[dE+3]=d8[es[0]],dF.array[dE+4]=d8[es[1]],dF.array[dE+5]=d8[es[2]],dF.array[dE+6]=d6[es[0]],dF.array[dE+7]=d6[es[1]],dF.array[dE+8]=d6[es[2]],dF.array[dE+9]=c7[es[0]],dF.array[dE+10]=c7[es[1]],dF.array[dE+11]=c7[es[2]],dE+=12}}else{if("faces"===dF.boundTo){ev=0;for(d2=b3.length;ev<d2;ev++){d6=d8=d9=cG=dF.value[b3[ev]],dF.array[dE]=d9[es[0]],dF.array[dE+1]=d9[es[1]],dF.array[dE+2]=d9[es[2]],dF.array[dE+3]=d8[es[0]],dF.array[dE+4]=d8[es[1]],dF.array[dE+5]=d8[es[2]],dF.array[dE+6]=d6[es[0]],dF.array[dE+7]=d6[es[1]],dF.array[dE+8]=d6[es[2]],dE+=9}ev=0;for(d2=bO.length;ev<d2;ev++){c7=d6=d8=d9=cG=dF.value[bO[ev]],dF.array[dE]=d9[es[0]],dF.array[dE+1]=d9[es[1]],dF.array[dE+2]=d9[es[2]],dF.array[dE+3]=d8[es[0]],dF.array[dE+4]=d8[es[1]],dF.array[dE+5]=d8[es[2]],dF.array[dE+6]=d6[es[0]],dF.array[dE+7]=d6[es[1]],dF.array[dE+8]=d6[es[2]],dF.array[dE+9]=c7[es[0]],dF.array[dE+10]=c7[es[1]],dF.array[dE+11]=c7[es[2]],dE+=12}}else{if("faceVertices"===dF.boundTo){ev=0;for(d2=b3.length;ev<d2;ev++){cG=dF.value[b3[ev]],d9=cG[0],d8=cG[1],d6=cG[2],dF.array[dE]=d9[es[0]],dF.array[dE+1]=d9[es[1]],dF.array[dE+2]=d9[es[2]],dF.array[dE+3]=d8[es[0]],dF.array[dE+4]=d8[es[1]],dF.array[dE+5]=d8[es[2]],dF.array[dE+6]=d6[es[0]],dF.array[dE+7]=d6[es[1]],dF.array[dE+8]=d6[es[2]],dE+=9}ev=0;for(d2=bO.length;ev<d2;ev++){cG=dF.value[bO[ev]],d9=cG[0],d8=cG[1],d6=cG[2],c7=cG[3],dF.array[dE]=d9[es[0]],dF.array[dE+1]=d9[es[1]],dF.array[dE+2]=d9[es[2]],dF.array[dE+3]=d8[es[0]],dF.array[dE+4]=d8[es[1]],dF.array[dE+5]=d8[es[2]],dF.array[dE+6]=d6[es[0]],dF.array[dE+7]=d6[es[1]],dF.array[dE+8]=d6[es[2]],dF.array[dE+9]=c7[es[0]],dF.array[dE+10]=c7[es[1]],dF.array[dE+11]=c7[es[2]],dE+=12}}}}}else{if(4===dF.size){if(void 0===dF.boundTo||"vertices"===dF.boundTo){ev=0;for(d2=b3.length;ev<d2;ev++){eg=eZ[b3[ev]],d9=dF.value[eg.a],d8=dF.value[eg.b],d6=dF.value[eg.c],dF.array[dE]=d9.x,dF.array[dE+1]=d9.y,dF.array[dE+2]=d9.z,dF.array[dE+3]=d9.w,dF.array[dE+4]=d8.x,dF.array[dE+5]=d8.y,dF.array[dE+6]=d8.z,dF.array[dE+7]=d8.w,dF.array[dE+8]=d6.x,dF.array[dE+9]=d6.y,dF.array[dE+10]=d6.z,dF.array[dE+11]=d6.w,dE+=12}ev=0;for(d2=bO.length;ev<d2;ev++){eg=eZ[bO[ev]],d9=dF.value[eg.a],d8=dF.value[eg.b],d6=dF.value[eg.c],c7=dF.value[eg.d],dF.array[dE]=d9.x,dF.array[dE+1]=d9.y,dF.array[dE+2]=d9.z,dF.array[dE+3]=d9.w,dF.array[dE+4]=d8.x,dF.array[dE+5]=d8.y,dF.array[dE+6]=d8.z,dF.array[dE+7]=d8.w,dF.array[dE+8]=d6.x,dF.array[dE+9]=d6.y,dF.array[dE+10]=d6.z,dF.array[dE+11]=d6.w,dF.array[dE+12]=c7.x,dF.array[dE+13]=c7.y,dF.array[dE+14]=c7.z,dF.array[dE+15]=c7.w,dE+=16}}else{if("faces"===dF.boundTo){ev=0;for(d2=b3.length;ev<d2;ev++){d6=d8=d9=cG=dF.value[b3[ev]],dF.array[dE]=d9.x,dF.array[dE+1]=d9.y,dF.array[dE+2]=d9.z,dF.array[dE+3]=d9.w,dF.array[dE+4]=d8.x,dF.array[dE+5]=d8.y,dF.array[dE+6]=d8.z,dF.array[dE+7]=d8.w,dF.array[dE+8]=d6.x,dF.array[dE+9]=d6.y,dF.array[dE+10]=d6.z,dF.array[dE+11]=d6.w,dE+=12}ev=0;for(d2=bO.length;ev<d2;ev++){c7=d6=d8=d9=cG=dF.value[bO[ev]],dF.array[dE]=d9.x,dF.array[dE+1]=d9.y,dF.array[dE+2]=d9.z,dF.array[dE+3]=d9.w,dF.array[dE+4]=d8.x,dF.array[dE+5]=d8.y,dF.array[dE+6]=d8.z,dF.array[dE+7]=d8.w,dF.array[dE+8]=d6.x,dF.array[dE+9]=d6.y,dF.array[dE+10]=d6.z,dF.array[dE+11]=d6.w,dF.array[dE+12]=c7.x,dF.array[dE+13]=c7.y,dF.array[dE+14]=c7.z,dF.array[dE+15]=c7.w,dE+=16}}else{if("faceVertices"===dF.boundTo){ev=0;for(d2=b3.length;ev<d2;ev++){cG=dF.value[b3[ev]],d9=cG[0],d8=cG[1],d6=cG[2],dF.array[dE]=d9.x,dF.array[dE+1]=d9.y,dF.array[dE+2]=d9.z,dF.array[dE+3]=d9.w,dF.array[dE+4]=d8.x,dF.array[dE+5]=d8.y,dF.array[dE+6]=d8.z,dF.array[dE+7]=d8.w,dF.array[dE+8]=d6.x,dF.array[dE+9]=d6.y,dF.array[dE+10]=d6.z,dF.array[dE+11]=d6.w,dE+=12}ev=0;for(d2=bO.length;ev<d2;ev++){cG=dF.value[bO[ev]],d9=cG[0],d8=cG[1],d6=cG[2],c7=cG[3],dF.array[dE]=d9.x,dF.array[dE+1]=d9.y,dF.array[dE+2]=d9.z,dF.array[dE+3]=d9.w,dF.array[dE+4]=d8.x,dF.array[dE+5]=d8.y,dF.array[dE+6]=d8.z,dF.array[dE+7]=d8.w,dF.array[dE+8]=d6.x,dF.array[dE+9]=d6.y,dF.array[dE+10]=d6.z,dF.array[dE+11]=d6.w,dF.array[dE+12]=c7.x,dF.array[dE+13]=c7.y,dF.array[dE+14]=c7.z,dF.array[dE+15]=c7.w,dE+=16}}}}}}}}aB.bindBuffer(aB.ARRAY_BUFFER,dF.buffer);aB.bufferData(aB.ARRAY_BUFFER,dF.array,cm)}}}bL&&(delete cB.__inittedArrays,delete cB.__colorArray,delete cB.__normalArray,delete cB.__tangentArray,delete cB.__uvArray,delete cB.__uv2Array,delete cB.__faceArray,delete cB.__vertexArray,delete cB.__lineArray,delete cB.__skinIndexArray,delete cB.__skinWeightArray)}}}d4.verticesNeedUpdate=!1;d4.morphTargetsNeedUpdate=!1;d4.elementsNeedUpdate=!1;d4.uvsNeedUpdate=!1;d4.normalsNeedUpdate=!1;d4.colorsNeedUpdate=!1;d4.tangentsNeedUpdate=!1;d4.buffersNeedUpdate=!1;e0.attributes&&bg(e0)}}else{if(eN instanceof THREE.Ribbon){e0=aK(eN,d4);b9=e0.attributes&&ao(e0);if(d4.verticesNeedUpdate||d4.colorsNeedUpdate||d4.normalsNeedUpdate||b9){var ff=d4,cK=aB.DYNAMIC_DRAW,co=void 0,b5=void 0,bQ=void 0,cv=void 0,cs=void 0,cg=void 0,bX=void 0,bI=void 0,eC=void 0,ce=void 0,e4=void 0,eD=void 0,b2=void 0,dX=ff.vertices,dx=ff.colors,di=ff.normals,ds=dX.length,eI=dx.length,cT=di.length,e=ff.__vertexArray,e1=ff.__colorArray,eH=ff.__normalArray,cC=ff.colorsNeedUpdate,cn=ff.normalsNeedUpdate,b6=ff.__webglCustomAttributesList;if(ff.verticesNeedUpdate){for(co=0;co<ds;co++){cv=dX[co],cs=3*co,e[cs]=cv.x,e[cs+1]=cv.y,e[cs+2]=cv.z}aB.bindBuffer(aB.ARRAY_BUFFER,ff.__webglVertexBuffer);aB.bufferData(aB.ARRAY_BUFFER,e,cK)}if(cC){for(b5=0;b5<eI;b5++){cg=dx[b5],cs=3*b5,e1[cs]=cg.r,e1[cs+1]=cg.g,e1[cs+2]=cg.b}aB.bindBuffer(aB.ARRAY_BUFFER,ff.__webglColorBuffer);aB.bufferData(aB.ARRAY_BUFFER,e1,cK)}if(cn){for(bQ=0;bQ<cT;bQ++){bX=di[bQ],cs=3*bQ,eH[cs]=bX.x,eH[cs+1]=bX.y,eH[cs+2]=bX.z}aB.bindBuffer(aB.ARRAY_BUFFER,ff.__webglNormalBuffer);aB.bufferData(aB.ARRAY_BUFFER,eH,cK)}if(b6){bI=0;for(eC=b6.length;bI<eC;bI++){if(eD=b6[bI],eD.needsUpdate&&(void 0===eD.boundTo||"vertices"===eD.boundTo)){cs=0;e4=eD.value.length;if(1===eD.size){for(ce=0;ce<e4;ce++){eD.array[ce]=eD.value[ce]}}else{if(2===eD.size){for(ce=0;ce<e4;ce++){b2=eD.value[ce],eD.array[cs]=b2.x,eD.array[cs+1]=b2.y,cs+=2}}else{if(3===eD.size){if("c"===eD.type){for(ce=0;ce<e4;ce++){b2=eD.value[ce],eD.array[cs]=b2.r,eD.array[cs+1]=b2.g,eD.array[cs+2]=b2.b,cs+=3}}else{for(ce=0;ce<e4;ce++){b2=eD.value[ce],eD.array[cs]=b2.x,eD.array[cs+1]=b2.y,eD.array[cs+2]=b2.z,cs+=3}}}else{if(4===eD.size){for(ce=0;ce<e4;ce++){b2=eD.value[ce],eD.array[cs]=b2.x,eD.array[cs+1]=b2.y,eD.array[cs+2]=b2.z,eD.array[cs+3]=b2.w,cs+=4}}}}}aB.bindBuffer(aB.ARRAY_BUFFER,eD.buffer);aB.bufferData(aB.ARRAY_BUFFER,eD.array,cK)}}}}d4.verticesNeedUpdate=!1;d4.colorsNeedUpdate=!1;d4.normalsNeedUpdate=!1;e0.attributes&&bg(e0)}else{if(eN instanceof THREE.Line){e0=aK(eN,d4);b9=e0.attributes&&ao(e0);if(d4.verticesNeedUpdate||d4.colorsNeedUpdate||d4.lineDistancesNeedUpdate||b9){var eW=d4,d7=aB.DYNAMIC_DRAW,t=void 0,e9=void 0,eU=void 0,dG=void 0,cN=void 0,dp=void 0,c2=eW.vertices,cL=eW.colors,cw=eW.lineDistances,b4=c2.length,bP=cL.length,q=cw.length,c8=eW.__vertexArray,cQ=eW.__colorArray,ch=eW.__lineDistanceArray,e8=eW.colorsNeedUpdate,eT=eW.lineDistancesNeedUpdate,bR=eW.__webglCustomAttributesList,ey=void 0,bY=void 0,bV=void 0,eK=void 0,bN=void 0,dY=void 0;if(eW.verticesNeedUpdate){for(t=0;t<b4;t++){dG=c2[t],cN=3*t,c8[cN]=dG.x,c8[cN+1]=dG.y,c8[cN+2]=dG.z}aB.bindBuffer(aB.ARRAY_BUFFER,eW.__webglVertexBuffer);aB.bufferData(aB.ARRAY_BUFFER,c8,d7)}if(e8){for(e9=0;e9<bP;e9++){dp=cL[e9],cN=3*e9,cQ[cN]=dp.r,cQ[cN+1]=dp.g,cQ[cN+2]=dp.b}aB.bindBuffer(aB.ARRAY_BUFFER,eW.__webglColorBuffer);aB.bufferData(aB.ARRAY_BUFFER,cQ,d7)}if(eT){for(eU=0;eU<q;eU++){ch[eU]=cw[eU]}aB.bindBuffer(aB.ARRAY_BUFFER,eW.__webglLineDistanceBuffer);aB.bufferData(aB.ARRAY_BUFFER,ch,d7)}if(bR){ey=0;for(bY=bR.length;ey<bY;ey++){if(dY=bR[ey],dY.needsUpdate&&(void 0===dY.boundTo||"vertices"===dY.boundTo)){cN=0;eK=dY.value.length;if(1===dY.size){for(bV=0;bV<eK;bV++){dY.array[bV]=dY.value[bV]}}else{if(2===dY.size){for(bV=0;bV<eK;bV++){bN=dY.value[bV],dY.array[cN]=bN.x,dY.array[cN+1]=bN.y,cN+=2}}else{if(3===dY.size){if("c"===dY.type){for(bV=0;bV<eK;bV++){bN=dY.value[bV],dY.array[cN]=bN.r,dY.array[cN+1]=bN.g,dY.array[cN+2]=bN.b,cN+=3}}else{for(bV=0;bV<eK;bV++){bN=dY.value[bV],dY.array[cN]=bN.x,dY.array[cN+1]=bN.y,dY.array[cN+2]=bN.z,cN+=3}}}else{if(4===dY.size){for(bV=0;bV<eK;bV++){bN=dY.value[bV],dY.array[cN]=bN.x,dY.array[cN+1]=bN.y,dY.array[cN+2]=bN.z,dY.array[cN+3]=bN.w,cN+=4}}}}}aB.bindBuffer(aB.ARRAY_BUFFER,dY.buffer);aB.bufferData(aB.ARRAY_BUFFER,dY.array,d7)}}}}d4.verticesNeedUpdate=!1;d4.colorsNeedUpdate=!1;d4.lineDistancesNeedUpdate=!1;e0.attributes&&bg(e0)}else{if(eN instanceof THREE.ParticleSystem){if(d4 instanceof THREE.BufferGeometry){(d4.verticesNeedUpdate||d4.colorsNeedUpdate)&&aD(d4,aB.DYNAMIC_DRAW,!d4.dynamic),d4.verticesNeedUpdate=!1,d4.colorsNeedUpdate=!1}else{e0=aK(eN,d4);b9=e0.attributes&&ao(e0);if(d4.verticesNeedUpdate||d4.colorsNeedUpdate||eN.sortParticles||b9){var ez=d4,u=aB.DYNAMIC_DRAW,eB=eN,j=void 0,eP=void 0,eo=void 0,cf=void 0,dQ=void 0,dy=void 0,eO=ez.vertices,fe=eO.length,eV=ez.colors,bJ=eV.length,cj=ez.__vertexArray,b0=ez.__colorArray,cr=ez.__sortArray,f=ez.verticesNeedUpdate,e2=ez.colorsNeedUpdate,b8=ez.__webglCustomAttributesList,dW=void 0,cU=void 0,dn=void 0,dw=void 0,fg=void 0,cu=void 0;if(eB.sortParticles){bw.copy(w);bw.multiplySelf(eB.matrixWorld);for(j=0;j<fe;j++){eo=eO[j],bb.copy(eo),bw.multiplyVector3(bb),cr[j]=[bb.z,j]}cr.sort(ay);for(j=0;j<fe;j++){eo=eO[cr[j][1]],cf=3*j,cj[cf]=eo.x,cj[cf+1]=eo.y,cj[cf+2]=eo.z}for(eP=0;eP<bJ;eP++){cf=3*eP,dy=eV[cr[eP][1]],b0[cf]=dy.r,b0[cf+1]=dy.g,b0[cf+2]=dy.b}if(b8){dW=0;for(cU=b8.length;dW<cU;dW++){if(cu=b8[dW],void 0===cu.boundTo||"vertices"===cu.boundTo){if(cf=0,dw=cu.value.length,1===cu.size){for(dn=0;dn<dw;dn++){dQ=cr[dn][1],cu.array[dn]=cu.value[dQ]}}else{if(2===cu.size){for(dn=0;dn<dw;dn++){dQ=cr[dn][1],fg=cu.value[dQ],cu.array[cf]=fg.x,cu.array[cf+1]=fg.y,cf+=2}}else{if(3===cu.size){if("c"===cu.type){for(dn=0;dn<dw;dn++){dQ=cr[dn][1],fg=cu.value[dQ],cu.array[cf]=fg.r,cu.array[cf+1]=fg.g,cu.array[cf+2]=fg.b,cf+=3}}else{for(dn=0;dn<dw;dn++){dQ=cr[dn][1],fg=cu.value[dQ],cu.array[cf]=fg.x,cu.array[cf+1]=fg.y,cu.array[cf+2]=fg.z,cf+=3}}}else{if(4===cu.size){for(dn=0;dn<dw;dn++){dQ=cr[dn][1],fg=cu.value[dQ],cu.array[cf]=fg.x,cu.array[cf+1]=fg.y,cu.array[cf+2]=fg.z,cu.array[cf+3]=fg.w,cf+=4}}}}}}}}}else{if(f){for(j=0;j<fe;j++){eo=eO[j],cf=3*j,cj[cf]=eo.x,cj[cf+1]=eo.y,cj[cf+2]=eo.z}}if(e2){for(eP=0;eP<bJ;eP++){dy=eV[eP],cf=3*eP,b0[cf]=dy.r,b0[cf+1]=dy.g,b0[cf+2]=dy.b}}if(b8){dW=0;for(cU=b8.length;dW<cU;dW++){if(cu=b8[dW],cu.needsUpdate&&(void 0===cu.boundTo||"vertices"===cu.boundTo)){if(dw=cu.value.length,cf=0,1===cu.size){for(dn=0;dn<dw;dn++){cu.array[dn]=cu.value[dn]}}else{if(2===cu.size){for(dn=0;dn<dw;dn++){fg=cu.value[dn],cu.array[cf]=fg.x,cu.array[cf+1]=fg.y,cf+=2}}else{if(3===cu.size){if("c"===cu.type){for(dn=0;dn<dw;dn++){fg=cu.value[dn],cu.array[cf]=fg.r,cu.array[cf+1]=fg.g,cu.array[cf+2]=fg.b,cf+=3}}else{for(dn=0;dn<dw;dn++){fg=cu.value[dn],cu.array[cf]=fg.x,cu.array[cf+1]=fg.y,cu.array[cf+2]=fg.z,cf+=3}}}else{if(4===cu.size){for(dn=0;dn<dw;dn++){fg=cu.value[dn],cu.array[cf]=fg.x,cu.array[cf+1]=fg.y,cu.array[cf+2]=fg.z,cu.array[cf+3]=fg.w,cf+=4}}}}}}}}}if(f||eB.sortParticles){aB.bindBuffer(aB.ARRAY_BUFFER,ez.__webglVertexBuffer),aB.bufferData(aB.ARRAY_BUFFER,cj,u)}if(e2||eB.sortParticles){aB.bindBuffer(aB.ARRAY_BUFFER,ez.__webglColorBuffer),aB.bufferData(aB.ARRAY_BUFFER,b0,u)}if(b8){dW=0;for(cU=b8.length;dW<cU;dW++){if(cu=b8[dW],cu.needsUpdate||eB.sortParticles){aB.bindBuffer(aB.ARRAY_BUFFER,cu.buffer),aB.bufferData(aB.ARRAY_BUFFER,cu.array,u)}}}}d4.verticesNeedUpdate=!1;d4.colorsNeedUpdate=!1;e0.attributes&&bg(e0)}}}}}}};this.initMaterial=function(Z,X,V,R){var P,O,N,M;Z.addEventListener("dispose",aI);var L,K,I,H,J;Z instanceof THREE.MeshDepthMaterial?J="depth":Z instanceof THREE.MeshNormalMaterial?J="normal":Z instanceof THREE.MeshBasicMaterial?J="basic":Z instanceof THREE.MeshLambertMaterial?J="lambert":Z instanceof THREE.MeshPhongMaterial?J="phong":Z instanceof THREE.LineBasicMaterial?J="basic":Z instanceof THREE.LineDashedMaterial?J="dashed":Z instanceof THREE.ParticleBasicMaterial&&(J="particle_basic");if(J){var G=THREE.ShaderLib[J];Z.uniforms=THREE.UniformsUtils.clone(G.uniforms);Z.vertexShader=G.vertexShader;Z.fragmentShader=G.fragmentShader}var D,C,F;P=N=C=F=G=0;for(O=X.length;P<O;P++){D=X[P],D.onlyShadow||(D instanceof THREE.DirectionalLight&&N++,D instanceof THREE.PointLight&&C++,D instanceof THREE.SpotLight&&F++,D instanceof THREE.HemisphereLight&&G++)}P=N;O=C;N=F;M=G;G=D=0;for(F=X.length;G<F;G++){C=X[G],C.castShadow&&(C instanceof THREE.SpotLight&&D++,C instanceof THREE.DirectionalLight&&!C.shadowCascade&&D++)}H=D;bp&&R&&R.useVertexTexture?I=1024:(X=aB.getParameter(aB.MAX_VERTEX_UNIFORM_VECTORS),X=Math.floor((X-20)/4),void 0!==R&&R instanceof THREE.SkinnedMesh&&(X=Math.min(R.bones.length,X),X<R.bones.length&&console.warn("WebGLRenderer: too many bones - "+R.bones.length+", this GPU supports just "+X+" (try OpenGL instead of ANGLE)")),I=X);Z:{C=Z.fragmentShader;F=Z.vertexShader;G=Z.uniforms;X=Z.attributes;D=Z.defines;var V={map:!!Z.map,envMap:!!Z.envMap,lightMap:!!Z.lightMap,bumpMap:!!Z.bumpMap,normalMap:!!Z.normalMap,specularMap:!!Z.specularMap,vertexColors:Z.vertexColors,fog:V,useFog:Z.fog,fogExp:V instanceof THREE.FogExp2,sizeAttenuation:Z.sizeAttenuation,skinning:Z.skinning,maxBones:I,useVertexTexture:bp&&R&&R.useVertexTexture,boneTextureWidth:R&&R.boneTextureWidth,boneTextureHeight:R&&R.boneTextureHeight,morphTargets:Z.morphTargets,morphNormals:Z.morphNormals,maxMorphTargets:this.maxMorphTargets,maxMorphNormals:this.maxMorphNormals,maxDirLights:P,maxPointLights:O,maxSpotLights:N,maxHemiLights:M,maxShadows:H,shadowMapEnabled:this.shadowMapEnabled&&R.receiveShadow,shadowMapType:this.shadowMapType,shadowMapDebug:this.shadowMapDebug,shadowMapCascade:this.shadowMapCascade,alphaTest:Z.alphaTest,metal:Z.metal,perPixel:Z.perPixel,wrapAround:Z.wrapAround,doubleSided:Z.side===THREE.DoubleSide,flipSided:Z.side===THREE.BackSide},B,A,z,R=[];J?R.push(J):(R.push(C),R.push(F));for(A in D){R.push(A),R.push(D[A])}for(B in V){R.push(B),R.push(V[B])}J=R.join();B=0;for(A=aY.length;B<A;B++){if(R=aY[B],R.code===J){R.usedTimes++;K=R.program;break Z}}B="SHADOWMAP_TYPE_BASIC";V.shadowMapType===THREE.PCFShadowMap?B="SHADOWMAP_TYPE_PCF":V.shadowMapType===THREE.PCFSoftShadowMap&&(B="SHADOWMAP_TYPE_PCF_SOFT");A=[];for(z in D){R=D[z],!1!==R&&(R="#define "+z+" "+R,A.push(R))}R=A.join("\n");z=aB.createProgram();A=["precision "+aW+" float;",R,bF?"#define VERTEX_TEXTURES":"",aZ.gammaInput?"#define GAMMA_INPUT":"",aZ.gammaOutput?"#define GAMMA_OUTPUT":"",aZ.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"","#define MAX_DIR_LIGHTS "+V.maxDirLights,"#define MAX_POINT_LIGHTS "+V.maxPointLights,"#define MAX_SPOT_LIGHTS "+V.maxSpotLights,"#define MAX_HEMI_LIGHTS "+V.maxHemiLights,"#define MAX_SHADOWS "+V.maxShadows,"#define MAX_BONES "+V.maxBones,V.map?"#define USE_MAP":"",V.envMap?"#define USE_ENVMAP":"",V.lightMap?"#define USE_LIGHTMAP":"",V.bumpMap?"#define USE_BUMPMAP":"",V.normalMap?"#define USE_NORMALMAP":"",V.specularMap?"#define USE_SPECULARMAP":"",V.vertexColors?"#define USE_COLOR":"",V.skinning?"#define USE_SKINNING":"",V.useVertexTexture?"#define BONE_TEXTURE":"",V.boneTextureWidth?"#define N_BONE_PIXEL_X "+V.boneTextureWidth.toFixed(1):"",V.boneTextureHeight?"#define N_BONE_PIXEL_Y "+V.boneTextureHeight.toFixed(1):"",V.morphTargets?"#define USE_MORPHTARGETS":"",V.morphNormals?"#define USE_MORPHNORMALS":"",V.perPixel?"#define PHONG_PER_PIXEL":"",V.wrapAround?"#define WRAP_AROUND":"",V.doubleSided?"#define DOUBLE_SIDED":"",V.flipSided?"#define FLIP_SIDED":"",V.shadowMapEnabled?"#define USE_SHADOWMAP":"",V.shadowMapEnabled?"#define "+B:"",V.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",V.shadowMapCascade?"#define SHADOWMAP_CASCADE":"",V.sizeAttenuation?"#define USE_SIZEATTENUATION":"","uniform mat4 modelMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\nattribute vec2 uv2;\n#ifdef USE_COLOR\nattribute vec3 color;\n#endif\n#ifdef USE_MORPHTARGETS\nattribute vec3 morphTarget0;\nattribute vec3 morphTarget1;\nattribute vec3 morphTarget2;\nattribute vec3 morphTarget3;\n#ifdef USE_MORPHNORMALS\nattribute vec3 morphNormal0;\nattribute vec3 morphNormal1;\nattribute vec3 morphNormal2;\nattribute vec3 morphNormal3;\n#else\nattribute vec3 morphTarget4;\nattribute vec3 morphTarget5;\nattribute vec3 morphTarget6;\nattribute vec3 morphTarget7;\n#endif\n#endif\n#ifdef USE_SKINNING\nattribute vec4 skinIndex;\nattribute vec4 skinWeight;\n#endif\n"].join("\n");B=["precision "+aW+" float;",V.bumpMap||V.normalMap?"#extension GL_OES_standard_derivatives : enable":"",R,"#define MAX_DIR_LIGHTS "+V.maxDirLights,"#define MAX_POINT_LIGHTS "+V.maxPointLights,"#define MAX_SPOT_LIGHTS "+V.maxSpotLights,"#define MAX_HEMI_LIGHTS "+V.maxHemiLights,"#define MAX_SHADOWS "+V.maxShadows,V.alphaTest?"#define ALPHATEST "+V.alphaTest:"",aZ.gammaInput?"#define GAMMA_INPUT":"",aZ.gammaOutput?"#define GAMMA_OUTPUT":"",aZ.physicallyBasedShading?"#define PHYSICALLY_BASED_SHADING":"",V.useFog&&V.fog?"#define USE_FOG":"",V.useFog&&V.fogExp?"#define FOG_EXP2":"",V.map?"#define USE_MAP":"",V.envMap?"#define USE_ENVMAP":"",V.lightMap?"#define USE_LIGHTMAP":"",V.bumpMap?"#define USE_BUMPMAP":"",V.normalMap?"#define USE_NORMALMAP":"",V.specularMap?"#define USE_SPECULARMAP":"",V.vertexColors?"#define USE_COLOR":"",V.metal?"#define METAL":"",V.perPixel?"#define PHONG_PER_PIXEL":"",V.wrapAround?"#define WRAP_AROUND":"",V.doubleSided?"#define DOUBLE_SIDED":"",V.flipSided?"#define FLIP_SIDED":"",V.shadowMapEnabled?"#define USE_SHADOWMAP":"",V.shadowMapEnabled?"#define "+B:"",V.shadowMapDebug?"#define SHADOWMAP_DEBUG":"",V.shadowMapCascade?"#define SHADOWMAP_CASCADE":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");B=bv("fragment",B+C);A=bv("vertex",A+F);aB.attachShader(z,A);aB.attachShader(z,B);aB.linkProgram(z);aB.getProgramParameter(z,aB.LINK_STATUS)||console.error("Could not initialise shader\nVALIDATE_STATUS: "+aB.getProgramParameter(z,aB.VALIDATE_STATUS)+", gl error ["+aB.getError()+"]");aB.deleteShader(B);aB.deleteShader(A);z.uniforms={};z.attributes={};var j;B="viewMatrix modelViewMatrix projectionMatrix normalMatrix modelMatrix cameraPosition morphTargetInfluences".split(" ");V.useVertexTexture?B.push("boneTexture"):B.push("boneGlobalMatrices");for(j in G){B.push(j)}j=B;B=0;for(A=j.length;B<A;B++){G=j[B],z.uniforms[G]=aB.getUniformLocation(z,G)}B="position normal uv uv2 tangent color skinIndex skinWeight lineDistance".split(" ");for(j=0;j<V.maxMorphTargets;j++){B.push("morphTarget"+j)}for(j=0;j<V.maxMorphNormals;j++){B.push("morphNormal"+j)}for(K in X){B.push(K)}K=B;j=0;for(X=K.length;j<X;j++){B=K[j],z.attributes[B]=aB.getAttribLocation(z,B)}z.id=bo++;aY.push({program:z,code:J,usedTimes:1});aZ.info.memory.programs=aY.length;K=z}Z.program=K;j=Z.program.attributes;if(Z.morphTargets){Z.numSupportedMorphTargets=0;X="morphTarget";for(K=0;K<this.maxMorphTargets;K++){z=X+K,0<=j[z]&&Z.numSupportedMorphTargets++}}if(Z.morphNormals){Z.numSupportedMorphNormals=0;X="morphNormal";for(K=0;K<this.maxMorphNormals;K++){z=X+K,0<=j[z]&&Z.numSupportedMorphNormals++}}Z.uniformsList=[];for(L in Z.uniforms){Z.uniformsList.push([Z.uniforms[L],L])}};this.setFaceCulling=function(d,c){d===THREE.CullFaceNone?aB.disable(aB.CULL_FACE):(c===THREE.FrontFaceDirectionCW?aB.frontFace(aB.CW):aB.frontFace(aB.CCW),d===THREE.CullFaceBack?aB.cullFace(aB.BACK):d===THREE.CullFaceFront?aB.cullFace(aB.FRONT):aB.cullFace(aB.FRONT_AND_BACK),aB.enable(aB.CULL_FACE))};this.setMaterialFaces=function(d){var c=d.side===THREE.DoubleSide,d=d.side===THREE.BackSide;aF!==c&&(c?aB.disable(aB.CULL_FACE):aB.enable(aB.CULL_FACE),aF=c);bA!==d&&(d?aB.frontFace(aB.CW):aB.frontFace(aB.CCW),bA=d)};this.setDepthTest=function(b){v!==b&&(b?aB.enable(aB.DEPTH_TEST):aB.disable(aB.DEPTH_TEST),v=b)};this.setDepthWrite=function(b){ai!==b&&(aB.depthMask(b),ai=b)};this.setBlending=function(f,e,h,g){f!==bx&&(f===THREE.NoBlending?aB.disable(aB.BLEND):f===THREE.AdditiveBlending?(aB.enable(aB.BLEND),aB.blendEquation(aB.FUNC_ADD),aB.blendFunc(aB.SRC_ALPHA,aB.ONE)):f===THREE.SubtractiveBlending?(aB.enable(aB.BLEND),aB.blendEquation(aB.FUNC_ADD),aB.blendFunc(aB.ZERO,aB.ONE_MINUS_SRC_COLOR)):f===THREE.MultiplyBlending?(aB.enable(aB.BLEND),aB.blendEquation(aB.FUNC_ADD),aB.blendFunc(aB.ZERO,aB.SRC_COLOR)):f===THREE.CustomBlending?aB.enable(aB.BLEND):(aB.enable(aB.BLEND),aB.blendEquationSeparate(aB.FUNC_ADD,aB.FUNC_ADD),aB.blendFuncSeparate(aB.SRC_ALPHA,aB.ONE_MINUS_SRC_ALPHA,aB.ONE,aB.ONE_MINUS_SRC_ALPHA)),bx=f);if(f===THREE.CustomBlending){if(e!==ba&&(aB.blendEquation(a4(e)),ba=e),h!==br||g!==E){aB.blendFunc(a4(h),a4(g)),br=h,E=g}}else{E=br=ba=null}};this.setTexture=function(s,r){if(s.needsUpdate){s.__webglInit||(s.__webglInit=!0,s.addEventListener("dispose",am),s.__webglTexture=aB.createTexture(),aZ.info.memory.textures++);aB.activeTexture(aB.TEXTURE0+r);aB.bindTexture(aB.TEXTURE_2D,s.__webglTexture);aB.pixelStorei(aB.UNPACK_FLIP_Y_WEBGL,s.flipY);aB.pixelStorei(aB.UNPACK_PREMULTIPLY_ALPHA_WEBGL,s.premultiplyAlpha);aB.pixelStorei(aB.UNPACK_ALIGNMENT,s.unpackAlignment);var q=s.image,p=0===(q.width&q.width-1)&&0===(q.height&q.height-1),n=a4(s.format),m=a4(s.type);bc(aB.TEXTURE_2D,s,p);var l=s.mipmaps;if(s instanceof THREE.DataTexture){if(0<l.length&&p){for(var k=0,j=l.length;k<j;k++){q=l[k],aB.texImage2D(aB.TEXTURE_2D,k,n,q.width,q.height,0,n,m,q.data)}s.generateMipmaps=!1}else{aB.texImage2D(aB.TEXTURE_2D,0,n,q.width,q.height,0,n,m,q.data)}}else{if(s instanceof THREE.CompressedTexture){k=0;for(j=l.length;k<j;k++){q=l[k],aB.compressedTexImage2D(aB.TEXTURE_2D,k,n,q.width,q.height,0,q.data)}}else{if(0<l.length&&p){k=0;for(j=l.length;k<j;k++){q=l[k],aB.texImage2D(aB.TEXTURE_2D,k,n,n,m,q)}s.generateMipmaps=!1}else{aB.texImage2D(aB.TEXTURE_2D,0,n,n,m,s.image)}}}s.generateMipmaps&&p&&aB.generateMipmap(aB.TEXTURE_2D);s.needsUpdate=!1;if(s.onUpdate){s.onUpdate()}}else{aB.activeTexture(aB.TEXTURE0+r),aB.bindTexture(aB.TEXTURE_2D,s.__webglTexture)}};this.setRenderTarget=function(j){var i=j instanceof THREE.WebGLRenderTargetCube;if(j&&!j.__webglFramebuffer){void 0===j.depthBuffer&&(j.depthBuffer=!0);void 0===j.stencilBuffer&&(j.stencilBuffer=!0);j.addEventListener("dispose",bn);j.__webglTexture=aB.createTexture();aZ.info.memory.textures++;var q=0===(j.width&j.width-1)&&0===(j.height&j.height-1),p=a4(j.format),n=a4(j.type);if(i){j.__webglFramebuffer=[];j.__webglRenderbuffer=[];aB.bindTexture(aB.TEXTURE_CUBE_MAP,j.__webglTexture);bc(aB.TEXTURE_CUBE_MAP,j,q);for(var m=0;6>m;m++){j.__webglFramebuffer[m]=aB.createFramebuffer();j.__webglRenderbuffer[m]=aB.createRenderbuffer();aB.texImage2D(aB.TEXTURE_CUBE_MAP_POSITIVE_X+m,0,p,j.width,j.height,0,p,n,null);var l=j,k=aB.TEXTURE_CUBE_MAP_POSITIVE_X+m;aB.bindFramebuffer(aB.FRAMEBUFFER,j.__webglFramebuffer[m]);aB.framebufferTexture2D(aB.FRAMEBUFFER,aB.COLOR_ATTACHMENT0,k,l.__webglTexture,0);a1(j.__webglRenderbuffer[m],j)}q&&aB.generateMipmap(aB.TEXTURE_CUBE_MAP)}else{j.__webglFramebuffer=aB.createFramebuffer(),j.__webglRenderbuffer=j.shareDepthFrom?j.shareDepthFrom.__webglRenderbuffer:aB.createRenderbuffer(),aB.bindTexture(aB.TEXTURE_2D,j.__webglTexture),bc(aB.TEXTURE_2D,j,q),aB.texImage2D(aB.TEXTURE_2D,0,p,j.width,j.height,0,p,n,null),p=aB.TEXTURE_2D,aB.bindFramebuffer(aB.FRAMEBUFFER,j.__webglFramebuffer),aB.framebufferTexture2D(aB.FRAMEBUFFER,aB.COLOR_ATTACHMENT0,p,j.__webglTexture,0),j.shareDepthFrom?j.depthBuffer&&!j.stencilBuffer?aB.framebufferRenderbuffer(aB.FRAMEBUFFER,aB.DEPTH_ATTACHMENT,aB.RENDERBUFFER,j.__webglRenderbuffer):j.depthBuffer&&j.stencilBuffer&&aB.framebufferRenderbuffer(aB.FRAMEBUFFER,aB.DEPTH_STENCIL_ATTACHMENT,aB.RENDERBUFFER,j.__webglRenderbuffer):a1(j.__webglRenderbuffer,j),q&&aB.generateMipmap(aB.TEXTURE_2D)}i?aB.bindTexture(aB.TEXTURE_CUBE_MAP,null):aB.bindTexture(aB.TEXTURE_2D,null);aB.bindRenderbuffer(aB.RENDERBUFFER,null);aB.bindFramebuffer(aB.FRAMEBUFFER,null)}j?(i=i?j.__webglFramebuffer[j.activeCubeFace]:j.__webglFramebuffer,q=j.width,j=j.height,n=p=0):(i=null,q=bu,j=U,p=Y,n=a5);i!==aU&&(aB.bindFramebuffer(aB.FRAMEBUFFER,i),aB.viewport(p,n,q,j),aU=i);bC=q;bj=j};this.shadowMapPlugin=new THREE.ShadowMapPlugin;this.addPrePlugin(this.shadowMapPlugin);this.addPostPlugin(new THREE.SpritePlugin);this.addPostPlugin(new THREE.LensFlarePlugin)};THREE.WebGLRenderTarget=function(e,d,f){THREE.EventDispatcher.call(this);this.width=e;this.height=d;f=f||{};this.wrapS=void 0!==f.wrapS?f.wrapS:THREE.ClampToEdgeWrapping;this.wrapT=void 0!==f.wrapT?f.wrapT:THREE.ClampToEdgeWrapping;this.magFilter=void 0!==f.magFilter?f.magFilter:THREE.LinearFilter;this.minFilter=void 0!==f.minFilter?f.minFilter:THREE.LinearMipMapLinearFilter;this.anisotropy=void 0!==f.anisotropy?f.anisotropy:1;this.offset=new THREE.Vector2(0,0);this.repeat=new THREE.Vector2(1,1);this.format=void 0!==f.format?f.format:THREE.RGBAFormat;this.type=void 0!==f.type?f.type:THREE.UnsignedByteType;this.depthBuffer=void 0!==f.depthBuffer?f.depthBuffer:!0;this.stencilBuffer=void 0!==f.stencilBuffer?f.stencilBuffer:!0;this.generateMipmaps=!0;this.shareDepthFrom=null};THREE.WebGLRenderTarget.prototype.clone=function(){var b=new THREE.WebGLRenderTarget(this.width,this.height);b.wrapS=this.wrapS;b.wrapT=this.wrapT;b.magFilter=this.magFilter;b.minFilter=this.minFilter;b.anisotropy=this.anisotropy;b.offset.copy(this.offset);b.repeat.copy(this.repeat);b.format=this.format;b.type=this.type;b.depthBuffer=this.depthBuffer;b.stencilBuffer=this.stencilBuffer;b.generateMipmaps=this.generateMipmaps;b.shareDepthFrom=this.shareDepthFrom;return b};THREE.WebGLRenderTarget.prototype.dispose=function(){this.dispatchEvent({type:"dispose"})};THREE.WebGLRenderTargetCube=function(e,d,f){THREE.WebGLRenderTarget.call(this,e,d,f);this.activeCubeFace=0};THREE.WebGLRenderTargetCube.prototype=Object.create(THREE.WebGLRenderTarget.prototype);THREE.RenderableVertex=function(){this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.visible=!0};THREE.RenderableVertex.prototype.copy=function(b){this.positionWorld.copy(b.positionWorld);this.positionScreen.copy(b.positionScreen)};THREE.RenderableFace3=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsLength=0;this.material=this.color=null;this.uvs=[[]];this.z=null};THREE.RenderableFace4=function(){this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.v3=new THREE.RenderableVertex;this.v4=new THREE.RenderableVertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];this.vertexNormalsLength=0;this.material=this.color=null;this.uvs=[[]];this.z=null};THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=this.object=null;this.scale=new THREE.Vector2;this.material=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.RenderableVertex;this.v2=new THREE.RenderableVertex;this.material=null};THREE.ColorUtils={adjustHSV:function(g,f,j,i){var h=THREE.ColorUtils.__hsv;g.getHSV(h);h.h=THREE.Math.clamp(h.h+f,0,1);h.s=THREE.Math.clamp(h.s+j,0,1);h.v=THREE.Math.clamp(h.v+i,0,1);g.setHSV(h.h,h.s,h.v)}};THREE.ColorUtils.__hsv={h:0,s:0,v:0};THREE.GeometryUtils={merge:function(J,I){var H,G,F=J.vertices.length,E=I instanceof THREE.Mesh?I.geometry:I,D=J.vertices,C=E.vertices,B=J.faces,A=E.faces,x=J.faceVertexUvs[0],E=E.faceVertexUvs[0];I instanceof THREE.Mesh&&(I.matrixAutoUpdate&&I.updateMatrix(),H=I.matrix,G=new THREE.Matrix4,G.extractRotation(H,I.scale));for(var w=0,y=C.length;w<y;w++){var t=C[w].clone();H&&H.multiplyVector3(t);D.push(t)}w=0;for(y=A.length;w<y;w++){var t=A[w],o,z,v=t.vertexNormals,j=t.vertexColors;t instanceof THREE.Face3?o=new THREE.Face3(t.a+F,t.b+F,t.c+F):t instanceof THREE.Face4&&(o=new THREE.Face4(t.a+F,t.b+F,t.c+F,t.d+F));o.normal.copy(t.normal);G&&G.multiplyVector3(o.normal);D=0;for(C=v.length;D<C;D++){z=v[D].clone(),G&&G.multiplyVector3(z),o.vertexNormals.push(z)}o.color.copy(t.color);D=0;for(C=j.length;D<C;D++){z=j[D],o.vertexColors.push(z.clone())}o.materialIndex=t.materialIndex;o.centroid.copy(t.centroid);H&&H.multiplyVector3(o.centroid);B.push(o)}w=0;for(y=E.length;w<y;w++){H=E[w];G=[];D=0;for(C=H.length;D<C;D++){G.push(new THREE.Vector2(H[D].x,H[D].y))}x.push(G)}},removeMaterials:function(i,h){for(var n={},m=0,l=h.length;m<l;m++){n[h[m]]=!0}for(var k,j=[],m=0,l=i.faces.length;m<l;m++){k=i.faces[m],k.materialIndex in n||j.push(k)}i.faces=j},randomPointInTriangle:function(j,i,p){var o,n,m,l=new THREE.Vector3,k=THREE.GeometryUtils.__v1;o=THREE.GeometryUtils.random();n=THREE.GeometryUtils.random();1<o+n&&(o=1-o,n=1-n);m=1-o-n;l.copy(j);l.multiplyScalar(o);k.copy(i);k.multiplyScalar(n);l.addSelf(k);k.copy(p);k.multiplyScalar(m);l.addSelf(k);return l},randomPointInFace:function(i,h,n){var m,l,k;if(i instanceof THREE.Face3){return m=h.vertices[i.a],l=h.vertices[i.b],k=h.vertices[i.c],THREE.GeometryUtils.randomPointInTriangle(m,l,k)}if(i instanceof THREE.Face4){m=h.vertices[i.a];l=h.vertices[i.b];k=h.vertices[i.c];var h=h.vertices[i.d],j;n?i._area1&&i._area2?(n=i._area1,j=i._area2):(n=THREE.GeometryUtils.triangleArea(m,l,h),j=THREE.GeometryUtils.triangleArea(l,k,h),i._area1=n,i._area2=j):(n=THREE.GeometryUtils.triangleArea(m,l,h),j=THREE.GeometryUtils.triangleArea(l,k,h));return THREE.GeometryUtils.random()*(n+j)<n?THREE.GeometryUtils.randomPointInTriangle(m,l,h):THREE.GeometryUtils.randomPointInTriangle(l,k,h)}},randomPointsInGeometry:function(B,A){function z(d){function c(f,b){if(b<f){return f}var a=f+Math.floor((b-f)/2);return s[a]>d?c(f,a-1):s[a]<d?c(a+1,b):a}return c(0,s.length-1)}var y,x,w=B.faces,v=B.vertices,u=w.length,t=0,s=[],o,l,q,j;for(x=0;x<u;x++){y=w[x],y instanceof THREE.Face3?(o=v[y.a],l=v[y.b],q=v[y.c],y._area=THREE.GeometryUtils.triangleArea(o,l,q)):y instanceof THREE.Face4&&(o=v[y.a],l=v[y.b],q=v[y.c],j=v[y.d],y._area1=THREE.GeometryUtils.triangleArea(o,l,j),y._area2=THREE.GeometryUtils.triangleArea(l,q,j),y._area=y._area1+y._area2),t+=y._area,s[x]=t}y=[];for(x=0;x<A;x++){v=THREE.GeometryUtils.random()*t,v=z(v),y[x]=THREE.GeometryUtils.randomPointInFace(w[v],B,!0)}return y},triangleArea:function(g,f,j){var i=THREE.GeometryUtils.__v1,h=THREE.GeometryUtils.__v2;i.sub(f,g);h.sub(j,g);i.crossSelf(h);return 0.5*i.length()},center:function(e){e.computeBoundingBox();var d=e.boundingBox,f=new THREE.Vector3;f.add(d.min,d.max);f.multiplyScalar(-0.5);e.applyMatrix((new THREE.Matrix4).makeTranslation(f));e.computeBoundingBox();return f},normalizeUVs:function(h){for(var h=h.faceVertexUvs[0],g=0,l=h.length;g<l;g++){for(var k=h[g],j=0,i=k.length;j<i;j++){1!==k[j].x&&(k[j].x-=Math.floor(k[j].x)),1!==k[j].y&&(k[j].y-=Math.floor(k[j].y))}}},triangulateQuads:function(z){var y,x,w,v,u=[],t=[],s=[];y=0;for(x=z.faceUvs.length;y<x;y++){t[y]=[]}y=0;for(x=z.faceVertexUvs.length;y<x;y++){s[y]=[]}y=0;for(x=z.faces.length;y<x;y++){if(w=z.faces[y],w instanceof THREE.Face4){v=w.a;var r=w.b,q=w.c,l=w.d,j=new THREE.Face3,o=new THREE.Face3;j.color.copy(w.color);o.color.copy(w.color);j.materialIndex=w.materialIndex;o.materialIndex=w.materialIndex;j.a=v;j.b=r;j.c=l;o.a=r;o.b=q;o.c=l;4===w.vertexColors.length&&(j.vertexColors[0]=w.vertexColors[0].clone(),j.vertexColors[1]=w.vertexColors[1].clone(),j.vertexColors[2]=w.vertexColors[3].clone(),o.vertexColors[0]=w.vertexColors[1].clone(),o.vertexColors[1]=w.vertexColors[2].clone(),o.vertexColors[2]=w.vertexColors[3].clone());u.push(j,o);w=0;for(v=z.faceVertexUvs.length;w<v;w++){z.faceVertexUvs[w].length&&(j=z.faceVertexUvs[w][y],r=j[1],q=j[2],l=j[3],j=[j[0].clone(),r.clone(),l.clone()],r=[r.clone(),q.clone(),l.clone()],s[w].push(j,r))}w=0;for(v=z.faceUvs.length;w<v;w++){z.faceUvs[w].length&&(r=z.faceUvs[w][y],t[w].push(r,r))}}else{u.push(w);w=0;for(v=z.faceUvs.length;w<v;w++){t[w].push(z.faceUvs[w][y])}w=0;for(v=z.faceVertexUvs.length;w<v;w++){s[w].push(z.faceVertexUvs[w][y])}}}z.faces=u;z.faceUvs=t;z.faceVertexUvs=s;z.computeCentroids();z.computeFaceNormals();z.computeVertexNormals();z.hasTangents&&z.computeTangents()},explode:function(t){for(var s=[],r=0,q=t.faces.length;r<q;r++){var p=s.length,o=t.faces[r];if(o instanceof THREE.Face4){var n=o.a,m=o.b,l=o.c,n=t.vertices[n],m=t.vertices[m],l=t.vertices[l],j=t.vertices[o.d];s.push(n.clone());s.push(m.clone());s.push(l.clone());s.push(j.clone());o.a=p;o.b=p+1;o.c=p+2;o.d=p+3}else{n=o.a,m=o.b,l=o.c,n=t.vertices[n],m=t.vertices[m],l=t.vertices[l],s.push(n.clone()),s.push(m.clone()),s.push(l.clone()),o.a=p,o.b=p+1,o.c=p+2}}t.vertices=s;delete t.__tmpVertices},tessellate:function(T,S){var R,Q,P,O,N,M,L,K,H,G,I,A,y,J,E,v,D,j,w,o=[],z=[];R=0;for(Q=T.faceVertexUvs.length;R<Q;R++){z[R]=[]}R=0;for(Q=T.faces.length;R<Q;R++){if(P=T.faces[R],P instanceof THREE.Face3){if(O=P.a,N=P.b,M=P.c,K=T.vertices[O],H=T.vertices[N],G=T.vertices[M],A=K.distanceTo(H),y=H.distanceTo(G),I=K.distanceTo(G),A>S||y>S||I>S){L=T.vertices.length;j=P.clone();w=P.clone();A>=y&&A>=I?(K=K.clone(),K.lerpSelf(H,0.5),j.a=O,j.b=L,j.c=M,w.a=L,w.b=N,w.c=M,3===P.vertexNormals.length&&(O=P.vertexNormals[0].clone(),O.lerpSelf(P.vertexNormals[1],0.5),j.vertexNormals[1].copy(O),w.vertexNormals[0].copy(O)),3===P.vertexColors.length&&(O=P.vertexColors[0].clone(),O.lerpSelf(P.vertexColors[1],0.5),j.vertexColors[1].copy(O),w.vertexColors[0].copy(O)),P=0):y>=A&&y>=I?(K=H.clone(),K.lerpSelf(G,0.5),j.a=O,j.b=N,j.c=L,w.a=L,w.b=M,w.c=O,3===P.vertexNormals.length&&(O=P.vertexNormals[1].clone(),O.lerpSelf(P.vertexNormals[2],0.5),j.vertexNormals[2].copy(O),w.vertexNormals[0].copy(O),w.vertexNormals[1].copy(P.vertexNormals[2]),w.vertexNormals[2].copy(P.vertexNormals[0])),3===P.vertexColors.length&&(O=P.vertexColors[1].clone(),O.lerpSelf(P.vertexColors[2],0.5),j.vertexColors[2].copy(O),w.vertexColors[0].copy(O),w.vertexColors[1].copy(P.vertexColors[2]),w.vertexColors[2].copy(P.vertexColors[0])),P=1):(K=K.clone(),K.lerpSelf(G,0.5),j.a=O,j.b=N,j.c=L,w.a=L,w.b=N,w.c=M,3===P.vertexNormals.length&&(O=P.vertexNormals[0].clone(),O.lerpSelf(P.vertexNormals[2],0.5),j.vertexNormals[2].copy(O),w.vertexNormals[0].copy(O)),3===P.vertexColors.length&&(O=P.vertexColors[0].clone(),O.lerpSelf(P.vertexColors[2],0.5),j.vertexColors[2].copy(O),w.vertexColors[0].copy(O)),P=2);o.push(j,w);T.vertices.push(K);O=0;for(N=T.faceVertexUvs.length;O<N;O++){T.faceVertexUvs[O].length&&(K=T.faceVertexUvs[O][R],w=K[0],M=K[1],j=K[2],0===P?(H=w.clone(),H.lerpSelf(M,0.5),K=[w.clone(),H.clone(),j.clone()],M=[H.clone(),M.clone(),j.clone()]):1===P?(H=M.clone(),H.lerpSelf(j,0.5),K=[w.clone(),M.clone(),H.clone()],M=[H.clone(),j.clone(),w.clone()]):(H=w.clone(),H.lerpSelf(j,0.5),K=[w.clone(),M.clone(),H.clone()],M=[H.clone(),M.clone(),j.clone()]),z[O].push(K,M))}}else{o.push(P);O=0;for(N=T.faceVertexUvs.length;O<N;O++){z[O].push(T.faceVertexUvs[O][R])}}}else{if(O=P.a,N=P.b,M=P.c,L=P.d,K=T.vertices[O],H=T.vertices[N],G=T.vertices[M],I=T.vertices[L],A=K.distanceTo(H),y=H.distanceTo(G),J=G.distanceTo(I),E=K.distanceTo(I),A>S||y>S||J>S||E>S){v=T.vertices.length;D=T.vertices.length+1;j=P.clone();w=P.clone();A>=y&&A>=J&&A>=E||J>=y&&J>=A&&J>=E?(A=K.clone(),A.lerpSelf(H,0.5),H=G.clone(),H.lerpSelf(I,0.5),j.a=O,j.b=v,j.c=D,j.d=L,w.a=v,w.b=N,w.c=M,w.d=D,4===P.vertexNormals.length&&(O=P.vertexNormals[0].clone(),O.lerpSelf(P.vertexNormals[1],0.5),N=P.vertexNormals[2].clone(),N.lerpSelf(P.vertexNormals[3],0.5),j.vertexNormals[1].copy(O),j.vertexNormals[2].copy(N),w.vertexNormals[0].copy(O),w.vertexNormals[3].copy(N)),4===P.vertexColors.length&&(O=P.vertexColors[0].clone(),O.lerpSelf(P.vertexColors[1],0.5),N=P.vertexColors[2].clone(),N.lerpSelf(P.vertexColors[3],0.5),j.vertexColors[1].copy(O),j.vertexColors[2].copy(N),w.vertexColors[0].copy(O),w.vertexColors[3].copy(N)),P=0):(A=H.clone(),A.lerpSelf(G,0.5),H=I.clone(),H.lerpSelf(K,0.5),j.a=O,j.b=N,j.c=v,j.d=D,w.a=D,w.b=v,w.c=M,w.d=L,4===P.vertexNormals.length&&(O=P.vertexNormals[1].clone(),O.lerpSelf(P.vertexNormals[2],0.5),N=P.vertexNormals[3].clone(),N.lerpSelf(P.vertexNormals[0],0.5),j.vertexNormals[2].copy(O),j.vertexNormals[3].copy(N),w.vertexNormals[0].copy(N),w.vertexNormals[1].copy(O)),4===P.vertexColors.length&&(O=P.vertexColors[1].clone(),O.lerpSelf(P.vertexColors[2],0.5),N=P.vertexColors[3].clone(),N.lerpSelf(P.vertexColors[0],0.5),j.vertexColors[2].copy(O),j.vertexColors[3].copy(N),w.vertexColors[0].copy(N),w.vertexColors[1].copy(O)),P=1);o.push(j,w);T.vertices.push(A,H);O=0;for(N=T.faceVertexUvs.length;O<N;O++){T.faceVertexUvs[O].length&&(K=T.faceVertexUvs[O][R],w=K[0],M=K[1],j=K[2],K=K[3],0===P?(H=w.clone(),H.lerpSelf(M,0.5),G=j.clone(),G.lerpSelf(K,0.5),w=[w.clone(),H.clone(),G.clone(),K.clone()],M=[H.clone(),M.clone(),j.clone(),G.clone()]):(H=M.clone(),H.lerpSelf(j,0.5),G=K.clone(),G.lerpSelf(w,0.5),w=[w.clone(),M.clone(),H.clone(),G.clone()],M=[G.clone(),H.clone(),j.clone(),K.clone()]),z[O].push(w,M))}}else{o.push(P);O=0;for(N=T.faceVertexUvs.length;O<N;O++){z[O].push(T.faceVertexUvs[O][R])}}}}T.faces=o;T.faceVertexUvs=z},setMaterialIndex:function(f,e,h,g){f=f.faces;g=g||f.length-1;for(h=h||0;h<=g;h++){f[h].materialIndex=e}}};THREE.GeometryUtils.random=THREE.Math.random16;THREE.GeometryUtils.__v1=new THREE.Vector3;THREE.GeometryUtils.__v2=new THREE.Vector3;THREE.ImageUtils={crossOrigin:"anonymous",loadTexture:function(h,g,l,k){var j=new Image,i=new THREE.Texture(j,g),g=new THREE.ImageLoader;g.addEventListener("load",function(b){i.image=b.content;i.needsUpdate=!0;l&&l(i)});g.addEventListener("error",function(b){k&&k(b.message)});g.crossOrigin=this.crossOrigin;g.load(h,j);i.sourceFile=h;return i},loadCompressedTexture:function(h,g,l,k){var j=new THREE.CompressedTexture;j.mapping=g;var i=new XMLHttpRequest;i.onload=function(){var b=THREE.ImageUtils.parseDDS(i.response,!0);j.format=b.format;j.mipmaps=b.mipmaps;j.image.width=b.width;j.image.height=b.height;j.generateMipmaps=!1;j.needsUpdate=!0;l&&l(j)};i.onerror=k;i.open("GET",h,!0);i.responseType="arraybuffer";i.send(null);return j},loadTextureCube:function(j,i,p,o){var n=[];n.loadCount=0;var m=new THREE.Texture;m.image=n;void 0!==i&&(m.mapping=i);m.flipY=!1;for(var i=0,l=j.length;i<l;++i){var k=new Image;n[i]=k;k.onload=function(){n.loadCount+=1;6===n.loadCount&&(m.needsUpdate=!0,p&&p(m))};k.onerror=o;k.crossOrigin=this.crossOrigin;k.src=j[i]}return m},loadCompressedTextureCube:function(t,s,r,q){var p=[];p.loadCount=0;var o=new THREE.CompressedTexture;o.image=p;void 0!==s&&(o.mapping=s);o.flipY=!1;o.generateMipmaps=!1;s=function(d,c){return function(){var a=THREE.ImageUtils.parseDDS(d.response,!0);c.format=a.format;c.mipmaps=a.mipmaps;c.width=a.width;c.height=a.height;p.loadCount+=1;6===p.loadCount&&(o.format=a.format,o.needsUpdate=!0,r&&r(o))}};if(t instanceof Array){for(var n=0,m=t.length;n<m;++n){var l={};p[n]=l;var j=new XMLHttpRequest;j.onload=s(j,l);j.onerror=q;l=t[n];j.open("GET",l,!0);j.responseType="arraybuffer";j.send(null)}}else{j=new XMLHttpRequest,j.onload=function(){var e=THREE.ImageUtils.parseDDS(j.response,!0);if(e.isCubemap){for(var c=e.mipmaps.length/e.mipmapCount,h=0;h<c;h++){p[h]={mipmaps:[]};for(var f=0;f<e.mipmapCount;f++){p[h].mipmaps.push(e.mipmaps[h*e.mipmapCount+f]),p[h].format=e.format,p[h].width=e.width,p[h].height=e.height}}o.format=e.format;o.needsUpdate=!0;r&&r(o)}},j.onerror=q,j.open("GET",t,!0),j.responseType="arraybuffer",j.send(null)}return o},parseDDS:function(z,y){function x(b){return b.charCodeAt(0)+(b.charCodeAt(1)<<8)+(b.charCodeAt(2)<<16)+(b.charCodeAt(3)<<24)}var w={mipmaps:[],width:0,height:0,format:null,mipmapCount:1},v=x("DXT1"),u=x("DXT3"),t=x("DXT5"),s=new Int32Array(z,0,31);if(542327876!==s[0]){return console.error("ImageUtils.parseDDS(): Invalid magic number in DDS header"),w}if(!s[20]&4){return console.error("ImageUtils.parseDDS(): Unsupported format, must contain a FourCC code"),w}var r=s[21];switch(r){case v:v=8;w.format=THREE.RGB_S3TC_DXT1_Format;break;case u:v=16;w.format=THREE.RGBA_S3TC_DXT3_Format;break;case t:v=16;w.format=THREE.RGBA_S3TC_DXT5_Format;break;default:return console.error("ImageUtils.parseDDS(): Unsupported FourCC code: ",String.fromCharCode(r&255,r>>8&255,r>>16&255,r>>24&255)),w}w.mipmapCount=1;s[2]&131072&&!1!==y&&(w.mipmapCount=Math.max(1,s[7]));w.isCubemap=s[28]&512?!0:!1;w.width=s[4];w.height=s[3];for(var s=s[1]+4,u=w.width,t=w.height,r=w.isCubemap?6:1,q=0;q<r;q++){for(var l=0;l<w.mipmapCount;l++){var j=Math.max(4,u)/4*Math.max(4,t)/4*v,o={data:new Uint8Array(z,s,j),width:u,height:t};w.mipmaps.push(o);s+=j;u=Math.max(0.5*u,1);t=Math.max(0.5*t,1)}u=w.width;t=w.height}return w},getNormalMap:function(L,K){var J=function(d){var c=Math.sqrt(d[0]*d[0]+d[1]*d[1]+d[2]*d[2]);return[d[0]/c,d[1]/c,d[2]/c]},K=K|1,I=L.width,H=L.height,G=document.createElement("canvas");G.width=I;G.height=H;var F=G.getContext("2d");F.drawImage(L,0,0);for(var E=F.getImageData(0,0,I,H).data,D=F.createImageData(I,H),C=D.data,y=0;y<I;y++){for(var x=0;x<H;x++){var z=0>x-1?0:x-1,t=x+1>H-1?H-1:x+1,o=0>y-1?0:y-1,A=y+1>I-1?I-1:y+1,w=[],j=[0,0,E[4*(x*I+y)]/255*K];w.push([-1,0,E[4*(x*I+o)]/255*K]);w.push([-1,-1,E[4*(z*I+o)]/255*K]);w.push([0,-1,E[4*(z*I+y)]/255*K]);w.push([1,-1,E[4*(z*I+A)]/255*K]);w.push([1,0,E[4*(x*I+A)]/255*K]);w.push([1,1,E[4*(t*I+A)]/255*K]);w.push([0,1,E[4*(t*I+y)]/255*K]);w.push([-1,1,E[4*(t*I+o)]/255*K]);z=[];o=w.length;for(t=0;t<o;t++){var A=w[t],v=w[(t+1)%o],A=[A[0]-j[0],A[1]-j[1],A[2]-j[2]],v=[v[0]-j[0],v[1]-j[1],v[2]-j[2]];z.push(J([A[1]*v[2]-A[2]*v[1],A[2]*v[0]-A[0]*v[2],A[0]*v[1]-A[1]*v[0]]))}w=[0,0,0];for(t=0;t<z.length;t++){w[0]+=z[t][0],w[1]+=z[t][1],w[2]+=z[t][2]}w[0]/=z.length;w[1]/=z.length;w[2]/=z.length;j=4*(x*I+y);C[j]=255*((w[0]+1)/2)|0;C[j+1]=255*((w[1]+1)/2)|0;C[j+2]=255*w[2]|0;C[j+3]=255}}F.putImageData(D,0,0);return G},generateDataTexture:function(j,i,p){for(var o=j*i,n=new Uint8Array(3*o),m=Math.floor(255*p.r),l=Math.floor(255*p.g),p=Math.floor(255*p.b),k=0;k<o;k++){n[3*k]=m,n[3*k+1]=l,n[3*k+2]=p}j=new THREE.DataTexture(n,j,i,THREE.RGBFormat);j.needsUpdate=!0;return j}};THREE.SceneUtils={createMultiMaterialObject:function(g,f){for(var j=new THREE.Object3D,i=0,h=f.length;i<h;i++){j.add(new THREE.Mesh(g,f[i]))}return j},detach:function(e,d,f){e.applyMatrix(d.matrixWorld);d.remove(e);f.add(e)},attach:function(f,e,h){var g=new THREE.Matrix4;g.getInverse(h.matrixWorld);f.applyMatrix(g);e.remove(f);h.add(f)}};THREE.ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:0.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:null}},fragmentShader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",vertexShader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvec3 worldNormal = normalize( mat3( modelMatrix[0].xyz, modelMatrix[1].xyz, modelMatrix[2].xyz ) * normal );\nvec3 I = worldPosition.xyz - cameraPosition;\nvReflect = reflect( I, worldNormal );\nvRefract[0] = refract( normalize( I ), worldNormal, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), worldNormal, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), worldNormal, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), worldNormal ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},normal:{uniforms:THREE.UniformsUtils.merge([THREE.UniformsLib.fog,THREE.UniformsLib.lights,THREE.UniformsLib.shadowmap,{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},enableSpecular:{type:"i",value:0},enableReflection:{type:"i",value:0},enableDisplacement:{type:"i",value:0},tDisplacement:{type:"t",value:null},tDiffuse:{type:"t",value:null},tCube:{type:"t",value:null},tNormal:{type:"t",value:null},tSpecular:{type:"t",value:null},tAO:{type:"t",value:null},uNormalScale:{type:"v2",value:new THREE.Vector2(1,1)},uDisplacementBias:{type:"f",value:0},uDisplacementScale:{type:"f",value:1},uDiffuseColor:{type:"c",value:new THREE.Color(16777215)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(16777215)},uShininess:{type:"f",value:30},uOpacity:{type:"f",value:1},useRefract:{type:"i",value:0},uRefractionRatio:{type:"f",value:0.98},uReflectivity:{type:"f",value:0.5},uOffset:{type:"v2",value:new THREE.Vector2(0,0)},uRepeat:{type:"v2",value:new THREE.Vector2(1,1)},wrapRGB:{type:"v3",value:new THREE.Vector3(1,1,1)}}]),fragmentShader:["uniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform float uOpacity;\nuniform bool enableDiffuse;\nuniform bool enableSpecular;\nuniform bool enableAO;\nuniform bool enableReflection;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tSpecular;\nuniform sampler2D tAO;\nuniform samplerCube tCube;\nuniform vec2 uNormalScale;\nuniform bool useRefract;\nuniform float uRefractionRatio;\nuniform float uReflectivity;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_HEMI_LIGHTS > 0\nuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\nuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\nuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\n#endif\n#if MAX_SPOT_LIGHTS > 0\nuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\nuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\nuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\nuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\nuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\n#endif\n#ifdef WRAP_AROUND\nuniform vec3 wrapRGB;\n#endif\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.shadowmap_pars_fragment,THREE.ShaderChunk.fog_pars_fragment,"void main() {\ngl_FragColor = vec4( vec3( 1.0 ), uOpacity );\nvec3 specularTex = vec3( 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse ) {\n#ifdef GAMMA_INPUT\nvec4 texelColor = texture2D( tDiffuse, vUv );\ntexelColor.xyz *= texelColor.xyz;\ngl_FragColor = gl_FragColor * texelColor;\n#else\ngl_FragColor = gl_FragColor * texture2D( tDiffuse, vUv );\n#endif\n}\nif( enableAO ) {\n#ifdef GAMMA_INPUT\nvec4 aoColor = texture2D( tAO, vUv );\naoColor.xyz *= aoColor.xyz;\ngl_FragColor.xyz = gl_FragColor.xyz * aoColor.xyz;\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * texture2D( tAO, vUv ).xyz;\n#endif\n}\nif( enableSpecular )\nspecularTex = texture2D( tSpecular, vUv ).xyz;\nmat3 tsb = mat3( normalize( vTangent ), normalize( vBinormal ), normalize( vNormal ) );\nvec3 finalNormal = tsb * normalTex;\n#ifdef FLIP_SIDED\nfinalNormal = -finalNormal;\n#endif\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\n#if MAX_POINT_LIGHTS > 0\nvec3 pointDiffuse = vec3( 0.0 );\nvec3 pointSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointVector = lPosition.xyz + vViewPosition.xyz;\nfloat pointDistance = 1.0;\nif ( pointLightDistance[ i ] > 0.0 )\npointDistance = 1.0 - min( ( length( pointVector ) / pointLightDistance[ i ] ), 1.0 );\npointVector = normalize( pointVector );\n#ifdef WRAP_AROUND\nfloat pointDiffuseWeightFull = max( dot( normal, pointVector ), 0.0 );\nfloat pointDiffuseWeightHalf = max( 0.5 * dot( normal, pointVector ) + 0.5, 0.0 );\nvec3 pointDiffuseWeight = mix( vec3 ( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\n#else\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\n#endif\npointDiffuse += pointDistance * pointLightColor[ i ] * uDiffuseColor * pointDiffuseWeight;\nvec3 pointHalfVector = normalize( pointVector + viewPosition );\nfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\nfloat pointSpecularWeight = specularTex.r * max( pow( pointDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( pointVector, pointHalfVector ), 5.0 );\npointSpecular += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * pointDistance * specularNormalization;\n#else\npointSpecular += pointDistance * pointLightColor[ i ] * uSpecularColor * pointSpecularWeight * pointDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_SPOT_LIGHTS > 0\nvec3 spotDiffuse = vec3( 0.0 );\nvec3 spotSpecular = vec3( 0.0 );\nfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\nvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\nvec3 spotVector = lPosition.xyz + vViewPosition.xyz;\nfloat spotDistance = 1.0;\nif ( spotLightDistance[ i ] > 0.0 )\nspotDistance = 1.0 - min( ( length( spotVector ) / spotLightDistance[ i ] ), 1.0 );\nspotVector = normalize( spotVector );\nfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\nif ( spotEffect > spotLightAngleCos[ i ] ) {\nspotEffect = max( pow( spotEffect, spotLightExponent[ i ] ), 0.0 );\n#ifdef WRAP_AROUND\nfloat spotDiffuseWeightFull = max( dot( normal, spotVector ), 0.0 );\nfloat spotDiffuseWeightHalf = max( 0.5 * dot( normal, spotVector ) + 0.5, 0.0 );\nvec3 spotDiffuseWeight = mix( vec3 ( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\n#else\nfloat spotDiffuseWeight = max( dot( normal, spotVector ), 0.0 );\n#endif\nspotDiffuse += spotDistance * spotLightColor[ i ] * uDiffuseColor * spotDiffuseWeight * spotEffect;\nvec3 spotHalfVector = normalize( spotVector + viewPosition );\nfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\nfloat spotSpecularWeight = specularTex.r * max( pow( spotDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( spotVector, spotHalfVector ), 5.0 );\nspotSpecular += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * spotDistance * specularNormalization * spotEffect;\n#else\nspotSpecular += spotDistance * spotLightColor[ i ] * uSpecularColor * spotSpecularWeight * spotDiffuseWeight * spotEffect;\n#endif\n}\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec3 dirDiffuse = vec3( 0.0 );\nvec3 dirSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\n#ifdef WRAP_AROUND\nfloat directionalLightWeightingFull = max( dot( normal, dirVector ), 0.0 );\nfloat directionalLightWeightingHalf = max( 0.5 * dot( normal, dirVector ) + 0.5, 0.0 );\nvec3 dirDiffuseWeight = mix( vec3( directionalLightWeightingFull ), vec3( directionalLightWeightingHalf ), wrapRGB );\n#else\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\n#endif\ndirDiffuse += directionalLightColor[ i ] * uDiffuseColor * dirDiffuseWeight;\nvec3 dirHalfVector = normalize( dirVector + viewPosition );\nfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\nfloat dirSpecularWeight = specularTex.r * max( pow( dirDotNormalHalf, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlick = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( dirVector, dirHalfVector ), 5.0 );\ndirSpecular += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\n#else\ndirSpecular += directionalLightColor[ i ] * uSpecularColor * dirSpecularWeight * dirDiffuseWeight;\n#endif\n}\n#endif\n#if MAX_HEMI_LIGHTS > 0\nvec3 hemiDiffuse  = vec3( 0.0 );\nvec3 hemiSpecular = vec3( 0.0 );\nfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\nvec4 lDirection = viewMatrix * vec4( hemisphereLightDirection[ i ], 0.0 );\nvec3 lVector = normalize( lDirection.xyz );\nfloat dotProduct = dot( normal, lVector );\nfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\nvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\nhemiDiffuse += uDiffuseColor * hemiColor;\nvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\nfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\nfloat hemiSpecularWeightSky = specularTex.r * max( pow( hemiDotNormalHalfSky, uShininess ), 0.0 );\nvec3 lVectorGround = -lVector;\nvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\nfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\nfloat hemiSpecularWeightGround = specularTex.r * max( pow( hemiDotNormalHalfGround, uShininess ), 0.0 );\n#ifdef PHYSICALLY_BASED_SHADING\nfloat dotProductGround = dot( normal, lVectorGround );\nfloat specularNormalization = ( uShininess + 2.0001 ) / 8.0;\nvec3 schlickSky = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVector, hemiHalfVectorSky ), 5.0 );\nvec3 schlickGround = uSpecularColor + vec3( 1.0 - uSpecularColor ) * pow( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 5.0 );\nhemiSpecular += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\n#else\nhemiSpecular += uSpecularColor * hemiColor * ( hemiSpecularWeightSky + hemiSpecularWeightGround ) * hemiDiffuseWeight;\n#endif\n}\n#endif\nvec3 totalDiffuse = vec3( 0.0 );\nvec3 totalSpecular = vec3( 0.0 );\n#if MAX_DIR_LIGHTS > 0\ntotalDiffuse += dirDiffuse;\ntotalSpecular += dirSpecular;\n#endif\n#if MAX_HEMI_LIGHTS > 0\ntotalDiffuse += hemiDiffuse;\ntotalSpecular += hemiSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalDiffuse += pointDiffuse;\ntotalSpecular += pointSpecular;\n#endif\n#if MAX_SPOT_LIGHTS > 0\ntotalDiffuse += spotDiffuse;\ntotalSpecular += spotSpecular;\n#endif\n#ifdef METAL\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor + totalSpecular );\n#else\ngl_FragColor.xyz = gl_FragColor.xyz * ( totalDiffuse + ambientLightColor * uAmbientColor ) + totalSpecular;\n#endif\nif ( enableReflection ) {\nvec3 vReflect;\nvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\nif ( useRefract ) {\nvReflect = refract( cameraToVertex, normal, uRefractionRatio );\n} else {\nvReflect = reflect( cameraToVertex, normal );\n}\nvec4 cubeColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\n#ifdef GAMMA_INPUT\ncubeColor.xyz *= cubeColor.xyz;\n#endif\ngl_FragColor.xyz = mix( gl_FragColor.xyz, cubeColor.xyz, specularTex.r * uReflectivity );\n}",THREE.ShaderChunk.shadowmap_fragment,THREE.ShaderChunk.linear_to_gamma_fragment,THREE.ShaderChunk.fog_fragment,"}"].join("\n"),vertexShader:["attribute vec4 tangent;\nuniform vec2 uOffset;\nuniform vec2 uRepeat;\nuniform bool enableDisplacement;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vWorldPosition;\nvarying vec3 vViewPosition;",THREE.ShaderChunk.skinning_pars_vertex,THREE.ShaderChunk.shadowmap_pars_vertex,"void main() {",THREE.ShaderChunk.skinbase_vertex,THREE.ShaderChunk.skinnormal_vertex,"#ifdef USE_SKINNING\nvNormal = normalize( normalMatrix * skinnedNormal.xyz );\nvec4 skinnedTangent = skinMatrix * vec4( tangent.xyz, 0.0 );\nvTangent = normalize( normalMatrix * skinnedTangent.xyz );\n#else\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\n#endif\nvBinormal = normalize( cross( vNormal, vTangent ) * tangent.w );\nvUv = uv * uRepeat + uOffset;\nvec3 displacedPosition;\n#ifdef VERTEX_TEXTURES\nif ( enableDisplacement ) {\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\ndisplacedPosition = position + normalize( normal ) * df;\n} else {\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n}\n#else\n#ifdef USE_SKINNING\nvec4 skinVertex = vec4( position, 1.0 );\nvec4 skinned  = boneMatX * skinVertex * skinWeight.x;\nskinned \t  += boneMatY * skinVertex * skinWeight.y;\ndisplacedPosition  = skinned.xyz;\n#else\ndisplacedPosition = position;\n#endif\n#endif\nvec4 mvPosition = modelViewMatrix * vec4( displacedPosition, 1.0 );\nvec4 worldPosition = modelMatrix * vec4( displacedPosition, 1.0 );\ngl_Position = projectionMatrix * mvPosition;\nvWorldPosition = worldPosition.xyz;\nvViewPosition = -mvPosition.xyz;\n#ifdef USE_SHADOWMAP\nfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\nvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\n}\n#endif\n}"].join("\n")},cube:{uniforms:{tCube:{type:"t",value:null},tFlip:{type:"f",value:-1}},vertexShader:"varying vec3 vWorldPosition;\nvoid main() {\nvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\nvWorldPosition = worldPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragmentShader:"uniform samplerCube tCube;\nuniform float tFlip;\nvarying vec3 vWorldPosition;\nvoid main() {\ngl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\n}"}}};THREE.FontUtils={faces:{},face:"helvetiker",weight:"normal",style:"normal",size:150,divisions:10,getFace:function(){return this.faces[this.face][this.weight][this.style]},loadFace:function(d){var c=d.familyName.toLowerCase();this.faces[c]=this.faces[c]||{};this.faces[c][d.cssFontWeight]=this.faces[c][d.cssFontWeight]||{};this.faces[c][d.cssFontWeight][d.cssFontStyle]=d;return this.faces[c][d.cssFontWeight][d.cssFontStyle]=d},drawText:function(j){for(var i=this.getFace(),p=this.size/i.resolution,o=0,n=String(j).split(""),m=n.length,l=[],j=0;j<m;j++){var k=new THREE.Path,k=this.extractGlyphPoints(n[j],i,p,o,k),o=o+k.offset;l.push(k.path)}return{paths:l,offset:o/2}},extractGlyphPoints:function(L,K,J,I,H){var G=[],F,E,D,C,y,x,z,t,o,A,w,j=K.glyphs[L]||K.glyphs["?"];if(j){if(j.o){K=j._cachedOutline||(j._cachedOutline=j.o.split(" "));C=K.length;for(L=0;L<C;){switch(D=K[L++],D){case"m":D=K[L++]*J+I;y=K[L++]*J;H.moveTo(D,y);break;case"l":D=K[L++]*J+I;y=K[L++]*J;H.lineTo(D,y);break;case"q":D=K[L++]*J+I;y=K[L++]*J;t=K[L++]*J+I;o=K[L++]*J;H.quadraticCurveTo(t,o,D,y);if(F=G[G.length-1]){x=F.x;z=F.y;F=1;for(E=this.divisions;F<=E;F++){var v=F/E;THREE.Shape.Utils.b2(v,x,t,D);THREE.Shape.Utils.b2(v,z,o,y)}}break;case"b":if(D=K[L++]*J+I,y=K[L++]*J,t=K[L++]*J+I,o=K[L++]*-J,A=K[L++]*J+I,w=K[L++]*-J,H.bezierCurveTo(D,y,t,o,A,w),F=G[G.length-1]){x=F.x;z=F.y;F=1;for(E=this.divisions;F<=E;F++){v=F/E,THREE.Shape.Utils.b3(v,x,t,A,D),THREE.Shape.Utils.b3(v,z,o,w,y)}}}}}return{offset:j.ha*J,path:H}}}};THREE.FontUtils.generateShapes=function(h,g){var g=g||{},l=void 0!==g.curveSegments?g.curveSegments:4,k=void 0!==g.font?g.font:"helvetiker",j=void 0!==g.weight?g.weight:"normal",i=void 0!==g.style?g.style:"normal";THREE.FontUtils.size=void 0!==g.size?g.size:100;THREE.FontUtils.divisions=l;THREE.FontUtils.face=k;THREE.FontUtils.weight=j;THREE.FontUtils.style=i;l=THREE.FontUtils.drawText(h).paths;k=[];j=0;for(i=l.length;j<i;j++){Array.prototype.push.apply(k,l[j].toShapes())}return k};(function(d){var c=function(i){for(var h=i.length,l=0,k=h-1,j=0;j<h;k=j++){l+=i[k].x*i[j].y-i[j].x*i[k].y}return 0.5*l};d.Triangulate=function(af,ae){var ad=af.length;if(3>ad){return null}var ac=[],ab=[],aa=[],Z,Y,V;if(0<c(af)){for(Y=0;Y<ad;Y++){ab[Y]=Y}}else{for(Y=0;Y<ad;Y++){ab[Y]=ad-1-Y}}var U=2*ad;for(Y=ad-1;2<ad;){if(0>=U--){console.log("Warning, unable to triangulate polygon!");break}Z=Y;ad<=Z&&(Z=0);Y=Z+1;ad<=Y&&(Y=0);V=Y+1;ad<=V&&(V=0);var W;af:{var Q=W=void 0,O=void 0,X=void 0,S=void 0,K=void 0,R=void 0,w=void 0,M=void 0,Q=af[ab[Z]].x,O=af[ab[Z]].y,X=af[ab[Y]].x,S=af[ab[Y]].y,K=af[ab[V]].x,R=af[ab[V]].y;if(1e-10>(X-Q)*(R-O)-(S-O)*(K-Q)){W=!1}else{var J=void 0,P=void 0,T=void 0,o=void 0,y=void 0,E=void 0,v=void 0,b=void 0,N=void 0,j=void 0,N=b=v=M=w=void 0,J=K-X,P=R-S,T=Q-K,o=O-R,y=X-Q,E=S-O;for(W=0;W<ad;W++){if(!(W===Z||W===Y||W===V)){if(w=af[ab[W]].x,M=af[ab[W]].y,v=w-Q,b=M-O,N=w-X,j=M-S,w-=K,M-=R,N=J*j-P*N,v=y*b-E*v,b=T*M-o*w,0<=N&&0<=b&&0<=v){W=!1;break af}}}W=!0}}if(W){ac.push([af[ab[Z]],af[ab[Y]],af[ab[V]]]);aa.push([ab[Z],ab[Y],ab[V]]);Z=Y;for(V=Y+1;V<ad;Z++,V++){ab[Z]=ab[V]}ad--;U=2*ad}}return ae?aa:ac};d.Triangulate.area=c;return d})(THREE.FontUtils);self._typeface_js={faces:THREE.FontUtils.faces,loadFace:THREE.FontUtils.loadFace};THREE.Curve=function(){};THREE.Curve.prototype.getPoint=function(){console.log("Warning, getPoint() not implemented!");return null};THREE.Curve.prototype.getPointAt=function(b){b=this.getUtoTmapping(b);return this.getPoint(b)};THREE.Curve.prototype.getPoints=function(e){e||(e=5);var d,f=[];for(d=0;d<=e;d++){f.push(this.getPoint(d/e))}return f};THREE.Curve.prototype.getSpacedPoints=function(e){e||(e=5);var d,f=[];for(d=0;d<=e;d++){f.push(this.getPointAt(d/e))}return f};THREE.Curve.prototype.getLength=function(){var b=this.getLengths();return b[b.length-1]};THREE.Curve.prototype.getLengths=function(h){h||(h=this.__arcLengthDivisions?this.__arcLengthDivisions:200);if(this.cacheArcLengths&&this.cacheArcLengths.length==h+1&&!this.needsUpdate){return this.cacheArcLengths}this.needsUpdate=!1;var g=[],l,k=this.getPoint(0),j,i=0;g.push(0);for(j=1;j<=h;j++){l=this.getPoint(j/h),i+=l.distanceTo(k),g.push(i),k=l}return this.cacheArcLengths=g};THREE.Curve.prototype.updateArcLengths=function(){this.needsUpdate=!0;this.getLengths()};THREE.Curve.prototype.getUtoTmapping=function(r,q){var p=this.getLengths(),o=0,n=p.length,m;m=q?q:r*p[n-1];for(var l=0,k=n-1,j;l<=k;){if(o=Math.floor(l+(k-l)/2),j=p[o]-m,0>j){l=o+1}else{if(0<j){k=o-1}else{k=o;break}}}o=k;if(p[o]==m){return o/(n-1)}l=p[o];return p=(o+(m-l)/(p[o+1]-l))/(n-1)};THREE.Curve.prototype.getTangent=function(d){var c=d-0.0001,d=d+0.0001;0>c&&(c=0);1<d&&(d=1);c=this.getPoint(c);return this.getPoint(d).clone().subSelf(c).normalize()};THREE.Curve.prototype.getTangentAt=function(b){b=this.getUtoTmapping(b);return this.getTangent(b)};THREE.LineCurve=function(d,c){this.v1=d;this.v2=c};THREE.LineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.LineCurve.prototype.getPoint=function(d){var c=this.v2.clone().subSelf(this.v1);c.multiplyScalar(d).addSelf(this.v1);return c};THREE.LineCurve.prototype.getPointAt=function(b){return this.getPoint(b)};THREE.LineCurve.prototype.getTangent=function(){return this.v2.clone().subSelf(this.v1).normalize()};THREE.QuadraticBezierCurve=function(e,d,f){this.v0=e;this.v1=d;this.v2=f};THREE.QuadraticBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.QuadraticBezierCurve.prototype.getPoint=function(d){var c;c=THREE.Shape.Utils.b2(d,this.v0.x,this.v1.x,this.v2.x);d=THREE.Shape.Utils.b2(d,this.v0.y,this.v1.y,this.v2.y);return new THREE.Vector2(c,d)};THREE.QuadraticBezierCurve.prototype.getTangent=function(d){var c;c=THREE.Curve.Utils.tangentQuadraticBezier(d,this.v0.x,this.v1.x,this.v2.x);d=THREE.Curve.Utils.tangentQuadraticBezier(d,this.v0.y,this.v1.y,this.v2.y);c=new THREE.Vector2(c,d);c.normalize();return c};THREE.CubicBezierCurve=function(f,e,h,g){this.v0=f;this.v1=e;this.v2=h;this.v3=g};THREE.CubicBezierCurve.prototype=Object.create(THREE.Curve.prototype);THREE.CubicBezierCurve.prototype.getPoint=function(d){var c;c=THREE.Shape.Utils.b3(d,this.v0.x,this.v1.x,this.v2.x,this.v3.x);d=THREE.Shape.Utils.b3(d,this.v0.y,this.v1.y,this.v2.y,this.v3.y);return new THREE.Vector2(c,d)};THREE.CubicBezierCurve.prototype.getTangent=function(d){var c;c=THREE.Curve.Utils.tangentCubicBezier(d,this.v0.x,this.v1.x,this.v2.x,this.v3.x);d=THREE.Curve.Utils.tangentCubicBezier(d,this.v0.y,this.v1.y,this.v2.y,this.v3.y);c=new THREE.Vector2(c,d);c.normalize();return c};THREE.SplineCurve=function(b){this.points=void 0==b?[]:b};THREE.SplineCurve.prototype=Object.create(THREE.Curve.prototype);THREE.SplineCurve.prototype.getPoint=function(g){var f=new THREE.Vector2,j=[],i=this.points,h;h=(i.length-1)*g;g=Math.floor(h);h-=g;j[0]=0==g?g:g-1;j[1]=g;j[2]=g>i.length-2?i.length-1:g+1;j[3]=g>i.length-3?i.length-1:g+2;f.x=THREE.Curve.Utils.interpolate(i[j[0]].x,i[j[1]].x,i[j[2]].x,i[j[3]].x,h);f.y=THREE.Curve.Utils.interpolate(i[j[0]].y,i[j[1]].y,i[j[2]].y,i[j[3]].y,h);return f};THREE.EllipseCurve=function(i,h,n,m,l,k,j){this.aX=i;this.aY=h;this.xRadius=n;this.yRadius=m;this.aStartAngle=l;this.aEndAngle=k;this.aClockwise=j};THREE.EllipseCurve.prototype=Object.create(THREE.Curve.prototype);THREE.EllipseCurve.prototype.getPoint=function(d){var c=this.aEndAngle-this.aStartAngle;this.aClockwise||(d=1-d);c=this.aStartAngle+d*c;d=this.aX+this.xRadius*Math.cos(c);c=this.aY+this.yRadius*Math.sin(c);return new THREE.Vector2(d,c)};THREE.ArcCurve=function(h,g,l,k,j,i){THREE.EllipseCurve.call(this,h,g,l,l,k,j,i)};THREE.ArcCurve.prototype=Object.create(THREE.EllipseCurve.prototype);THREE.Curve.Utils={tangentQuadraticBezier:function(f,e,h,g){return 2*(1-f)*(h-e)+2*f*(g-h)},tangentCubicBezier:function(g,f,j,i,h){return -3*f*(1-g)*(1-g)+3*j*(1-g)*(1-g)-6*g*j*(1-g)+6*g*i*(1-g)-3*g*g*i+3*g*g*h},tangentSpline:function(b){return 6*b*b-6*b+(3*b*b-4*b+1)+(-6*b*b+6*b)+(3*b*b-2*b)},interpolate:function(h,g,l,k,j){var h=0.5*(l-h),k=0.5*(k-g),i=j*j;return(2*g-2*l+h+k)*j*i+(-3*g+3*l-2*h-k)*i+h*j+g}};THREE.Curve.create=function(d,c){d.prototype=Object.create(THREE.Curve.prototype);d.prototype.getPoint=c;return d};THREE.LineCurve3=THREE.Curve.create(function(d,c){this.v1=d;this.v2=c},function(d){var c=new THREE.Vector3;c.sub(this.v2,this.v1);c.multiplyScalar(d);c.addSelf(this.v1);return c});THREE.QuadraticBezierCurve3=THREE.Curve.create(function(e,d,f){this.v0=e;this.v1=d;this.v2=f},function(e){var d,f;d=THREE.Shape.Utils.b2(e,this.v0.x,this.v1.x,this.v2.x);f=THREE.Shape.Utils.b2(e,this.v0.y,this.v1.y,this.v2.y);e=THREE.Shape.Utils.b2(e,this.v0.z,this.v1.z,this.v2.z);return new THREE.Vector3(d,f,e)});THREE.CubicBezierCurve3=THREE.Curve.create(function(f,e,h,g){this.v0=f;this.v1=e;this.v2=h;this.v3=g},function(e){var d,f;d=THREE.Shape.Utils.b3(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x);f=THREE.Shape.Utils.b3(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y);e=THREE.Shape.Utils.b3(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z);return new THREE.Vector3(d,f,e)});THREE.SplineCurve3=THREE.Curve.create(function(b){this.points=void 0==b?[]:b},function(i){var h=new THREE.Vector3,n=[],m=this.points,l,i=(m.length-1)*i;l=Math.floor(i);i-=l;n[0]=0==l?l:l-1;n[1]=l;n[2]=l>m.length-2?m.length-1:l+1;n[3]=l>m.length-3?m.length-1:l+2;l=m[n[0]];var k=m[n[1]],j=m[n[2]],n=m[n[3]];h.x=THREE.Curve.Utils.interpolate(l.x,k.x,j.x,n.x,i);h.y=THREE.Curve.Utils.interpolate(l.y,k.y,j.y,n.y,i);h.z=THREE.Curve.Utils.interpolate(l.z,k.z,j.z,n.z,i);return h});THREE.ClosedSplineCurve3=THREE.Curve.create(function(b){this.points=void 0==b?[]:b},function(g){var f=new THREE.Vector3,j=[],i=this.points,h;h=(i.length-0)*g;g=Math.floor(h);h-=g;g+=0<g?0:(Math.floor(Math.abs(g)/i.length)+1)*i.length;j[0]=(g-1)%i.length;j[1]=g%i.length;j[2]=(g+1)%i.length;j[3]=(g+2)%i.length;f.x=THREE.Curve.Utils.interpolate(i[j[0]].x,i[j[1]].x,i[j[2]].x,i[j[3]].x,h);f.y=THREE.Curve.Utils.interpolate(i[j[0]].y,i[j[1]].y,i[j[2]].y,i[j[3]].y,h);f.z=THREE.Curve.Utils.interpolate(i[j[0]].z,i[j[1]].z,i[j[2]].z,i[j[3]].z,h);return f});THREE.CurvePath=function(){this.curves=[];this.bends=[];this.autoClose=!1};THREE.CurvePath.prototype=Object.create(THREE.Curve.prototype);THREE.CurvePath.prototype.add=function(b){this.curves.push(b)};THREE.CurvePath.prototype.checkConnection=function(){};THREE.CurvePath.prototype.closePath=function(){var d=this.curves[0].getPoint(0),c=this.curves[this.curves.length-1].getPoint(1);d.equals(c)||this.curves.push(new THREE.LineCurve(c,d))};THREE.CurvePath.prototype.getPoint=function(e){for(var d=e*this.getLength(),f=this.getCurveLengths(),e=0;e<f.length;){if(f[e]>=d){return d=f[e]-d,e=this.curves[e],d=1-d/e.getLength(),e.getPointAt(d)}e++}return null};THREE.CurvePath.prototype.getLength=function(){var b=this.getCurveLengths();return b[b.length-1]};THREE.CurvePath.prototype.getCurveLengths=function(){if(this.cacheLengths&&this.cacheLengths.length==this.curves.length){return this.cacheLengths}var f=[],e=0,h,g=this.curves.length;for(h=0;h<g;h++){e+=this.curves[h].getLength(),f.push(e)}return this.cacheLengths=f};THREE.CurvePath.prototype.getBoundingBox=function(){var x=this.getPoints(),w,v,u,t,s,r;w=v=Number.NEGATIVE_INFINITY;t=s=Number.POSITIVE_INFINITY;var q,o,m,l,j=x[0] instanceof THREE.Vector3;l=j?new THREE.Vector3:new THREE.Vector2;o=0;for(m=x.length;o<m;o++){q=x[o],q.x>w?w=q.x:q.x<t&&(t=q.x),q.y>v?v=q.y:q.y<s&&(s=q.y),j&&(q.z>u?u=q.z:q.z<r&&(r=q.z)),l.addSelf(q)}x={minX:t,minY:s,maxX:w,maxY:v,centroid:l.divideScalar(m)};j&&(x.maxZ=u,x.minZ=r);return x};THREE.CurvePath.prototype.createPointsGeometry=function(b){b=this.getPoints(b,!0);return this.createGeometry(b)};THREE.CurvePath.prototype.createSpacedPointsGeometry=function(b){b=this.getSpacedPoints(b,!0);return this.createGeometry(b)};THREE.CurvePath.prototype.createGeometry=function(e){for(var d=new THREE.Geometry,f=0;f<e.length;f++){d.vertices.push(new THREE.Vector3(e[f].x,e[f].y,e[f].z||0))}return d};THREE.CurvePath.prototype.addWrapPath=function(b){this.bends.push(b)};THREE.CurvePath.prototype.getTransformedPoints=function(g,f){var j=this.getPoints(g),i,h;f||(f=this.bends);i=0;for(h=f.length;i<h;i++){j=this.getWrapPoints(j,f[i])}return j};THREE.CurvePath.prototype.getTransformedSpacedPoints=function(g,f){var j=this.getSpacedPoints(g),i,h;f||(f=this.bends);i=0;for(h=f.length;i<h;i++){j=this.getWrapPoints(j,f[i])}return j};THREE.CurvePath.prototype.getWrapPoints=function(r,q){var p=this.getBoundingBox(),o,n,m,l,k,j;o=0;for(n=r.length;o<n;o++){m=r[o],l=m.x,k=m.y,j=l/p.maxX,j=q.getUtoTmapping(j,l),l=q.getPoint(j),k=q.getNormalVector(j).multiplyScalar(k),m.x=l.x+k.x,m.y=l.y+k.y}return r};THREE.Gyroscope=function(){THREE.Object3D.call(this)};THREE.Gyroscope.prototype=Object.create(THREE.Object3D.prototype);THREE.Gyroscope.prototype.updateMatrixWorld=function(e){this.matrixAutoUpdate&&this.updateMatrix();if(this.matrixWorldNeedsUpdate||e){this.parent?(this.matrixWorld.multiply(this.parent.matrixWorld,this.matrix),this.matrixWorld.decompose(this.translationWorld,this.rotationWorld,this.scaleWorld),this.matrix.decompose(this.translationObject,this.rotationObject,this.scaleObject),this.matrixWorld.compose(this.translationWorld,this.rotationObject,this.scaleWorld)):this.matrixWorld.copy(this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0}for(var d=0,f=this.children.length;d<f;d++){this.children[d].updateMatrixWorld(e)}};THREE.Gyroscope.prototype.translationWorld=new THREE.Vector3;THREE.Gyroscope.prototype.translationObject=new THREE.Vector3;THREE.Gyroscope.prototype.rotationWorld=new THREE.Quaternion;THREE.Gyroscope.prototype.rotationObject=new THREE.Quaternion;THREE.Gyroscope.prototype.scaleWorld=new THREE.Vector3;THREE.Gyroscope.prototype.scaleObject=new THREE.Vector3;THREE.Path=function(b){THREE.CurvePath.call(this);this.actions=[];b&&this.fromPoints(b)};THREE.Path.prototype=Object.create(THREE.CurvePath.prototype);THREE.PathActions={MOVE_TO:"moveTo",LINE_TO:"lineTo",QUADRATIC_CURVE_TO:"quadraticCurveTo",BEZIER_CURVE_TO:"bezierCurveTo",CSPLINE_THRU:"splineThru",ARC:"arc",ELLIPSE:"ellipse"};THREE.Path.prototype.fromPoints=function(e){this.moveTo(e[0].x,e[0].y);for(var d=1,f=e.length;d<f;d++){this.lineTo(e[d].x,e[d].y)}};THREE.Path.prototype.moveTo=function(e,d){var f=Array.prototype.slice.call(arguments);this.actions.push({action:THREE.PathActions.MOVE_TO,args:f})};THREE.Path.prototype.lineTo=function(f,e){var h=Array.prototype.slice.call(arguments),g=this.actions[this.actions.length-1].args,g=new THREE.LineCurve(new THREE.Vector2(g[g.length-2],g[g.length-1]),new THREE.Vector2(f,e));this.curves.push(g);this.actions.push({action:THREE.PathActions.LINE_TO,args:h})};THREE.Path.prototype.quadraticCurveTo=function(h,g,l,k){var j=Array.prototype.slice.call(arguments),i=this.actions[this.actions.length-1].args,i=new THREE.QuadraticBezierCurve(new THREE.Vector2(i[i.length-2],i[i.length-1]),new THREE.Vector2(h,g),new THREE.Vector2(l,k));this.curves.push(i);this.actions.push({action:THREE.PathActions.QUADRATIC_CURVE_TO,args:j})};THREE.Path.prototype.bezierCurveTo=function(j,i,p,o,n,m){var l=Array.prototype.slice.call(arguments),k=this.actions[this.actions.length-1].args,k=new THREE.CubicBezierCurve(new THREE.Vector2(k[k.length-2],k[k.length-1]),new THREE.Vector2(j,i),new THREE.Vector2(p,o),new THREE.Vector2(n,m));this.curves.push(k);this.actions.push({action:THREE.PathActions.BEZIER_CURVE_TO,args:l})};THREE.Path.prototype.splineThru=function(e){var d=Array.prototype.slice.call(arguments),f=this.actions[this.actions.length-1].args,f=[new THREE.Vector2(f[f.length-2],f[f.length-1])];Array.prototype.push.apply(f,e);f=new THREE.SplineCurve(f);this.curves.push(f);this.actions.push({action:THREE.PathActions.CSPLINE_THRU,args:d})};THREE.Path.prototype.arc=function(i,h,n,m,l,k){var j=this.actions[this.actions.length-1].args;this.absarc(i+j[j.length-2],h+j[j.length-1],n,m,l,k)};THREE.Path.prototype.absarc=function(h,g,l,k,j,i){this.absellipse(h,g,l,l,k,j,i)};THREE.Path.prototype.ellipse=function(j,i,p,o,n,m,l){var k=this.actions[this.actions.length-1].args;this.absellipse(j+k[k.length-2],i+k[k.length-1],p,o,n,m,l)};THREE.Path.prototype.absellipse=function(r,q,p,o,n,m,l){var k=Array.prototype.slice.call(arguments),j=new THREE.EllipseCurve(r,q,p,o,n,m,l);this.curves.push(j);j=j.getPoint(l?1:0);k.push(j.x);k.push(j.y);this.actions.push({action:THREE.PathActions.ELLIPSE,args:k})};THREE.Path.prototype.getSpacedPoints=function(e){e||(e=40);for(var d=[],f=0;f<e;f++){d.push(this.getPoint(f/e))}return d};THREE.Path.prototype.getPoints=function(E,D){if(this.useSpacedPoints){return console.log("tata"),this.getSpacedPoints(E,D)}var E=E||12,C=[],B,A,z,y,x,w,v,q,o,t,j,F,u;B=0;for(A=this.actions.length;B<A;B++){switch(z=this.actions[B],y=z.action,z=z.args,y){case THREE.PathActions.MOVE_TO:C.push(new THREE.Vector2(z[0],z[1]));break;case THREE.PathActions.LINE_TO:C.push(new THREE.Vector2(z[0],z[1]));break;case THREE.PathActions.QUADRATIC_CURVE_TO:x=z[2];w=z[3];o=z[0];t=z[1];0<C.length?(y=C[C.length-1],j=y.x,F=y.y):(y=this.actions[B-1].args,j=y[y.length-2],F=y[y.length-1]);for(z=1;z<=E;z++){u=z/E,y=THREE.Shape.Utils.b2(u,j,o,x),u=THREE.Shape.Utils.b2(u,F,t,w),C.push(new THREE.Vector2(y,u))}break;case THREE.PathActions.BEZIER_CURVE_TO:x=z[4];w=z[5];o=z[0];t=z[1];v=z[2];q=z[3];0<C.length?(y=C[C.length-1],j=y.x,F=y.y):(y=this.actions[B-1].args,j=y[y.length-2],F=y[y.length-1]);for(z=1;z<=E;z++){u=z/E,y=THREE.Shape.Utils.b3(u,j,o,v,x),u=THREE.Shape.Utils.b3(u,F,t,q,w),C.push(new THREE.Vector2(y,u))}break;case THREE.PathActions.CSPLINE_THRU:y=this.actions[B-1].args;u=[new THREE.Vector2(y[y.length-2],y[y.length-1])];y=E*z[0].length;u=u.concat(z[0]);u=new THREE.SplineCurve(u);for(z=1;z<=y;z++){C.push(u.getPointAt(z/y))}break;case THREE.PathActions.ARC:x=z[0];w=z[1];t=z[2];v=z[3];y=z[4];o=!!z[5];j=y-v;F=2*E;for(z=1;z<=F;z++){u=z/F,o||(u=1-u),u=v+u*j,y=x+t*Math.cos(u),u=w+t*Math.sin(u),C.push(new THREE.Vector2(y,u))}break;case THREE.PathActions.ELLIPSE:x=z[0];w=z[1];t=z[2];q=z[3];v=z[4];y=z[5];o=!!z[6];j=y-v;F=2*E;for(z=1;z<=F;z++){u=z/F,o||(u=1-u),u=v+u*j,y=x+t*Math.cos(u),u=w+q*Math.sin(u),C.push(new THREE.Vector2(y,u))}}}B=C[C.length-1];1e-10>Math.abs(B.x-C[0].x)&&1e-10>Math.abs(B.y-C[0].y)&&C.splice(C.length-1,1);D&&C.push(C[0]);return C};THREE.Path.prototype.toShapes=function(){var i,h,n,m,l=[],k=new THREE.Path;i=0;for(h=this.actions.length;i<h;i++){n=this.actions[i],m=n.args,n=n.action,n==THREE.PathActions.MOVE_TO&&0!=k.actions.length&&(l.push(k),k=new THREE.Path),k[n].apply(k,m)}0!=k.actions.length&&l.push(k);if(0==l.length){return[]}var j;m=[];i=!THREE.Shape.Utils.isClockWise(l[0].getPoints());if(1==l.length){return k=l[0],j=new THREE.Shape,j.actions=k.actions,j.curves=k.curves,m.push(j),m}if(i){j=new THREE.Shape;i=0;for(h=l.length;i<h;i++){k=l[i],THREE.Shape.Utils.isClockWise(k.getPoints())?(j.actions=k.actions,j.curves=k.curves,m.push(j),j=new THREE.Shape):j.holes.push(k)}}else{i=0;for(h=l.length;i<h;i++){k=l[i],THREE.Shape.Utils.isClockWise(k.getPoints())?(j&&m.push(j),j=new THREE.Shape,j.actions=k.actions,j.curves=k.curves):j.holes.push(k)}m.push(j)}return m};THREE.Shape=function(){THREE.Path.apply(this,arguments);this.holes=[]};THREE.Shape.prototype=Object.create(THREE.Path.prototype);THREE.Shape.prototype.extrude=function(b){return new THREE.ExtrudeGeometry(this,b)};THREE.Shape.prototype.makeGeometry=function(b){return new THREE.ShapeGeometry(this,b)};THREE.Shape.prototype.getPointsHoles=function(f){var e,h=this.holes.length,g=[];for(e=0;e<h;e++){g[e]=this.holes[e].getTransformedPoints(f,this.bends)}return g};THREE.Shape.prototype.getSpacedPointsHoles=function(f){var e,h=this.holes.length,g=[];for(e=0;e<h;e++){g[e]=this.holes[e].getTransformedSpacedPoints(f,this.bends)}return g};THREE.Shape.prototype.extractAllPoints=function(b){return{shape:this.getTransformedPoints(b),holes:this.getPointsHoles(b)}};THREE.Shape.prototype.extractPoints=function(b){return this.useSpacedPoints?this.extractAllSpacedPoints(b):this.extractAllPoints(b)};THREE.Shape.prototype.extractAllSpacedPoints=function(b){return{shape:this.getTransformedSpacedPoints(b),holes:this.getSpacedPointsHoles(b)}};THREE.Shape.Utils={removeHoles:function(G,F){var E=G.concat(),D=E.concat(),C,B,A,z,y,x,u,t,v,j,H=[];for(y=0;y<F.length;y++){x=F[y];Array.prototype.push.apply(D,x);B=Number.POSITIVE_INFINITY;for(C=0;C<x.length;C++){v=x[C];j=[];for(t=0;t<E.length;t++){u=E[t],u=v.distanceToSquared(u),j.push(u),u<B&&(B=u,A=C,z=t)}}C=0<=z-1?z-1:E.length-1;B=0<=A-1?A-1:x.length-1;var w=[x[A],E[z],E[C]];t=THREE.FontUtils.Triangulate.area(w);var o=[x[A],x[B],E[z]];v=THREE.FontUtils.Triangulate.area(o);j=z;u=A;z+=1;A+=-1;0>z&&(z+=E.length);z%=E.length;0>A&&(A+=x.length);A%=x.length;C=0<=z-1?z-1:E.length-1;B=0<=A-1?A-1:x.length-1;w=[x[A],E[z],E[C]];w=THREE.FontUtils.Triangulate.area(w);o=[x[A],x[B],E[z]];o=THREE.FontUtils.Triangulate.area(o);t+v>w+o&&(z=j,A=u,0>z&&(z+=E.length),z%=E.length,0>A&&(A+=x.length),A%=x.length,C=0<=z-1?z-1:E.length-1,B=0<=A-1?A-1:x.length-1);t=E.slice(0,z);v=E.slice(z);j=x.slice(A);u=x.slice(0,A);B=[x[A],x[B],E[z]];H.push([x[A],E[z],E[C]]);H.push(B);E=t.concat(j).concat(u).concat(v)}return{shape:E,isolatedPts:H,allpoints:D}},triangulateShape:function(t,s){var r=THREE.Shape.Utils.removeHoles(t,s),q=r.allpoints,p=r.isolatedPts,r=THREE.FontUtils.Triangulate(r.shape,!1),o,n,m,l,j={};o=0;for(n=q.length;o<n;o++){l=q[o].x+":"+q[o].y,void 0!==j[l]&&console.log("Duplicate point",l),j[l]=o}o=0;for(n=r.length;o<n;o++){m=r[o];for(q=0;3>q;q++){l=m[q].x+":"+m[q].y,l=j[l],void 0!==l&&(m[q]=l)}}o=0;for(n=p.length;o<n;o++){m=p[o];for(q=0;3>q;q++){l=m[q].x+":"+m[q].y,l=j[l],void 0!==l&&(m[q]=l)}}return r.concat(p)},isClockWise:function(b){return 0>THREE.FontUtils.Triangulate.area(b)},b2p0:function(e,d){var f=1-e;return f*f*d},b2p1:function(d,c){return 2*(1-d)*d*c},b2p2:function(d,c){return d*d*c},b2:function(f,e,h,g){return this.b2p0(f,e)+this.b2p1(f,h)+this.b2p2(f,g)},b3p0:function(e,d){var f=1-e;return f*f*f*d},b3p1:function(e,d){var f=1-e;return 3*f*f*e*d},b3p2:function(d,c){return 3*(1-d)*d*d*c},b3p3:function(d,c){return d*d*d*c},b3:function(g,f,j,i,h){return this.b3p0(g,f)+this.b3p1(g,j)+this.b3p2(g,i)+this.b3p3(g,h)}};THREE.AnimationHandler=function(){var f=[],e={},h={update:function(a){for(var d=0;d<f.length;d++){f[d].update(a)}},addToUpdate:function(a){-1===f.indexOf(a)&&f.push(a)},removeFromUpdate:function(a){a=f.indexOf(a);-1!==a&&f.splice(a,1)},add:function(b){void 0!==e[b.name]&&console.log("THREE.AnimationHandler.add: Warning! "+b.name+" already exists in library. Overwriting.");e[b.name]=b;if(!0!==b.initialized){for(var q=0;q<b.hierarchy.length;q++){for(var o=0;o<b.hierarchy[q].keys.length;o++){if(0>b.hierarchy[q].keys[o].time&&(b.hierarchy[q].keys[o].time=0),void 0!==b.hierarchy[q].keys[o].rot&&!(b.hierarchy[q].keys[o].rot instanceof THREE.Quaternion)){var m=b.hierarchy[q].keys[o].rot;b.hierarchy[q].keys[o].rot=new THREE.Quaternion(m[0],m[1],m[2],m[3])}}if(b.hierarchy[q].keys.length&&void 0!==b.hierarchy[q].keys[0].morphTargets){m={};for(o=0;o<b.hierarchy[q].keys.length;o++){for(var l=0;l<b.hierarchy[q].keys[o].morphTargets.length;l++){var j=b.hierarchy[q].keys[o].morphTargets[l];m[j]=-1}}b.hierarchy[q].usedMorphTargets=m;for(o=0;o<b.hierarchy[q].keys.length;o++){var p={};for(j in m){for(l=0;l<b.hierarchy[q].keys[o].morphTargets.length;l++){if(b.hierarchy[q].keys[o].morphTargets[l]===j){p[j]=b.hierarchy[q].keys[o].morphTargetsInfluences[l];break}}l===b.hierarchy[q].keys[o].morphTargets.length&&(p[j]=0)}b.hierarchy[q].keys[o].morphTargetsInfluences=p}}for(o=1;o<b.hierarchy[q].keys.length;o++){b.hierarchy[q].keys[o].time===b.hierarchy[q].keys[o-1].time&&(b.hierarchy[q].keys.splice(o,1),o--)}for(o=0;o<b.hierarchy[q].keys.length;o++){b.hierarchy[q].keys[o].index=o}}o=parseInt(b.length*b.fps,10);b.JIT={};b.JIT.hierarchy=[];for(q=0;q<b.hierarchy.length;q++){b.JIT.hierarchy.push(Array(o))}b.initialized=!0}},get:function(b){if("string"===typeof b){if(e[b]){return e[b]}console.log("THREE.AnimationHandler.get: Couldn't find animation "+b);return null}},parse:function(i){var d=[];if(i instanceof THREE.SkinnedMesh){for(var j=0;j<i.bones.length;j++){d.push(i.bones[j])}}else{g(i,d)}return d}},g=function(i,d){d.push(i);for(var j=0;j<i.children.length;j++){g(i.children[j],d)}};h.LINEAR=0;h.CATMULLROM=1;h.CATMULLROM_FORWARD=2;return h}();THREE.Animation=function(e,d,f){this.root=e;this.data=THREE.AnimationHandler.get(d);this.hierarchy=THREE.AnimationHandler.parse(e);this.currentTime=0;this.timeScale=1;this.isPlaying=!1;this.loop=this.isPaused=!0;this.interpolationType=void 0!==f?f:THREE.AnimationHandler.LINEAR;this.points=[];this.target=new THREE.Vector3};THREE.Animation.prototype.play=function(h,g){if(!1===this.isPlaying){this.isPlaying=!0;this.loop=void 0!==h?h:!0;this.currentTime=void 0!==g?g:0;var l,k=this.hierarchy.length,j;for(l=0;l<k;l++){j=this.hierarchy[l];this.interpolationType!==THREE.AnimationHandler.CATMULLROM_FORWARD&&(j.useQuaternion=!0);j.matrixAutoUpdate=!0;void 0===j.animationCache&&(j.animationCache={},j.animationCache.prevKey={pos:0,rot:0,scl:0},j.animationCache.nextKey={pos:0,rot:0,scl:0},j.animationCache.originalMatrix=j instanceof THREE.Bone?j.skinMatrix:j.matrix);var i=j.animationCache.prevKey;j=j.animationCache.nextKey;i.pos=this.data.hierarchy[l].keys[0];i.rot=this.data.hierarchy[l].keys[0];i.scl=this.data.hierarchy[l].keys[0];j.pos=this.getNextKeyWith("pos",l,1);j.rot=this.getNextKeyWith("rot",l,1);j.scl=this.getNextKeyWith("scl",l,1)}this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};THREE.Animation.prototype.pause=function(){!0===this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};THREE.Animation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this)};THREE.Animation.prototype.update=function(B){if(!1!==this.isPlaying){var A=["pos","rot","scl"],z,y,x,w,v,u,t,s,o;o=this.currentTime+=B*this.timeScale;s=this.currentTime%=this.data.length;parseInt(Math.min(s*this.data.fps,this.data.length*this.data.fps),10);for(var l=0,q=this.hierarchy.length;l<q;l++){B=this.hierarchy[l];t=B.animationCache;for(var j=0;3>j;j++){z=A[j];v=t.prevKey[z];u=t.nextKey[z];if(u.time<=o){if(s<o){if(this.loop){v=this.data.hierarchy[l].keys[0];for(u=this.getNextKeyWith(z,l,1);u.time<s;){v=u,u=this.getNextKeyWith(z,l,u.index+1)}}else{this.stop();return}}else{do{v=u,u=this.getNextKeyWith(z,l,u.index+1)}while(u.time<s)}t.prevKey[z]=v;t.nextKey[z]=u}B.matrixAutoUpdate=!0;B.matrixWorldNeedsUpdate=!0;y=(s-v.time)/(u.time-v.time);x=v[z];w=u[z];if(0>y||1<y){console.log("THREE.Animation.update: Warning! Scale out of bounds:"+y+" on bone "+l),y=0>y?0:1}if("pos"===z){if(z=B.position,this.interpolationType===THREE.AnimationHandler.LINEAR){z.x=x[0]+(w[0]-x[0])*y,z.y=x[1]+(w[1]-x[1])*y,z.z=x[2]+(w[2]-x[2])*y}else{if(this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD){this.points[0]=this.getPrevKeyWith("pos",l,v.index-1).pos,this.points[1]=x,this.points[2]=w,this.points[3]=this.getNextKeyWith("pos",l,u.index+1).pos,y=0.33*y+0.33,x=this.interpolateCatmullRom(this.points,y),z.x=x[0],z.y=x[1],z.z=x[2],this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD&&(y=this.interpolateCatmullRom(this.points,1.01*y),this.target.set(y[0],y[1],y[2]),this.target.subSelf(z),this.target.y=0,this.target.normalize(),y=Math.atan2(this.target.x,this.target.z),B.rotation.set(0,y,0))}}}else{"rot"===z?THREE.Quaternion.slerp(x,w,B.quaternion,y):"scl"===z&&(z=B.scale,z.x=x[0]+(w[0]-x[0])*y,z.y=x[1]+(w[1]-x[1])*y,z.z=x[2]+(w[2]-x[2])*y)}}}}};THREE.Animation.prototype.interpolateCatmullRom=function(t,s){var r=[],q=[],p,o,n,m,l,j;p=(t.length-1)*s;o=Math.floor(p);p-=o;r[0]=0===o?o:o-1;r[1]=o;r[2]=o>t.length-2?o:o+1;r[3]=o>t.length-3?o:o+2;o=t[r[0]];m=t[r[1]];l=t[r[2]];j=t[r[3]];r=p*p;n=p*r;q[0]=this.interpolate(o[0],m[0],l[0],j[0],p,r,n);q[1]=this.interpolate(o[1],m[1],l[1],j[1],p,r,n);q[2]=this.interpolate(o[2],m[2],l[2],j[2],p,r,n);return q};THREE.Animation.prototype.interpolate=function(i,h,n,m,l,k,j){i=0.5*(n-i);m=0.5*(m-h);return(2*(h-n)+i+m)*j+(-3*(h-n)-2*i-m)*k+i*l+h};THREE.Animation.prototype.getNextKeyWith=function(f,e,h){for(var g=this.data.hierarchy[e].keys,h=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?h<g.length-1?h:g.length-1:h%g.length;h<g.length;h++){if(void 0!==g[h][f]){return g[h]}}return this.data.hierarchy[e].keys[0]};THREE.Animation.prototype.getPrevKeyWith=function(f,e,h){for(var g=this.data.hierarchy[e].keys,h=this.interpolationType===THREE.AnimationHandler.CATMULLROM||this.interpolationType===THREE.AnimationHandler.CATMULLROM_FORWARD?0<h?h:0:0<=h?h:h+g.length;0<=h;h--){if(void 0!==g[h][f]){return g[h]}}return this.data.hierarchy[e].keys[g.length-1]};THREE.KeyFrameAnimation=function(i,h,n){this.root=i;this.data=THREE.AnimationHandler.get(h);this.hierarchy=THREE.AnimationHandler.parse(i);this.currentTime=0;this.timeScale=0.001;this.isPlaying=!1;this.loop=this.isPaused=!0;this.JITCompile=void 0!==n?n:!0;i=0;for(h=this.hierarchy.length;i<h;i++){var n=this.data.hierarchy[i].sids,m=this.hierarchy[i];if(this.data.hierarchy[i].keys.length&&n){for(var l=0;l<n.length;l++){var k=n[l],j=this.getNextKeyWith(k,i,0);j&&j.apply(k)}m.matrixAutoUpdate=!1;this.data.hierarchy[i].node.updateMatrix();m.matrixWorldNeedsUpdate=!0}}};THREE.KeyFrameAnimation.prototype.play=function(h,g){if(!this.isPlaying){this.isPlaying=!0;this.loop=void 0!==h?h:!0;this.currentTime=void 0!==g?g:0;this.startTimeMs=g;this.startTime=10000000;this.endTime=-this.startTime;var l,k=this.hierarchy.length,j,i;for(l=0;l<k;l++){j=this.hierarchy[l],i=this.data.hierarchy[l],j.useQuaternion=!0,void 0===i.animationCache&&(i.animationCache={},i.animationCache.prevKey=null,i.animationCache.nextKey=null,i.animationCache.originalMatrix=j instanceof THREE.Bone?j.skinMatrix:j.matrix),j=this.data.hierarchy[l].keys,j.length&&(i.animationCache.prevKey=j[0],i.animationCache.nextKey=j[1],this.startTime=Math.min(j[0].time,this.startTime),this.endTime=Math.max(j[j.length-1].time,this.endTime))}this.update(0)}this.isPaused=!1;THREE.AnimationHandler.addToUpdate(this)};THREE.KeyFrameAnimation.prototype.pause=function(){this.isPaused?THREE.AnimationHandler.addToUpdate(this):THREE.AnimationHandler.removeFromUpdate(this);this.isPaused=!this.isPaused};THREE.KeyFrameAnimation.prototype.stop=function(){this.isPaused=this.isPlaying=!1;THREE.AnimationHandler.removeFromUpdate(this);for(var f=0;f<this.data.hierarchy.length;f++){var e=this.hierarchy[f],h=this.data.hierarchy[f];if(void 0!==h.animationCache){var g=h.animationCache.originalMatrix;e instanceof THREE.Bone?(g.copy(e.skinMatrix),e.skinMatrix=g):(g.copy(e.matrix),e.matrix=g);delete h.animationCache}}};THREE.KeyFrameAnimation.prototype.update=function(z){if(this.isPlaying){var y,x,w,v,u=this.data.JIT.hierarchy,t,s,r;s=this.currentTime+=z*this.timeScale;t=this.currentTime%=this.data.length;t<this.startTimeMs&&(t=this.currentTime=this.startTimeMs+t);v=parseInt(Math.min(t*this.data.fps,this.data.length*this.data.fps),10);if((r=t<s)&&!this.loop){for(var z=0,q=this.hierarchy.length;z<q;z++){var l=this.data.hierarchy[z].keys,u=this.data.hierarchy[z].sids;w=l.length-1;v=this.hierarchy[z];if(l.length){for(l=0;l<u.length;l++){t=u[l],(s=this.getPrevKeyWith(t,z,w))&&s.apply(t)}this.data.hierarchy[z].node.updateMatrix();v.matrixWorldNeedsUpdate=!0}}this.stop()}else{if(!(t<this.startTime)){z=0;for(q=this.hierarchy.length;z<q;z++){w=this.hierarchy[z];y=this.data.hierarchy[z];var l=y.keys,j=y.animationCache;if(this.JITCompile&&void 0!==u[z][v]){w instanceof THREE.Bone?(w.skinMatrix=u[z][v],w.matrixWorldNeedsUpdate=!1):(w.matrix=u[z][v],w.matrixWorldNeedsUpdate=!0)}else{if(l.length){this.JITCompile&&j&&(w instanceof THREE.Bone?w.skinMatrix=j.originalMatrix:w.matrix=j.originalMatrix);y=j.prevKey;x=j.nextKey;if(y&&x){if(x.time<=s){if(r&&this.loop){y=l[0];for(x=l[1];x.time<t;){y=x,x=l[y.index+1]}}else{if(!r){for(var o=l.length-1;x.time<t&&x.index!==o;){y=x,x=l[y.index+1]}}}j.prevKey=y;j.nextKey=x}x.time>=t?y.interpolate(x,t):y.interpolate(x,x.time)}this.data.hierarchy[z].node.updateMatrix();w.matrixWorldNeedsUpdate=!0}}}if(this.JITCompile&&void 0===u[0][v]){this.hierarchy[0].updateMatrixWorld(!0);for(z=0;z<this.hierarchy.length;z++){u[z][v]=this.hierarchy[z] instanceof THREE.Bone?this.hierarchy[z].skinMatrix.clone():this.hierarchy[z].matrix.clone()}}}}}};THREE.KeyFrameAnimation.prototype.getNextKeyWith=function(e,d,f){d=this.data.hierarchy[d].keys;for(f%=d.length;f<d.length;f++){if(d[f].hasTarget(e)){return d[f]}}return d[0]};THREE.KeyFrameAnimation.prototype.getPrevKeyWith=function(e,d,f){d=this.data.hierarchy[d].keys;for(f=0<=f?f:f+d.length;0<=f;f--){if(d[f].hasTarget(e)){return d[f]}}return d[d.length-1]};THREE.CubeCamera=function(r,q,p){THREE.Object3D.call(this);var o=new THREE.PerspectiveCamera(90,1,r,q);o.up.set(0,-1,0);o.lookAt(new THREE.Vector3(1,0,0));this.add(o);var n=new THREE.PerspectiveCamera(90,1,r,q);n.up.set(0,-1,0);n.lookAt(new THREE.Vector3(-1,0,0));this.add(n);var m=new THREE.PerspectiveCamera(90,1,r,q);m.up.set(0,0,1);m.lookAt(new THREE.Vector3(0,1,0));this.add(m);var l=new THREE.PerspectiveCamera(90,1,r,q);l.up.set(0,0,-1);l.lookAt(new THREE.Vector3(0,-1,0));this.add(l);var k=new THREE.PerspectiveCamera(90,1,r,q);k.up.set(0,-1,0);k.lookAt(new THREE.Vector3(0,0,1));this.add(k);var j=new THREE.PerspectiveCamera(90,1,r,q);j.up.set(0,-1,0);j.lookAt(new THREE.Vector3(0,0,-1));this.add(j);this.renderTarget=new THREE.WebGLRenderTargetCube(p,p,{format:THREE.RGBFormat,magFilter:THREE.LinearFilter,minFilter:THREE.LinearFilter});this.updateCubeMap=function(f,e){var g=this.renderTarget,d=g.generateMipmaps;g.generateMipmaps=!1;g.activeCubeFace=0;f.render(e,o,g);g.activeCubeFace=1;f.render(e,n,g);g.activeCubeFace=2;f.render(e,m,g);g.activeCubeFace=3;f.render(e,l,g);g.activeCubeFace=4;f.render(e,k,g);g.generateMipmaps=d;g.activeCubeFace=5;f.render(e,j,g)}};THREE.CubeCamera.prototype=Object.create(THREE.Object3D.prototype);THREE.CombinedCamera=function(i,h,n,m,l,k,j){THREE.Camera.call(this);this.fov=n;this.left=-i/2;this.right=i/2;this.top=h/2;this.bottom=-h/2;this.cameraO=new THREE.OrthographicCamera(i/-2,i/2,h/2,h/-2,k,j);this.cameraP=new THREE.PerspectiveCamera(n,i/h,m,l);this.zoom=1;this.toPerspective()};THREE.CombinedCamera.prototype=Object.create(THREE.Camera.prototype);THREE.CombinedCamera.prototype.toPerspective=function(){this.near=this.cameraP.near;this.far=this.cameraP.far;this.cameraP.fov=this.fov/this.zoom;this.cameraP.updateProjectionMatrix();this.projectionMatrix=this.cameraP.projectionMatrix;this.inPerspectiveMode=!0;this.inOrthographicMode=!1};THREE.CombinedCamera.prototype.toOrthographic=function(){var d=this.cameraP.aspect,c=(this.cameraP.near+this.cameraP.far)/2,c=Math.tan(this.fov/2)*c,d=2*c*d/2,c=c/this.zoom,d=d/this.zoom;this.cameraO.left=-d;this.cameraO.right=d;this.cameraO.top=c;this.cameraO.bottom=-c;this.cameraO.updateProjectionMatrix();this.near=this.cameraO.near;this.far=this.cameraO.far;this.projectionMatrix=this.cameraO.projectionMatrix;this.inPerspectiveMode=!1;this.inOrthographicMode=!0};THREE.CombinedCamera.prototype.setSize=function(d,c){this.cameraP.aspect=d/c;this.left=-d/2;this.right=d/2;this.top=c/2;this.bottom=-c/2};THREE.CombinedCamera.prototype.setFov=function(b){this.fov=b;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.updateProjectionMatrix=function(){this.inPerspectiveMode?this.toPerspective():(this.toPerspective(),this.toOrthographic())};THREE.CombinedCamera.prototype.setLens=function(e,d){void 0===d&&(d=24);var f=2*THREE.Math.radToDeg(Math.atan(d/(2*e)));this.setFov(f);return f};THREE.CombinedCamera.prototype.setZoom=function(b){this.zoom=b;this.inPerspectiveMode?this.toPerspective():this.toOrthographic()};THREE.CombinedCamera.prototype.toFrontView=function(){this.rotation.x=0;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBackView=function(){this.rotation.x=0;this.rotation.y=Math.PI;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toLeftView=function(){this.rotation.x=0;this.rotation.y=-Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toRightView=function(){this.rotation.x=0;this.rotation.y=Math.PI/2;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toTopView=function(){this.rotation.x=-Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.CombinedCamera.prototype.toBottomView=function(){this.rotation.x=Math.PI/2;this.rotation.y=0;this.rotation.z=0;this.rotationAutoUpdate=!1};THREE.AsteriskGeometry=function(g,f){THREE.Geometry.call(this);for(var j=0.707*g,i=0.707*f,j=[[g,0,0],[f,0,0],[-g,0,0],[-f,0,0],[0,g,0],[0,f,0],[0,-g,0],[0,-f,0],[0,0,g],[0,0,f],[0,0,-g],[0,0,-f],[j,j,0],[i,i,0],[-j,-j,0],[-i,-i,0],[j,-j,0],[i,-i,0],[-j,j,0],[-i,i,0],[j,0,j],[i,0,i],[-j,0,-j],[-i,0,-i],[j,0,-j],[i,0,-i],[-j,0,j],[-i,0,i],[0,j,j],[0,i,i],[0,-j,-j],[0,-i,-i],[0,j,-j],[0,i,-i],[0,-j,j],[0,-i,i]],i=0,h=j.length;i<h;i++){this.vertices.push(new THREE.Vector3(j[i][0],j[i][1],j[i][2]))}};THREE.AsteriskGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CircleGeometry=function(j,i,p,o){THREE.Geometry.call(this);var j=j||50,p=void 0!==p?p:0,o=void 0!==o?o:2*Math.PI,i=void 0!==i?Math.max(3,i):8,n,m=[];n=new THREE.Vector3;var l=new THREE.Vector2(0.5,0.5);this.vertices.push(n);m.push(l);for(n=0;n<=i;n++){var k=new THREE.Vector3;k.x=j*Math.cos(p+n/i*o);k.y=j*Math.sin(p+n/i*o);this.vertices.push(k);m.push(new THREE.Vector2((k.x/j+1)/2,-(k.y/j+1)/2+1))}p=new THREE.Vector3(0,0,-1);for(n=1;n<=i;n++){this.faces.push(new THREE.Face3(n,n+1,0,[p,p,p])),this.faceVertexUvs[0].push([m[n],m[n+1],l])}this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,j)};THREE.CircleGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CubeGeometry=function(j,i,p,o,n,m){function l(U,T,S,R,Q,P,O,N){var L,D=k.widthSegments,K=k.heightSegments,s=Q/2,E=P/2,y=k.vertices.length;if("x"===U&&"y"===T||"y"===U&&"x"===T){L="z"}else{if("x"===U&&"z"===T||"z"===U&&"x"===T){L="y",K=k.depthSegments}else{if("z"===U&&"y"===T||"y"===U&&"z"===T){L="x",D=k.depthSegments}}}var J=D+1,M=K+1,h=Q/D,v=P/K,w=new THREE.Vector3;w[L]=0<O?1:-1;for(Q=0;Q<M;Q++){for(P=0;P<J;P++){var r=new THREE.Vector3;r[U]=(P*h-s)*S;r[T]=(Q*v-E)*R;r[L]=O;k.vertices.push(r)}}for(Q=0;Q<K;Q++){for(P=0;P<D;P++){U=new THREE.Face4(P+J*Q+y,P+J*(Q+1)+y,P+1+J*(Q+1)+y,P+1+J*Q+y),U.normal.copy(w),U.vertexNormals.push(w.clone(),w.clone(),w.clone(),w.clone()),U.materialIndex=N,k.faces.push(U),k.faceVertexUvs[0].push([new THREE.Vector2(P/D,1-Q/K),new THREE.Vector2(P/D,1-(Q+1)/K),new THREE.Vector2((P+1)/D,1-(Q+1)/K),new THREE.Vector2((P+1)/D,1-Q/K)])}}}THREE.Geometry.call(this);var k=this;this.width=j;this.height=i;this.depth=p;this.widthSegments=o||1;this.heightSegments=n||1;this.depthSegments=m||1;j=this.width/2;i=this.height/2;p=this.depth/2;l("z","y",-1,-1,this.depth,this.height,j,0);l("z","y",1,-1,this.depth,this.height,-j,1);l("x","z",1,1,this.width,this.depth,i,2);l("x","z",1,-1,this.width,this.depth,-i,3);l("x","y",1,-1,this.width,this.height,p,4);l("x","y",-1,-1,this.width,this.height,-p,5);this.computeCentroids();this.mergeVertices()};THREE.CubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.CylinderGeometry=function(X,W,V,U,T,S){THREE.Geometry.call(this);var X=void 0!==X?X:20,W=void 0!==W?W:20,V=void 0!==V?V:100,R=V/2,U=U||8,T=T||1,Q,P,O=[],L=[];for(P=0;P<=T;P++){var K=[],M=[],G=P/T,D=G*(W-X)+X;for(Q=0;Q<=U;Q++){var N=Q/U,I=new THREE.Vector3;I.x=D*Math.sin(2*N*Math.PI);I.y=-G*V+R;I.z=D*Math.cos(2*N*Math.PI);this.vertices.push(I);K.push(this.vertices.length-1);M.push(new THREE.Vector2(N,1-G))}O.push(K);L.push(M)}V=(W-X)/V;for(Q=0;Q<U;Q++){0!==X?(K=this.vertices[O[0][Q]].clone(),M=this.vertices[O[0][Q+1]].clone()):(K=this.vertices[O[1][Q]].clone(),M=this.vertices[O[1][Q+1]].clone());K.setY(Math.sqrt(K.x*K.x+K.z*K.z)*V).normalize();M.setY(Math.sqrt(M.x*M.x+M.z*M.z)*V).normalize();for(P=0;P<T;P++){var G=O[P][Q],D=O[P+1][Q],N=O[P+1][Q+1],I=O[P][Q+1],w=K.clone(),H=K.clone(),o=M.clone(),y=M.clone(),v=L[P][Q].clone(),E=L[P+1][Q].clone(),J=L[P+1][Q+1].clone(),j=L[P][Q+1].clone();this.faces.push(new THREE.Face4(G,D,N,I,[w,H,o,y]));this.faceVertexUvs[0].push([v,E,J,j])}}if(!S&&0<X){this.vertices.push(new THREE.Vector3(0,R,0));for(Q=0;Q<U;Q++){G=O[0][Q],D=O[0][Q+1],N=this.vertices.length-1,w=new THREE.Vector3(0,1,0),H=new THREE.Vector3(0,1,0),o=new THREE.Vector3(0,1,0),v=L[0][Q].clone(),E=L[0][Q+1].clone(),J=new THREE.Vector2(E.u,0),this.faces.push(new THREE.Face3(G,D,N,[w,H,o])),this.faceVertexUvs[0].push([v,E,J])}}if(!S&&0<W){this.vertices.push(new THREE.Vector3(0,-R,0));for(Q=0;Q<U;Q++){G=O[P][Q+1],D=O[P][Q],N=this.vertices.length-1,w=new THREE.Vector3(0,-1,0),H=new THREE.Vector3(0,-1,0),o=new THREE.Vector3(0,-1,0),v=L[P][Q+1].clone(),E=L[P][Q].clone(),J=new THREE.Vector2(E.u,1),this.faces.push(new THREE.Face3(G,D,N,[w,H,o])),this.faceVertexUvs[0].push([v,E,J])}}this.computeCentroids();this.computeFaceNormals()};THREE.CylinderGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry=function(d,c){"undefined"!==typeof d&&(THREE.Geometry.call(this),d=d instanceof Array?d:[d],this.shapebb=d[d.length-1].getBoundingBox(),this.addShapeList(d,c),this.computeCentroids(),this.computeFaceNormals())};THREE.ExtrudeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ExtrudeGeometry.prototype.addShapeList=function(f,e){for(var h=f.length,g=0;g<h;g++){this.addShape(f[g],e)}};THREE.ExtrudeGeometry.prototype.addShape=function(aC,aB){function aA(e,d,f){d||console.log("die");return d.clone().multiplyScalar(f).addSelf(e)}function az(t,s,r){var q=THREE.ExtrudeGeometry.__v1,p=THREE.ExtrudeGeometry.__v2,n=THREE.ExtrudeGeometry.__v3,m=THREE.ExtrudeGeometry.__v4,l=THREE.ExtrudeGeometry.__v5,k=THREE.ExtrudeGeometry.__v6;q.set(t.x-s.x,t.y-s.y);p.set(t.x-r.x,t.y-r.y);q=q.normalize();p=p.normalize();n.set(-q.y,q.x);m.set(p.y,-p.x);l.copy(t).addSelf(n);k.copy(t).addSelf(m);if(l.equals(k)){return m.clone()}l.copy(s).addSelf(n);k.copy(r).addSelf(m);n=q.dot(m);m=k.subSelf(l).dot(m);0===n&&(console.log("Either infinite or no solutions!"),0===m?console.log("Its finite solutions."):console.log("Too bad, no solutions."));m/=n;return 0>m?(s=Math.atan2(s.y-t.y,s.x-t.x),t=Math.atan2(r.y-t.y,r.x-t.x),s>t&&(t+=2*Math.PI),r=(s+t)/2,t=-Math.cos(r),r=-Math.sin(r),new THREE.Vector2(t,r)):q.multiplyScalar(m).addSelf(l).subSelf(t).clone()}function ay(F,D){var C,B;for(w=F.length;0<=--w;){C=w;B=w-1;0>B&&(B=F.length-1);for(var A=0,z=al+2*ap,A=0;A<z;A++){var y=o*A,x=o*(A+1),n=D+C+y,y=D+B+y,r=D+B+x,x=D+C+x,b=F,I=A,a=z,H=C,G=B,n=n+ac,y=y+ac,r=r+ac,x=x+ac;S.faces.push(new THREE.Face4(n,y,r,x,null,null,Y));n=ag.generateSideWallUV(S,aC,b,aB,n,y,r,x,I,a,H,G);S.faceVertexUvs[0].push(n)}}}function ax(e,d,f){S.vertices.push(new THREE.Vector3(e,d,f))}function aw(h,g,b,a){h+=ac;g+=ac;b+=ac;S.faces.push(new THREE.Face3(h,g,b,null,null,ah));h=a?ag.generateBottomUV(S,aC,aB,h,g,b):ag.generateTopUV(S,aC,aB,h,g,b);S.faceVertexUvs[0].push(h)}var av=void 0!==aB.amount?aB.amount:100,au=void 0!==aB.bevelThickness?aB.bevelThickness:6,at=void 0!==aB.bevelSize?aB.bevelSize:au-2,ap=void 0!==aB.bevelSegments?aB.bevelSegments:3,ao=void 0!==aB.bevelEnabled?aB.bevelEnabled:!0,aq=void 0!==aB.curveSegments?aB.curveSegments:12,al=void 0!==aB.steps?aB.steps:1,aj=aB.extrudePath,ar,am=!1,ah=aB.material,Y=aB.extrudeMaterial,ag=void 0!==aB.UVGenerator?aB.UVGenerator:THREE.ExtrudeGeometry.WorldUVGenerator,ai,V,X,Z;aj&&(ar=aj.getSpacedPoints(al),am=!0,ao=!1,ai=void 0!==aB.frames?aB.frames:new THREE.TubeGeometry.FrenetFrames(aj,al,!1),V=new THREE.Vector3,X=new THREE.Vector3,Z=new THREE.Vector3);ao||(at=au=ap=0);var ae,T,U,S=this,ac=this.vertices.length,aq=aC.extractPoints(aq),W=aq.shape,aq=aq.holes;if(aj=!THREE.Shape.Utils.isClockWise(W)){W=W.reverse();T=0;for(U=aq.length;T<U;T++){ae=aq[T],THREE.Shape.Utils.isClockWise(ae)&&(aq[T]=ae.reverse())}aj=!1}var E=THREE.Shape.Utils.triangulateShape(W,aq),aj=W;T=0;for(U=aq.length;T<U;T++){ae=aq[T],W=W.concat(ae)}var af,Q,O,j,o=W.length,ad=E.length,an=[],w=0,aa=aj.length;af=aa-1;for(Q=w+1;w<aa;w++,af++,Q++){af===aa&&(af=0),Q===aa&&(Q=0),an[w]=az(aj[w],aj[af],aj[Q])}var ab=[],ak,v=an.concat();T=0;for(U=aq.length;T<U;T++){ae=aq[T];ak=[];w=0;aa=ae.length;af=aa-1;for(Q=w+1;w<aa;w++,af++,Q++){af===aa&&(af=0),Q===aa&&(Q=0),ak[w]=az(ae[w],ae[af],ae[Q])}ab.push(ak);v=v.concat(ak)}for(af=0;af<ap;af++){ae=af/ap;O=au*(1-ae);Q=at*Math.sin(ae*Math.PI/2);w=0;for(aa=aj.length;w<aa;w++){j=aA(aj[w],an[w],Q),ax(j.x,j.y,-O)}T=0;for(U=aq.length;T<U;T++){ae=aq[T];ak=ab[T];w=0;for(aa=ae.length;w<aa;w++){j=aA(ae[w],ak[w],Q),ax(j.x,j.y,-O)}}}Q=at;for(w=0;w<o;w++){j=ao?aA(W[w],v[w],Q):W[w],am?(X.copy(ai.normals[0]).multiplyScalar(j.x),V.copy(ai.binormals[0]).multiplyScalar(j.y),Z.copy(ar[0]).addSelf(X).addSelf(V),ax(Z.x,Z.y,Z.z)):ax(j.x,j.y,0)}for(ae=1;ae<=al;ae++){for(w=0;w<o;w++){j=ao?aA(W[w],v[w],Q):W[w],am?(X.copy(ai.normals[ae]).multiplyScalar(j.x),V.copy(ai.binormals[ae]).multiplyScalar(j.y),Z.copy(ar[ae]).addSelf(X).addSelf(V),ax(Z.x,Z.y,Z.z)):ax(j.x,j.y,av/al*ae)}}for(af=ap-1;0<=af;af--){ae=af/ap;O=au*(1-ae);Q=at*Math.sin(ae*Math.PI/2);w=0;for(aa=aj.length;w<aa;w++){j=aA(aj[w],an[w],Q),ax(j.x,j.y,av+O)}T=0;for(U=aq.length;T<U;T++){ae=aq[T];ak=ab[T];w=0;for(aa=ae.length;w<aa;w++){j=aA(ae[w],ak[w],Q),am?ax(j.x,j.y+ar[al-1].y,ar[al-1].x+O):ax(j.x,j.y,av+O)}}}if(ao){au=0*o;for(w=0;w<ad;w++){av=E[w],aw(av[2]+au,av[1]+au,av[0]+au,!0)}au=o*(al+2*ap);for(w=0;w<ad;w++){av=E[w],aw(av[0]+au,av[1]+au,av[2]+au,!1)}}else{for(w=0;w<ad;w++){av=E[w],aw(av[2],av[1],av[0],!0)}for(w=0;w<ad;w++){av=E[w],aw(av[0]+o*al,av[1]+o*al,av[2]+o*al,!1)}}av=0;ay(aj,av);av+=aj.length;T=0;for(U=aq.length;T<U;T++){ae=aq[T],ay(ae,av),av+=ae.length}};THREE.ExtrudeGeometry.WorldUVGenerator={generateTopUV:function(h,g,l,k,j,i){g=h.vertices[j].x;j=h.vertices[j].y;l=h.vertices[i].x;i=h.vertices[i].y;return[new THREE.Vector2(h.vertices[k].x,h.vertices[k].y),new THREE.Vector2(g,j),new THREE.Vector2(l,i)]},generateBottomUV:function(h,g,l,k,j,i){return this.generateTopUV(h,g,l,k,j,i)},generateSideWallUV:function(z,y,x,w,v,u,t,s){var y=z.vertices[v].x,x=z.vertices[v].y,v=z.vertices[v].z,w=z.vertices[u].x,r=z.vertices[u].y,u=z.vertices[u].z,q=z.vertices[t].x,l=z.vertices[t].y,t=z.vertices[t].z,j=z.vertices[s].x,o=z.vertices[s].y,z=z.vertices[s].z;return 0.01>Math.abs(x-r)?[new THREE.Vector2(y,1-v),new THREE.Vector2(w,1-u),new THREE.Vector2(q,1-t),new THREE.Vector2(j,1-z)]:[new THREE.Vector2(x,1-v),new THREE.Vector2(r,1-u),new THREE.Vector2(l,1-t),new THREE.Vector2(o,1-z)]}};THREE.ExtrudeGeometry.__v1=new THREE.Vector2;THREE.ExtrudeGeometry.__v2=new THREE.Vector2;THREE.ExtrudeGeometry.__v3=new THREE.Vector2;THREE.ExtrudeGeometry.__v4=new THREE.Vector2;THREE.ExtrudeGeometry.__v5=new THREE.Vector2;THREE.ExtrudeGeometry.__v6=new THREE.Vector2;THREE.ShapeGeometry=function(d,c){THREE.Geometry.call(this);!1===d instanceof Array&&(d=[d]);this.shapebb=d[d.length-1].getBoundingBox();this.addShapeList(d,c);this.computeCentroids();this.computeFaceNormals()};THREE.ShapeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ShapeGeometry.prototype.addShapeList=function(f,e){for(var h=0,g=f.length;h<g;h++){this.addShape(f[h],e)}return this};THREE.ShapeGeometry.prototype.addShape=function(v,u){void 0===u&&(u={});var t=u.material,s=void 0===u.UVGenerator?THREE.ExtrudeGeometry.WorldUVGenerator:u.UVGenerator,r,q,p,o=this.vertices.length;r=v.extractPoints(void 0!==u.curveSegments?u.curveSegments:12);var m=r.shape,l=r.holes;if(!THREE.Shape.Utils.isClockWise(m)){m=m.reverse();r=0;for(q=l.length;r<q;r++){p=l[r],THREE.Shape.Utils.isClockWise(p)&&(l[r]=p.reverse())}}var j=THREE.Shape.Utils.triangulateShape(m,l);r=0;for(q=l.length;r<q;r++){p=l[r],m=m.concat(p)}l=m.length;q=j.length;for(r=0;r<l;r++){p=m[r],this.vertices.push(new THREE.Vector3(p.x,p.y,0))}for(r=0;r<q;r++){l=j[r],m=l[0]+o,p=l[1]+o,l=l[2]+o,this.faces.push(new THREE.Face3(m,p,l,null,null,t)),this.faceVertexUvs[0].push(s.generateBottomUV(this,v,u,m,p,l))}};THREE.LatheGeometry=function(i,h,n){THREE.Geometry.call(this);for(var h=h||12,n=n||2*Math.PI,m=[],l=(new THREE.Matrix4).makeRotationZ(n/h),k=0;k<i.length;k++){m[k]=i[k].clone(),this.vertices.push(m[k])}for(var j=h+1,n=0;n<j;n++){for(k=0;k<m.length;k++){m[k]=l.multiplyVector3(m[k].clone()),this.vertices.push(m[k])}}for(n=0;n<h;n++){m=0;for(l=i.length;m<l-1;m++){this.faces.push(new THREE.Face4(n*l+m,(n+1)%j*l+m,(n+1)%j*l+(m+1)%l,n*l+(m+1)%l)),this.faceVertexUvs[0].push([new THREE.Vector2(1-n/h,m/l),new THREE.Vector2(1-(n+1)/h,m/l),new THREE.Vector2(1-(n+1)/h,(m+1)/l),new THREE.Vector2(1-n/h,(m+1)/l)])}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.LatheGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.PlaneGeometry=function(v,u,t,s){THREE.Geometry.call(this);this.width=v;this.height=u;this.widthSegments=t||1;this.heightSegments=s||1;for(var t=v/2,r=u/2,s=this.widthSegments,q=this.heightSegments,p=s+1,o=q+1,m=this.width/s,l=this.height/q,j=new THREE.Vector3(0,0,1),v=0;v<o;v++){for(u=0;u<p;u++){this.vertices.push(new THREE.Vector3(u*m-t,-(v*l-r),0))}}for(v=0;v<q;v++){for(u=0;u<s;u++){t=new THREE.Face4(u+p*v,u+p*(v+1),u+1+p*(v+1),u+1+p*v),t.normal.copy(j),t.vertexNormals.push(j.clone(),j.clone(),j.clone(),j.clone()),this.faces.push(t),this.faceVertexUvs[0].push([new THREE.Vector2(u/s,1-v/q),new THREE.Vector2(u/s,1-(v+1)/q),new THREE.Vector2((u+1)/s,1-(v+1)/q),new THREE.Vector2((u+1)/s,1-v/q)])}}this.computeCentroids()};THREE.PlaneGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.SphereGeometry=function(G,F,E,D,C,B,A){THREE.Geometry.call(this);this.radius=G||50;this.widthSegments=Math.max(3,Math.floor(F)||8);this.heightSegments=Math.max(2,Math.floor(E)||6);for(var D=void 0!==D?D:0,C=void 0!==C?C:2*Math.PI,B=void 0!==B?B:0,A=void 0!==A?A:Math.PI,z=[],y=[],E=0;E<=this.heightSegments;E++){for(var x=[],u=[],F=0;F<=this.widthSegments;F++){var t=F/this.widthSegments,v=E/this.heightSegments,j=new THREE.Vector3;j.x=-this.radius*Math.cos(D+t*C)*Math.sin(B+v*A);j.y=this.radius*Math.cos(B+v*A);j.z=this.radius*Math.sin(D+t*C)*Math.sin(B+v*A);this.vertices.push(j);x.push(this.vertices.length-1);u.push(new THREE.Vector2(t,1-v))}z.push(x);y.push(u)}for(E=0;E<this.heightSegments;E++){for(F=0;F<this.widthSegments;F++){var D=z[E][F+1],C=z[E][F],B=z[E+1][F],A=z[E+1][F+1],x=this.vertices[D].clone().normalize(),u=this.vertices[C].clone().normalize(),t=this.vertices[B].clone().normalize(),v=this.vertices[A].clone().normalize(),j=y[E][F+1].clone(),H=y[E][F].clone(),w=y[E+1][F].clone(),o=y[E+1][F+1].clone();Math.abs(this.vertices[D].y)===this.radius?(this.faces.push(new THREE.Face3(D,B,A,[x,t,v])),this.faceVertexUvs[0].push([j,w,o])):Math.abs(this.vertices[B].y)===this.radius?(this.faces.push(new THREE.Face3(D,C,B,[x,u,t])),this.faceVertexUvs[0].push([j,H,w])):(this.faces.push(new THREE.Face4(D,C,B,A,[x,u,t,v])),this.faceVertexUvs[0].push([j,H,w,o]))}}this.computeCentroids();this.computeFaceNormals();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,G)};THREE.SphereGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TextGeometry=function(e,d){var f=THREE.FontUtils.generateShapes(e,d);d.amount=void 0!==d.height?d.height:50;void 0===d.bevelThickness&&(d.bevelThickness=10);void 0===d.bevelSize&&(d.bevelSize=8);void 0===d.bevelEnabled&&(d.bevelEnabled=!1);THREE.ExtrudeGeometry.call(this,f,d)};THREE.TextGeometry.prototype=Object.create(THREE.ExtrudeGeometry.prototype);THREE.TorusGeometry=function(r,q,p,o,n){THREE.Geometry.call(this);this.radius=r||100;this.tube=q||40;this.radialSegments=p||8;this.tubularSegments=o||6;this.arc=n||2*Math.PI;n=new THREE.Vector3;r=[];q=[];for(p=0;p<=this.radialSegments;p++){for(o=0;o<=this.tubularSegments;o++){var m=o/this.tubularSegments*this.arc,l=2*p/this.radialSegments*Math.PI;n.x=this.radius*Math.cos(m);n.y=this.radius*Math.sin(m);var k=new THREE.Vector3;k.x=(this.radius+this.tube*Math.cos(l))*Math.cos(m);k.y=(this.radius+this.tube*Math.cos(l))*Math.sin(m);k.z=this.tube*Math.sin(l);this.vertices.push(k);r.push(new THREE.Vector2(o/this.tubularSegments,p/this.radialSegments));q.push(k.clone().subSelf(n).normalize())}}for(p=1;p<=this.radialSegments;p++){for(o=1;o<=this.tubularSegments;o++){var n=(this.tubularSegments+1)*p+o-1,m=(this.tubularSegments+1)*(p-1)+o-1,l=(this.tubularSegments+1)*(p-1)+o,k=(this.tubularSegments+1)*p+o,j=new THREE.Face4(n,m,l,k,[q[n],q[m],q[l],q[k]]);j.normal.addSelf(q[n]);j.normal.addSelf(q[m]);j.normal.addSelf(q[l]);j.normal.addSelf(q[k]);j.normal.normalize();this.faces.push(j);this.faceVertexUvs[0].push([r[n].clone(),r[m].clone(),r[l].clone(),r[k].clone()])}}this.computeCentroids()};THREE.TorusGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TorusKnotGeometry=function(v,u,t,s,r,q,p){function o(i,h,y,x,w,n){var k=Math.cos(i);Math.cos(h);h=Math.sin(i);i*=y/x;y=Math.cos(i);k*=0.5*w*(2+y);h=0.5*w*(2+y)*h;w=0.5*n*w*Math.sin(i);return new THREE.Vector3(k,h,w)}THREE.Geometry.call(this);this.radius=v||100;this.tube=u||40;this.radialSegments=t||64;this.tubularSegments=s||8;this.p=r||2;this.q=q||3;this.heightScale=p||1;this.grid=Array(this.radialSegments);t=new THREE.Vector3;s=new THREE.Vector3;r=new THREE.Vector3;for(v=0;v<this.radialSegments;++v){this.grid[v]=Array(this.tubularSegments);for(u=0;u<this.tubularSegments;++u){var m=2*(v/this.radialSegments)*this.p*Math.PI,p=2*(u/this.tubularSegments)*Math.PI,q=o(m,p,this.q,this.p,this.radius,this.heightScale),m=o(m+0.01,p,this.q,this.p,this.radius,this.heightScale);t.sub(m,q);s.add(m,q);r.cross(t,s);s.cross(r,t);r.normalize();s.normalize();m=-this.tube*Math.cos(p);p=this.tube*Math.sin(p);q.x+=m*s.x+p*r.x;q.y+=m*s.y+p*r.y;q.z+=m*s.z+p*r.z;this.grid[v][u]=this.vertices.push(new THREE.Vector3(q.x,q.y,q.z))-1}}for(v=0;v<this.radialSegments;++v){for(u=0;u<this.tubularSegments;++u){var r=(v+1)%this.radialSegments,q=(u+1)%this.tubularSegments,t=this.grid[v][u],s=this.grid[r][u],r=this.grid[r][q],q=this.grid[v][q],p=new THREE.Vector2(v/this.radialSegments,u/this.tubularSegments),m=new THREE.Vector2((v+1)/this.radialSegments,u/this.tubularSegments),l=new THREE.Vector2((v+1)/this.radialSegments,(u+1)/this.tubularSegments),j=new THREE.Vector2(v/this.radialSegments,(u+1)/this.tubularSegments);this.faces.push(new THREE.Face4(t,s,r,q));this.faceVertexUvs[0].push([p,m,l,j])}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TorusKnotGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry=function(B,A,z,y,x,w){THREE.Geometry.call(this);this.path=B;this.segments=A||64;this.radius=z||1;this.radiusSegments=y||8;this.closed=x||!1;w&&(this.debug=new THREE.Object3D);this.grid=[];var v,u,x=this.segments+1,t,s,o,w=new THREE.Vector3,l,q,j,A=new THREE.TubeGeometry.FrenetFrames(this.path,this.segments,this.closed);l=A.tangents;q=A.normals;j=A.binormals;this.tangents=l;this.normals=q;this.binormals=j;for(A=0;A<x;A++){this.grid[A]=[];y=A/(x-1);o=B.getPointAt(y);y=l[A];v=q[A];u=j[A];this.debug&&(this.debug.add(new THREE.ArrowHelper(y,o,z,255)),this.debug.add(new THREE.ArrowHelper(v,o,z,16711680)),this.debug.add(new THREE.ArrowHelper(u,o,z,65280)));for(y=0;y<this.radiusSegments;y++){t=2*(y/this.radiusSegments)*Math.PI,s=-this.radius*Math.cos(t),t=this.radius*Math.sin(t),w.copy(o),w.x+=s*v.x+t*u.x,w.y+=s*v.y+t*u.y,w.z+=s*v.z+t*u.z,this.grid[A][y]=this.vertices.push(new THREE.Vector3(w.x,w.y,w.z))-1}}for(A=0;A<this.segments;A++){for(y=0;y<this.radiusSegments;y++){x=this.closed?(A+1)%this.segments:A+1,w=(y+1)%this.radiusSegments,B=this.grid[A][y],z=this.grid[x][y],x=this.grid[x][w],w=this.grid[A][w],l=new THREE.Vector2(A/this.segments,y/this.radiusSegments),q=new THREE.Vector2((A+1)/this.segments,y/this.radiusSegments),j=new THREE.Vector2((A+1)/this.segments,(y+1)/this.radiusSegments),v=new THREE.Vector2(A/this.segments,(y+1)/this.radiusSegments),this.faces.push(new THREE.Face4(B,z,x,w)),this.faceVertexUvs[0].push([l,q,j,v])}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.TubeGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TubeGeometry.FrenetFrames=function(x,w,v){new THREE.Vector3;var u=new THREE.Vector3;new THREE.Vector3;var t=[],s=[],r=[],q=new THREE.Vector3,o=new THREE.Matrix4,w=w+1,m,l,j;this.tangents=t;this.normals=s;this.binormals=r;for(m=0;m<w;m++){l=m/(w-1),t[m]=x.getTangentAt(l),t[m].normalize()}s[0]=new THREE.Vector3;r[0]=new THREE.Vector3;x=Number.MAX_VALUE;m=Math.abs(t[0].x);l=Math.abs(t[0].y);j=Math.abs(t[0].z);m<=x&&(x=m,u.set(1,0,0));l<=x&&(x=l,u.set(0,1,0));j<=x&&u.set(0,0,1);q.cross(t[0],u).normalize();s[0].cross(t[0],q);r[0].cross(t[0],s[0]);for(m=1;m<w;m++){s[m]=s[m-1].clone(),r[m]=r[m-1].clone(),q.cross(t[m-1],t[m]),0.0001<q.length()&&(q.normalize(),u=Math.acos(t[m-1].dot(t[m])),o.makeRotationAxis(q,u).multiplyVector3(s[m])),r[m].cross(t[m],s[m])}if(v){u=Math.acos(s[0].dot(s[w-1]));u/=w-1;0<t[0].dot(q.cross(s[0],s[w-1]))&&(u=-u);for(m=1;m<w;m++){o.makeRotationAxis(t[m],u*m).multiplyVector3(s[m]),r[m].cross(t[m],s[m])}}};THREE.PolyhedronGeometry=function(x,w,v,u){function t(e){var d=e.normalize().clone();d.index=o.vertices.push(d)-1;var f=Math.atan2(e.z,-e.x)/2/Math.PI+0.5,e=Math.atan2(-e.y,Math.sqrt(e.x*e.x+e.z*e.z))/Math.PI+0.5;d.uv=new THREE.Vector2(f,1-e);return d}function s(f,e,h,g){1>g?(g=new THREE.Face3(f.index,e.index,h.index,[f.clone(),e.clone(),h.clone()]),g.centroid.addSelf(f).addSelf(e).addSelf(h).divideScalar(3),g.normal=g.centroid.clone().normalize(),o.faces.push(g),g=Math.atan2(g.centroid.z,-g.centroid.x),o.faceVertexUvs[0].push([q(f.uv,f,g),q(e.uv,e,g),q(h.uv,h,g)])):(g-=1,s(f,r(f,e),r(f,h),g),s(r(f,e),e,r(e,h),g),s(r(f,h),r(e,h),h,g),s(r(f,e),r(e,h),r(f,h),g))}function r(e,d){j[e.index]||(j[e.index]=[]);j[d.index]||(j[d.index]=[]);var f=j[e.index][d.index];void 0===f&&(j[e.index][d.index]=j[d.index][e.index]=f=t((new THREE.Vector3).add(e,d).divideScalar(2)));return f}function q(e,d,f){0>f&&1===e.x&&(e=new THREE.Vector2(e.x-1,e.y));0===d.x&&0===d.z&&(e=new THREE.Vector2(f/2/Math.PI+0.5,e.y));return e}THREE.Geometry.call(this);for(var v=v||1,u=u||0,o=this,m=0,l=x.length;m<l;m++){t(new THREE.Vector3(x[m][0],x[m][1],x[m][2]))}for(var j=[],x=this.vertices,m=0,l=w.length;m<l;m++){s(x[w[m][0]],x[w[m][1]],x[w[m][2]],u)}this.mergeVertices();m=0;for(l=this.vertices.length;m<l;m++){this.vertices[m].multiplyScalar(v)}this.computeCentroids();this.boundingSphere=new THREE.Sphere(new THREE.Vector3,v)};THREE.PolyhedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.IcosahedronGeometry=function(e,d){var f=(1+Math.sqrt(5))/2;THREE.PolyhedronGeometry.call(this,[[-1,f,0],[1,f,0],[-1,-f,0],[1,-f,0],[0,-1,f],[0,1,f],[0,-1,-f],[0,1,-f],[f,0,-1],[f,0,1],[-f,0,-1],[-f,0,1]],[[0,11,5],[0,5,1],[0,1,7],[0,7,10],[0,10,11],[1,5,9],[5,11,4],[11,10,2],[10,7,6],[7,1,8],[3,9,4],[3,4,2],[3,2,6],[3,6,8],[3,8,9],[4,9,5],[2,4,11],[6,2,10],[8,6,7],[9,8,1]],e,d)};THREE.IcosahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.OctahedronGeometry=function(d,c){THREE.PolyhedronGeometry.call(this,[[1,0,0],[-1,0,0],[0,1,0],[0,-1,0],[0,0,1],[0,0,-1]],[[0,2,4],[0,4,3],[0,3,5],[0,5,2],[1,2,5],[1,5,3],[1,3,4],[1,4,2]],d,c)};THREE.OctahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.TetrahedronGeometry=function(d,c){THREE.PolyhedronGeometry.call(this,[[1,1,1],[-1,-1,1],[-1,1,-1],[1,-1,-1]],[[2,1,0],[0,3,2],[1,3,0],[2,3,1]],d,c)};THREE.TetrahedronGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ParametricGeometry=function(E,D,C,B){THREE.Geometry.call(this);var A=this.vertices,z=this.faces,y=this.faceVertexUvs[0],B=void 0===B?!1:B,x,w,v,q,o=D+1;for(x=0;x<=C;x++){q=x/C;for(w=0;w<=D;w++){v=w/D,v=E(v,q),A.push(v)}}var t,j,F,u;for(x=0;x<C;x++){for(w=0;w<D;w++){E=x*o+w,A=x*o+w+1,q=(x+1)*o+w,v=(x+1)*o+w+1,t=new THREE.Vector2(w/D,x/C),j=new THREE.Vector2((w+1)/D,x/C),F=new THREE.Vector2(w/D,(x+1)/C),u=new THREE.Vector2((w+1)/D,(x+1)/C),B?(z.push(new THREE.Face3(E,A,q)),z.push(new THREE.Face3(A,v,q)),y.push([t,j,F]),y.push([j,u,F])):(z.push(new THREE.Face4(E,A,v,q)),y.push([t,j,u,F]))}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ParametricGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.ConvexGeometry=function(E){function D(d){var c=d.length();return new THREE.Vector2(d.x/c,d.y/c)}THREE.Geometry.call(this);for(var C=[[0,1,2],[0,2,1]],B=3;B<E.length;B++){var A=B,z=E[A].clone(),y=z.length();z.x+=y*0.000002*(Math.random()-0.5);z.y+=y*0.000002*(Math.random()-0.5);z.z+=y*0.000002*(Math.random()-0.5);for(var y=[],x=0;x<C.length;){var w=C[x],v=z,q=E[w[0]],o;o=q;var t=E[w[1]],j=E[w[2]],F=new THREE.Vector3,u=new THREE.Vector3;F.sub(j,t);u.sub(o,t);F.crossSelf(u);F.normalize();o=F;q=o.dot(q);if(o.dot(v)>=q){for(v=0;3>v;v++){q=[w[v],w[(v+1)%3]];o=!0;for(t=0;t<y.length;t++){if(y[t][0]===q[1]&&y[t][1]===q[0]){y[t]=y[y.length-1];y.pop();o=!1;break}}o&&y.push(q)}C[x]=C[C.length-1];C.pop()}else{x++}}for(t=0;t<y.length;t++){C.push([y[t][0],y[t][1],A])}}A=0;z=Array(E.length);for(B=0;B<C.length;B++){y=C[B];for(x=0;3>x;x++){void 0===z[y[x]]&&(z[y[x]]=A++,this.vertices.push(E[y[x]])),y[x]=z[y[x]]}}for(B=0;B<C.length;B++){this.faces.push(new THREE.Face3(C[B][0],C[B][1],C[B][2]))}for(B=0;B<this.faces.length;B++){y=this.faces[B],this.faceVertexUvs[0].push([D(this.vertices[y.a]),D(this.vertices[y.b]),D(this.vertices[y.c])])}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals()};THREE.ConvexGeometry.prototype=Object.create(THREE.Geometry.prototype);THREE.AxisHelper=function(d){var c=new THREE.Geometry;c.vertices.push(new THREE.Vector3,new THREE.Vector3(d||1,0,0),new THREE.Vector3,new THREE.Vector3(0,d||1,0),new THREE.Vector3,new THREE.Vector3(0,0,d||1));c.colors.push(new THREE.Color(16711680),new THREE.Color(16755200),new THREE.Color(65280),new THREE.Color(11206400),new THREE.Color(255),new THREE.Color(43775));d=new THREE.LineBasicMaterial({vertexColors:THREE.VertexColors});THREE.Line.call(this,c,d,THREE.LinePieces)};THREE.AxisHelper.prototype=Object.create(THREE.Line.prototype);THREE.ArrowHelper=function(g,f,j,i){THREE.Object3D.call(this);void 0===i&&(i=16776960);void 0===j&&(j=20);var h=new THREE.Geometry;h.vertices.push(new THREE.Vector3(0,0,0));h.vertices.push(new THREE.Vector3(0,1,0));this.line=new THREE.Line(h,new THREE.LineBasicMaterial({color:i}));this.add(this.line);h=new THREE.CylinderGeometry(0,0.05,0.25,5,1);this.cone=new THREE.Mesh(h,new THREE.MeshBasicMaterial({color:i}));this.cone.position.set(0,1,0);this.add(this.cone);f instanceof THREE.Vector3&&(this.position=f);this.setDirection(g);this.setLength(j)};THREE.ArrowHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.ArrowHelper.prototype.setDirection=function(d){var c=(new THREE.Vector3(0,1,0)).crossSelf(d),d=Math.acos((new THREE.Vector3(0,1,0)).dot(d.clone().normalize()));this.matrix=(new THREE.Matrix4).makeRotationAxis(c.normalize(),d);this.rotation.setEulerFromRotationMatrix(this.matrix,this.eulerOrder)};THREE.ArrowHelper.prototype.setLength=function(b){this.scale.set(b,b,b)};THREE.ArrowHelper.prototype.setColor=function(b){this.line.material.color.setHex(b);this.cone.material.color.setHex(b)};THREE.CameraHelper=function(f){function e(i,c,j){h(i,j);h(c,j)}function h(d,c){g.geometry.vertices.push(new THREE.Vector3);g.geometry.colors.push(new THREE.Color(c));void 0===g.pointMap[d]&&(g.pointMap[d]=[]);g.pointMap[d].push(g.geometry.vertices.length-1)}THREE.Line.call(this);var g=this;this.geometry=new THREE.Geometry;this.material=new THREE.LineBasicMaterial({color:16777215,vertexColors:THREE.FaceColors});this.type=THREE.LinePieces;this.matrixWorld=f.matrixWorld;this.matrixAutoUpdate=!1;this.pointMap={};e("n1","n2",16755200);e("n2","n4",16755200);e("n4","n3",16755200);e("n3","n1",16755200);e("f1","f2",16755200);e("f2","f4",16755200);e("f4","f3",16755200);e("f3","f1",16755200);e("n1","f1",16755200);e("n2","f2",16755200);e("n3","f3",16755200);e("n4","f4",16755200);e("p","n1",16711680);e("p","n2",16711680);e("p","n3",16711680);e("p","n4",16711680);e("u1","u2",43775);e("u2","u3",43775);e("u3","u1",43775);e("c","t",16777215);e("p","c",3355443);e("cn1","cn2",3355443);e("cn3","cn4",3355443);e("cf1","cf2",3355443);e("cf3","cf4",3355443);this.camera=f;this.update(f)};THREE.CameraHelper.prototype=Object.create(THREE.Line.prototype);THREE.CameraHelper.prototype.update=function(){function d(b,i,h,g){THREE.CameraHelper.__v.set(i,h,g);THREE.CameraHelper.__projector.unprojectVector(THREE.CameraHelper.__v,THREE.CameraHelper.__c);b=c.pointMap[b];if(void 0!==b){i=0;for(h=b.length;i<h;i++){c.geometry.vertices[b[i]].copy(THREE.CameraHelper.__v)}}}var c=this;THREE.CameraHelper.__c.projectionMatrix.copy(this.camera.projectionMatrix);d("c",0,0,-1);d("t",0,0,1);d("n1",-1,-1,-1);d("n2",1,-1,-1);d("n3",-1,1,-1);d("n4",1,1,-1);d("f1",-1,-1,1);d("f2",1,-1,1);d("f3",-1,1,1);d("f4",1,1,1);d("u1",0.7,1.1,-1);d("u2",-0.7,1.1,-1);d("u3",0,2,-1);d("cf1",-1,0,1);d("cf2",1,0,1);d("cf3",0,-1,1);d("cf4",0,1,1);d("cn1",-1,0,-1);d("cn2",1,0,-1);d("cn3",0,-1,-1);d("cn4",0,1,-1);this.geometry.verticesNeedUpdate=!0};THREE.CameraHelper.__projector=new THREE.Projector;THREE.CameraHelper.__v=new THREE.Vector3;THREE.CameraHelper.__c=new THREE.Camera;THREE.DirectionalLightHelper=function(j,i,p){THREE.Object3D.call(this);this.light=j;this.position=j.position;this.direction=new THREE.Vector3;this.direction.sub(j.target.position,j.position);this.color=j.color.clone();var o=THREE.Math.clamp(j.intensity,0,1);this.color.r*=o;this.color.g*=o;this.color.b*=o;var o=this.color.getHex(),n=new THREE.SphereGeometry(i,16,8),m=new THREE.AsteriskGeometry(1.25*i,2.25*i),l=new THREE.MeshBasicMaterial({color:o,fog:!1}),k=new THREE.LineBasicMaterial({color:o,fog:!1});this.lightArrow=new THREE.ArrowHelper(this.direction,null,p,o);this.lightSphere=new THREE.Mesh(n,l);this.lightArrow.cone.material.fog=!1;this.lightArrow.line.material.fog=!1;this.lightRays=new THREE.Line(m,k,THREE.LinePieces);this.add(this.lightArrow);this.add(this.lightSphere);this.add(this.lightRays);this.lightSphere.properties.isGizmo=!0;this.lightSphere.properties.gizmoSubject=j;this.lightSphere.properties.gizmoRoot=this;this.targetSphere=null;j.target.properties.targetInverse&&(i=new THREE.SphereGeometry(i,8,4),p=new THREE.MeshBasicMaterial({color:o,wireframe:!0,fog:!1}),this.targetSphere=new THREE.Mesh(i,p),this.targetSphere.position=j.target.position,this.targetSphere.properties.isGizmo=!0,this.targetSphere.properties.gizmoSubject=j.target,this.targetSphere.properties.gizmoRoot=this.targetSphere,j=new THREE.LineDashedMaterial({color:o,dashSize:4,gapSize:4,opacity:0.75,transparent:!0,fog:!1}),o=new THREE.Geometry,o.vertices.push(this.position.clone()),o.vertices.push(this.targetSphere.position.clone()),o.computeLineDistances(),this.targetLine=new THREE.Line(o,j),this.targetLine.properties.isGizmo=!0);this.properties.isGizmo=!0};THREE.DirectionalLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.DirectionalLightHelper.prototype.update=function(){this.direction.sub(this.light.target.position,this.light.position);this.lightArrow.setDirection(this.direction);this.color.copy(this.light.color);var b=THREE.Math.clamp(this.light.intensity,0,1);this.color.r*=b;this.color.g*=b;this.color.b*=b;this.lightArrow.setColor(this.color.getHex());this.lightSphere.material.color.copy(this.color);this.lightRays.material.color.copy(this.color);this.targetSphere.material.color.copy(this.color);this.targetLine.material.color.copy(this.color);this.targetLine.geometry.vertices[0].copy(this.light.position);this.targetLine.geometry.vertices[1].copy(this.light.target.position);this.targetLine.geometry.computeLineDistances();this.targetLine.geometry.verticesNeedUpdate=!0};THREE.HemisphereLightHelper=function(v,u,t){THREE.Object3D.call(this);this.light=v;this.position=v.position;var s=THREE.Math.clamp(v.intensity,0,1);this.color=v.color.clone();this.color.r*=s;this.color.g*=s;this.color.b*=s;var r=this.color.getHex();this.groundColor=v.groundColor.clone();this.groundColor.r*=s;this.groundColor.g*=s;this.groundColor.b*=s;for(var s=this.groundColor.getHex(),q=new THREE.SphereGeometry(u,16,8,0,2*Math.PI,0,0.5*Math.PI),p=new THREE.SphereGeometry(u,16,8,0,2*Math.PI,0.5*Math.PI,Math.PI),o=new THREE.MeshBasicMaterial({color:r,fog:!1}),m=new THREE.MeshBasicMaterial({color:s,fog:!1}),l=0,j=q.faces.length;l<j;l++){q.faces[l].materialIndex=0}l=0;for(j=p.faces.length;l<j;l++){p.faces[l].materialIndex=1}THREE.GeometryUtils.merge(q,p);this.lightSphere=new THREE.Mesh(q,new THREE.MeshFaceMaterial([o,m]));this.lightArrow=new THREE.ArrowHelper(new THREE.Vector3(0,1,0),new THREE.Vector3(0,1.1*(u+t),0),t,r);this.lightArrow.rotation.x=Math.PI;this.lightArrowGround=new THREE.ArrowHelper(new THREE.Vector3(0,1,0),new THREE.Vector3(0,-1.1*(u+t),0),t,s);u=new THREE.Object3D;u.rotation.x=0.5*-Math.PI;u.add(this.lightSphere);u.add(this.lightArrow);u.add(this.lightArrowGround);this.add(u);this.lightSphere.properties.isGizmo=!0;this.lightSphere.properties.gizmoSubject=v;this.lightSphere.properties.gizmoRoot=this;this.properties.isGizmo=!0;this.target=new THREE.Vector3;this.lookAt(this.target)};THREE.HemisphereLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.HemisphereLightHelper.prototype.update=function(){var b=THREE.Math.clamp(this.light.intensity,0,1);this.color.copy(this.light.color);this.groundColor.copy(this.light.groundColor);this.color.r*=b;this.color.g*=b;this.color.b*=b;this.groundColor.r*=b;this.groundColor.g*=b;this.groundColor.b*=b;this.lightSphere.material.materials[0].color.copy(this.color);this.lightSphere.material.materials[1].color.copy(this.groundColor);this.lightArrow.setColor(this.color.getHex());this.lightArrowGround.setColor(this.groundColor.getHex());this.lookAt(this.target)};THREE.PointLightHelper=function(j,i){THREE.Object3D.call(this);this.light=j;this.position=j.position;this.color=j.color.clone();var p=THREE.Math.clamp(j.intensity,0,1);this.color.r*=p;this.color.g*=p;this.color.b*=p;var o=this.color.getHex(),p=new THREE.SphereGeometry(i,16,8),n=new THREE.AsteriskGeometry(1.25*i,2.25*i),m=new THREE.IcosahedronGeometry(1,2),l=new THREE.MeshBasicMaterial({color:o,fog:!1}),k=new THREE.LineBasicMaterial({color:o,fog:!1}),o=new THREE.MeshBasicMaterial({color:o,fog:!1,wireframe:!0,opacity:0.1,transparent:!0});this.lightSphere=new THREE.Mesh(p,l);this.lightRays=new THREE.Line(n,k,THREE.LinePieces);this.lightDistance=new THREE.Mesh(m,o);p=j.distance;0===p?this.lightDistance.visible=!1:this.lightDistance.scale.set(p,p,p);this.add(this.lightSphere);this.add(this.lightRays);this.add(this.lightDistance);this.lightSphere.properties.isGizmo=!0;this.lightSphere.properties.gizmoSubject=j;this.lightSphere.properties.gizmoRoot=this;this.properties.isGizmo=!0};THREE.PointLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.PointLightHelper.prototype.update=function(){this.color.copy(this.light.color);var b=THREE.Math.clamp(this.light.intensity,0,1);this.color.r*=b;this.color.g*=b;this.color.b*=b;this.lightSphere.material.color.copy(this.color);this.lightRays.material.color.copy(this.color);this.lightDistance.material.color.copy(this.color);b=this.light.distance;0===b?this.lightDistance.visible=!1:(this.lightDistance.visible=!0,this.lightDistance.scale.set(b,b,b))};THREE.SpotLightHelper=function(t,s,r){THREE.Object3D.call(this);this.light=t;this.position=t.position;this.direction=new THREE.Vector3;this.direction.sub(t.target.position,t.position);this.color=t.color.clone();var q=THREE.Math.clamp(t.intensity,0,1);this.color.r*=q;this.color.g*=q;this.color.b*=q;var q=this.color.getHex(),p=new THREE.SphereGeometry(s,16,8),o=new THREE.AsteriskGeometry(1.25*s,2.25*s),n=new THREE.CylinderGeometry(0.0001,1,1,8,1,!0),m=new THREE.Matrix4;m.rotateX(-Math.PI/2);m.translate(new THREE.Vector3(0,-0.5,0));n.applyMatrix(m);var l=new THREE.MeshBasicMaterial({color:q,fog:!1}),m=new THREE.LineBasicMaterial({color:q,fog:!1}),j=new THREE.MeshBasicMaterial({color:q,fog:!1,wireframe:!0,opacity:0.3,transparent:!0});this.lightArrow=new THREE.ArrowHelper(this.direction,null,r,q);this.lightSphere=new THREE.Mesh(p,l);this.lightCone=new THREE.Mesh(n,j);r=t.distance?t.distance:10000;p=2*r*Math.tan(0.5*t.angle);this.lightCone.scale.set(p,p,r);this.lightArrow.cone.material.fog=!1;this.lightArrow.line.material.fog=!1;this.lightRays=new THREE.Line(o,m,THREE.LinePieces);this.gyroscope=new THREE.Gyroscope;this.gyroscope.add(this.lightArrow);this.gyroscope.add(this.lightSphere);this.gyroscope.add(this.lightRays);this.add(this.gyroscope);this.add(this.lightCone);this.lookAt(t.target.position);this.lightSphere.properties.isGizmo=!0;this.lightSphere.properties.gizmoSubject=t;this.lightSphere.properties.gizmoRoot=this;this.targetSphere=null;t.target.properties.targetInverse&&(s=new THREE.SphereGeometry(s,8,4),o=new THREE.MeshBasicMaterial({color:q,wireframe:!0,fog:!1}),this.targetSphere=new THREE.Mesh(s,o),this.targetSphere.position=t.target.position,this.targetSphere.properties.isGizmo=!0,this.targetSphere.properties.gizmoSubject=t.target,this.targetSphere.properties.gizmoRoot=this.targetSphere,t=new THREE.LineDashedMaterial({color:q,dashSize:4,gapSize:4,opacity:0.75,transparent:!0,fog:!1}),q=new THREE.Geometry,q.vertices.push(this.position.clone()),q.vertices.push(this.targetSphere.position.clone()),q.computeLineDistances(),this.targetLine=new THREE.Line(q,t),this.targetLine.properties.isGizmo=!0);this.properties.isGizmo=!0};THREE.SpotLightHelper.prototype=Object.create(THREE.Object3D.prototype);THREE.SpotLightHelper.prototype.update=function(){this.direction.sub(this.light.target.position,this.light.position);this.lightArrow.setDirection(this.direction);this.lookAt(this.light.target.position);var d=this.light.distance?this.light.distance:10000,c=2*d*Math.tan(0.5*this.light.angle);this.lightCone.scale.set(c,c,d);this.color.copy(this.light.color);d=THREE.Math.clamp(this.light.intensity,0,1);this.color.r*=d;this.color.g*=d;this.color.b*=d;this.lightArrow.setColor(this.color.getHex());this.lightSphere.material.color.copy(this.color);this.lightRays.material.color.copy(this.color);this.lightCone.material.color.copy(this.color);this.targetSphere.material.color.copy(this.color);this.targetLine.material.color.copy(this.color);this.targetLine.geometry.vertices[0].copy(this.light.position);this.targetLine.geometry.vertices[1].copy(this.light.target.position);this.targetLine.geometry.computeLineDistances();this.targetLine.geometry.verticesNeedUpdate=!0};THREE.ImmediateRenderObject=function(){THREE.Object3D.call(this);this.render=function(){}};THREE.ImmediateRenderObject.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare=function(g,f,j,i,h){THREE.Object3D.call(this);this.lensFlares=[];this.positionScreen=new THREE.Vector3;this.customUpdateCallback=void 0;void 0!==g&&this.add(g,f,j,i,h)};THREE.LensFlare.prototype=Object.create(THREE.Object3D.prototype);THREE.LensFlare.prototype.add=function(h,g,l,k,j,i){void 0===g&&(g=-1);void 0===l&&(l=0);void 0===i&&(i=1);void 0===j&&(j=new THREE.Color(16777215));void 0===k&&(k=THREE.NormalBlending);l=Math.min(l,Math.max(0,l));this.lensFlares.push({texture:h,size:g,distance:l,x:0,y:0,z:0,scale:1,rotation:1,opacity:i,color:j,blending:k})};THREE.LensFlare.prototype.updateLensFlares=function(){var g,f=this.lensFlares.length,j,i=2*-this.positionScreen.x,h=2*-this.positionScreen.y;for(g=0;g<f;g++){j=this.lensFlares[g],j.x=this.positionScreen.x+i*j.distance,j.y=this.positionScreen.y+h*j.distance,j.wantedRotation=0.25*j.x*Math.PI,j.rotation+=0.25*(j.wantedRotation-j.rotation)}};THREE.MorphBlendMesh=function(e,d){THREE.Mesh.call(this,e,d);this.animationsMap={};this.animationsList=[];var f=this.geometry.morphTargets.length;this.createAnimation("__default",0,f-1,f/1);this.setAnimationWeight("__default",1)};THREE.MorphBlendMesh.prototype=Object.create(THREE.Mesh.prototype);THREE.MorphBlendMesh.prototype.createAnimation=function(f,e,h,g){e={startFrame:e,endFrame:h,length:h-e+1,fps:g,duration:(h-e)/g,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[f]=e;this.animationsList.push(e)};THREE.MorphBlendMesh.prototype.autoCreateAnimations=function(r){for(var q=/([a-z]+)(\d+)/,p,o={},n=this.geometry,m=0,l=n.morphTargets.length;m<l;m++){var k=n.morphTargets[m].name.match(q);if(k&&1<k.length){var j=k[1];o[j]||(o[j]={start:Infinity,end:-Infinity});k=o[j];m<k.start&&(k.start=m);m>k.end&&(k.end=m);p||(p=j)}}for(j in o){k=o[j],this.createAnimation(j,k.start,k.end,r)}this.firstAnimation=p};THREE.MorphBlendMesh.prototype.setAnimationDirectionForward=function(b){if(b=this.animationsMap[b]){b.direction=1,b.directionBackwards=!1}};THREE.MorphBlendMesh.prototype.setAnimationDirectionBackward=function(b){if(b=this.animationsMap[b]){b.direction=-1,b.directionBackwards=!0}};THREE.MorphBlendMesh.prototype.setAnimationFPS=function(e,d){var f=this.animationsMap[e];f&&(f.fps=d,f.duration=(f.end-f.start)/f.fps)};THREE.MorphBlendMesh.prototype.setAnimationDuration=function(e,d){var f=this.animationsMap[e];f&&(f.duration=d,f.fps=(f.end-f.start)/f.duration)};THREE.MorphBlendMesh.prototype.setAnimationWeight=function(e,d){var f=this.animationsMap[e];f&&(f.weight=d)};THREE.MorphBlendMesh.prototype.setAnimationTime=function(e,d){var f=this.animationsMap[e];f&&(f.time=d)};THREE.MorphBlendMesh.prototype.getAnimationTime=function(d){var c=0;if(d=this.animationsMap[d]){c=d.time}return c};THREE.MorphBlendMesh.prototype.getAnimationDuration=function(d){var c=-1;if(d=this.animationsMap[d]){c=d.duration}return c};THREE.MorphBlendMesh.prototype.playAnimation=function(d){var c=this.animationsMap[d];c?(c.time=0,c.active=!0):console.warn("animation["+d+"] undefined")};THREE.MorphBlendMesh.prototype.stopAnimation=function(b){if(b=this.animationsMap[b]){b.active=!1}};THREE.MorphBlendMesh.prototype.update=function(i){for(var h=0,n=this.animationsList.length;h<n;h++){var m=this.animationsList[h];if(m.active){var l=m.duration/m.length;m.time+=m.direction*i;if(m.mirroredLoop){if(m.time>m.duration||0>m.time){m.direction*=-1,m.time>m.duration&&(m.time=m.duration,m.directionBackwards=!0),0>m.time&&(m.time=0,m.directionBackwards=!1)}}else{m.time%=m.duration,0>m.time&&(m.time+=m.duration)}var k=m.startFrame+THREE.Math.clamp(Math.floor(m.time/l),0,m.length-1),j=m.weight;k!==m.currentFrame&&(this.morphTargetInfluences[m.lastFrame]=0,this.morphTargetInfluences[m.currentFrame]=1*j,this.morphTargetInfluences[k]=0,m.lastFrame=m.currentFrame,m.currentFrame=k);l=m.time%l/l;m.directionBackwards&&(l=1-l);this.morphTargetInfluences[m.currentFrame]=l*j;this.morphTargetInfluences[m.lastFrame]=(1-l)*j}}};THREE.LensFlarePlugin=function(){function z(b){var h=y.createProgram(),g=y.createShader(y.FRAGMENT_SHADER),f=y.createShader(y.VERTEX_SHADER);y.shaderSource(g,b.fragmentShader);y.shaderSource(f,b.vertexShader);y.compileShader(g);y.compileShader(f);y.attachShader(h,g);y.attachShader(h,f);y.linkProgram(h);return h}var y,x,w,v,u,t,s,r,q,l,j,o;this.init=function(a){y=a.context;x=a;w=new Float32Array(16);v=new Uint16Array(6);a=0;w[a++]=-1;w[a++]=-1;w[a++]=0;w[a++]=0;w[a++]=1;w[a++]=-1;w[a++]=1;w[a++]=0;w[a++]=1;w[a++]=1;w[a++]=1;w[a++]=1;w[a++]=-1;w[a++]=1;w[a++]=0;w[a++]=1;a=0;v[a++]=0;v[a++]=1;v[a++]=2;v[a++]=0;v[a++]=2;v[a++]=3;u=y.createBuffer();t=y.createBuffer();y.bindBuffer(y.ARRAY_BUFFER,u);y.bufferData(y.ARRAY_BUFFER,w,y.STATIC_DRAW);y.bindBuffer(y.ELEMENT_ARRAY_BUFFER,t);y.bufferData(y.ELEMENT_ARRAY_BUFFER,v,y.STATIC_DRAW);s=y.createTexture();r=y.createTexture();y.bindTexture(y.TEXTURE_2D,s);y.texImage2D(y.TEXTURE_2D,0,y.RGB,16,16,0,y.RGB,y.UNSIGNED_BYTE,null);y.texParameteri(y.TEXTURE_2D,y.TEXTURE_WRAP_S,y.CLAMP_TO_EDGE);y.texParameteri(y.TEXTURE_2D,y.TEXTURE_WRAP_T,y.CLAMP_TO_EDGE);y.texParameteri(y.TEXTURE_2D,y.TEXTURE_MAG_FILTER,y.NEAREST);y.texParameteri(y.TEXTURE_2D,y.TEXTURE_MIN_FILTER,y.NEAREST);y.bindTexture(y.TEXTURE_2D,r);y.texImage2D(y.TEXTURE_2D,0,y.RGBA,16,16,0,y.RGBA,y.UNSIGNED_BYTE,null);y.texParameteri(y.TEXTURE_2D,y.TEXTURE_WRAP_S,y.CLAMP_TO_EDGE);y.texParameteri(y.TEXTURE_2D,y.TEXTURE_WRAP_T,y.CLAMP_TO_EDGE);y.texParameteri(y.TEXTURE_2D,y.TEXTURE_MAG_FILTER,y.NEAREST);y.texParameteri(y.TEXTURE_2D,y.TEXTURE_MIN_FILTER,y.NEAREST);0>=y.getParameter(y.MAX_VERTEX_TEXTURE_IMAGE_UNITS)?(q=!1,l=z(THREE.ShaderFlares.lensFlare)):(q=!0,l=z(THREE.ShaderFlares.lensFlareVertexTexture));j={};o={};j.vertex=y.getAttribLocation(l,"position");j.uv=y.getAttribLocation(l,"uv");o.renderType=y.getUniformLocation(l,"renderType");o.map=y.getUniformLocation(l,"map");o.occlusionMap=y.getUniformLocation(l,"occlusionMap");o.opacity=y.getUniformLocation(l,"opacity");o.color=y.getUniformLocation(l,"color");o.scale=y.getUniformLocation(l,"scale");o.rotation=y.getUniformLocation(l,"rotation");o.screenPosition=y.getUniformLocation(l,"screenPosition")};this.render=function(R,Q,P,N){var R=R.__webglFlares,p=R.length;if(p){var M=new THREE.Vector3,i=N/P,E=0.5*P,n=0.5*N,K=16/N,O=new THREE.Vector2(K*i,K),f=new THREE.Vector3(1,1,0),k=new THREE.Vector2(1,1),m=o,K=j;y.useProgram(l);y.enableVertexAttribArray(j.vertex);y.enableVertexAttribArray(j.uv);y.uniform1i(m.occlusionMap,0);y.uniform1i(m.map,1);y.bindBuffer(y.ARRAY_BUFFER,u);y.vertexAttribPointer(K.vertex,2,y.FLOAT,!1,16,0);y.vertexAttribPointer(K.uv,2,y.FLOAT,!1,16,8);y.bindBuffer(y.ELEMENT_ARRAY_BUFFER,t);y.disable(y.CULL_FACE);y.depthMask(!1);var h,b,J,c,g;for(h=0;h<p;h++){if(K=16/N,O.set(K*i,K),c=R[h],M.set(c.matrixWorld.elements[12],c.matrixWorld.elements[13],c.matrixWorld.elements[14]),Q.matrixWorldInverse.multiplyVector3(M),Q.projectionMatrix.multiplyVector3(M),f.copy(M),k.x=f.x*E+E,k.y=f.y*n+n,q||0<k.x&&k.x<P&&0<k.y&&k.y<N){y.activeTexture(y.TEXTURE1);y.bindTexture(y.TEXTURE_2D,s);y.copyTexImage2D(y.TEXTURE_2D,0,y.RGB,k.x-8,k.y-8,16,16,0);y.uniform1i(m.renderType,0);y.uniform2f(m.scale,O.x,O.y);y.uniform3f(m.screenPosition,f.x,f.y,f.z);y.disable(y.BLEND);y.enable(y.DEPTH_TEST);y.drawElements(y.TRIANGLES,6,y.UNSIGNED_SHORT,0);y.activeTexture(y.TEXTURE0);y.bindTexture(y.TEXTURE_2D,r);y.copyTexImage2D(y.TEXTURE_2D,0,y.RGBA,k.x-8,k.y-8,16,16,0);y.uniform1i(m.renderType,1);y.disable(y.DEPTH_TEST);y.activeTexture(y.TEXTURE1);y.bindTexture(y.TEXTURE_2D,s);y.drawElements(y.TRIANGLES,6,y.UNSIGNED_SHORT,0);c.positionScreen.copy(f);c.customUpdateCallback?c.customUpdateCallback(c):c.updateLensFlares();y.uniform1i(m.renderType,2);y.enable(y.BLEND);b=0;for(J=c.lensFlares.length;b<J;b++){g=c.lensFlares[b],0.001<g.opacity&&0.001<g.scale&&(f.x=g.x,f.y=g.y,f.z=g.z,K=g.size*g.scale/N,O.x=K*i,O.y=K,y.uniform3f(m.screenPosition,f.x,f.y,f.z),y.uniform2f(m.scale,O.x,O.y),y.uniform1f(m.rotation,g.rotation),y.uniform1f(m.opacity,g.opacity),y.uniform3f(m.color,g.color.r,g.color.g,g.color.b),x.setBlending(g.blending,g.blendEquation,g.blendSrc,g.blendDst),x.setTexture(g.texture,1),y.drawElements(y.TRIANGLES,6,y.UNSIGNED_SHORT,0))}}}y.enable(y.CULL_FACE);y.enable(y.DEPTH_TEST);y.depthMask(!0)}}};THREE.ShadowMapPlugin=function(){var t,s,r,q,p,o,n=new THREE.Frustum,m=new THREE.Matrix4,l=new THREE.Vector3,j=new THREE.Vector3;this.init=function(b){t=b.context;s=b;var b=THREE.ShaderLib.depthRGBA,a=THREE.UniformsUtils.clone(b.uniforms);r=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a});q=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a,morphTargets:!0});p=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a,skinning:!0});o=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a,morphTargets:!0,skinning:!0});r._shadowPass=!0;q._shadowPass=!0;p._shadowPass=!0;o._shadowPass=!0};this.render=function(b,d){s.shadowMapEnabled&&s.shadowMapAutoUpdate&&this.update(b,d)};this.update=function(g,e){var h,a,z,i,c,v,d,k,y,w=[];i=0;t.clearColor(1,1,1,1);t.disable(t.BLEND);t.enable(t.CULL_FACE);t.frontFace(t.CCW);s.shadowMapCullFace===THREE.CullFaceFront?t.cullFace(t.FRONT):t.cullFace(t.BACK);s.setDepthTest(!0);h=0;for(a=g.__lights.length;h<a;h++){if(z=g.__lights[h],z.castShadow){if(z instanceof THREE.DirectionalLight&&z.shadowCascade){for(c=0;c<z.shadowCascadeCount;c++){var b;if(z.shadowCascadeArray[c]){b=z.shadowCascadeArray[c]}else{y=z;d=c;b=new THREE.DirectionalLight;b.isVirtual=!0;b.onlyShadow=!0;b.castShadow=!0;b.shadowCameraNear=y.shadowCameraNear;b.shadowCameraFar=y.shadowCameraFar;b.shadowCameraLeft=y.shadowCameraLeft;b.shadowCameraRight=y.shadowCameraRight;b.shadowCameraBottom=y.shadowCameraBottom;b.shadowCameraTop=y.shadowCameraTop;b.shadowCameraVisible=y.shadowCameraVisible;b.shadowDarkness=y.shadowDarkness;b.shadowBias=y.shadowCascadeBias[d];b.shadowMapWidth=y.shadowCascadeWidth[d];b.shadowMapHeight=y.shadowCascadeHeight[d];b.pointsWorld=[];b.pointsFrustum=[];k=b.pointsWorld;v=b.pointsFrustum;for(var f=0;8>f;f++){k[f]=new THREE.Vector3,v[f]=new THREE.Vector3}k=y.shadowCascadeNearZ[d];y=y.shadowCascadeFarZ[d];v[0].set(-1,-1,k);v[1].set(1,-1,k);v[2].set(-1,1,k);v[3].set(1,1,k);v[4].set(-1,-1,y);v[5].set(1,-1,y);v[6].set(-1,1,y);v[7].set(1,1,y);b.originalCamera=e;v=new THREE.Gyroscope;v.position=z.shadowCascadeOffset;v.add(b);v.add(b.target);e.add(v);z.shadowCascadeArray[c]=b;console.log("Created virtualLight",b)}d=z;k=c;y=d.shadowCascadeArray[k];y.position.copy(d.position);y.target.position.copy(d.target.position);y.lookAt(y.target);y.shadowCameraVisible=d.shadowCameraVisible;y.shadowDarkness=d.shadowDarkness;y.shadowBias=d.shadowCascadeBias[k];v=d.shadowCascadeNearZ[k];d=d.shadowCascadeFarZ[k];y=y.pointsFrustum;y[0].z=v;y[1].z=v;y[2].z=v;y[3].z=v;y[4].z=d;y[5].z=d;y[6].z=d;y[7].z=d;w[i]=b;i++}}else{w[i]=z,i++}}}h=0;for(a=w.length;h<a;h++){z=w[h];z.shadowMap||(c=THREE.LinearFilter,s.shadowMapType===THREE.PCFSoftShadowMap&&(c=THREE.NearestFilter),z.shadowMap=new THREE.WebGLRenderTarget(z.shadowMapWidth,z.shadowMapHeight,{minFilter:c,magFilter:c,format:THREE.RGBAFormat}),z.shadowMapSize=new THREE.Vector2(z.shadowMapWidth,z.shadowMapHeight),z.shadowMatrix=new THREE.Matrix4);if(!z.shadowCamera){if(z instanceof THREE.SpotLight){z.shadowCamera=new THREE.PerspectiveCamera(z.shadowCameraFov,z.shadowMapWidth/z.shadowMapHeight,z.shadowCameraNear,z.shadowCameraFar)}else{if(z instanceof THREE.DirectionalLight){z.shadowCamera=new THREE.OrthographicCamera(z.shadowCameraLeft,z.shadowCameraRight,z.shadowCameraTop,z.shadowCameraBottom,z.shadowCameraNear,z.shadowCameraFar)}else{console.error("Unsupported light type for shadow");continue}}g.add(z.shadowCamera);s.autoUpdateScene&&g.updateMatrixWorld()}z.shadowCameraVisible&&!z.cameraHelper&&(z.cameraHelper=new THREE.CameraHelper(z.shadowCamera),z.shadowCamera.add(z.cameraHelper));if(z.isVirtual&&b.originalCamera==e){c=e;i=z.shadowCamera;v=z.pointsFrustum;y=z.pointsWorld;l.set(Infinity,Infinity,Infinity);j.set(-Infinity,-Infinity,-Infinity);for(d=0;8>d;d++){k=y[d],k.copy(v[d]),THREE.ShadowMapPlugin.__projector.unprojectVector(k,c),i.matrixWorldInverse.multiplyVector3(k),k.x<l.x&&(l.x=k.x),k.x>j.x&&(j.x=k.x),k.y<l.y&&(l.y=k.y),k.y>j.y&&(j.y=k.y),k.z<l.z&&(l.z=k.z),k.z>j.z&&(j.z=k.z)}i.left=l.x;i.right=j.x;i.top=j.y;i.bottom=l.y;i.updateProjectionMatrix()}i=z.shadowMap;v=z.shadowMatrix;c=z.shadowCamera;c.position.copy(z.matrixWorld.getPosition());c.lookAt(z.target.matrixWorld.getPosition());c.updateMatrixWorld();c.matrixWorldInverse.getInverse(c.matrixWorld);z.cameraHelper&&(z.cameraHelper.visible=z.shadowCameraVisible);z.shadowCameraVisible&&z.cameraHelper.update();v.set(0.5,0,0,0.5,0,0.5,0,0.5,0,0,0.5,0.5,0,0,0,1);v.multiplySelf(c.projectionMatrix);v.multiplySelf(c.matrixWorldInverse);m.multiply(c.projectionMatrix,c.matrixWorldInverse);n.setFromMatrix(m);s.setRenderTarget(i);s.clear();y=g.__webglObjects;z=0;for(i=y.length;z<i;z++){if(d=y[z],v=d.object,d.render=!1,v.visible&&v.castShadow&&(!(v instanceof THREE.Mesh||v instanceof THREE.ParticleSystem)||!v.frustumCulled||n.contains(v))){v._modelViewMatrix.multiply(c.matrixWorldInverse,v.matrixWorld),d.render=!0}}z=0;for(i=y.length;z<i;z++){d=y[z],d.render&&(v=d.object,d=d.buffer,f=v.material instanceof THREE.MeshFaceMaterial?v.material.materials[0]:v.material,k=0<v.geometry.morphTargets.length&&f.morphTargets,f=v instanceof THREE.SkinnedMesh&&f.skinning,k=v.customDepthMaterial?v.customDepthMaterial:f?k?o:p:k?q:r,d instanceof THREE.BufferGeometry?s.renderBufferDirect(c,g.__lights,null,k,d,v):s.renderBuffer(c,g.__lights,null,k,d,v))}y=g.__webglObjectsImmediate;z=0;for(i=y.length;z<i;z++){d=y[z],v=d.object,v.visible&&v.castShadow&&(v._modelViewMatrix.multiply(c.matrixWorldInverse,v.matrixWorld),s.renderImmediateObject(c,g.__lights,null,r,v))}}h=s.getClearColor();a=s.getClearAlpha();t.clearColor(h.r,h.g,h.b,a);t.enable(t.BLEND);s.shadowMapCullFace===THREE.CullFaceFront&&t.cullFace(t.BACK)}};THREE.ShadowMapPlugin.__projector=new THREE.Projector;THREE.SpritePlugin=function(){function t(d,c){return d.z!==c.z?c.z-d.z:c.id-d.id}var s,r,q,p,o,n,m,l,j;this.init=function(c){s=c.context;r=c;q=new Float32Array(16);p=new Uint16Array(6);c=0;q[c++]=-1;q[c++]=-1;q[c++]=0;q[c++]=0;q[c++]=1;q[c++]=-1;q[c++]=1;q[c++]=0;q[c++]=1;q[c++]=1;q[c++]=1;q[c++]=1;q[c++]=-1;q[c++]=1;q[c++]=0;q[c++]=1;c=0;p[c++]=0;p[c++]=1;p[c++]=2;p[c++]=0;p[c++]=2;p[c++]=3;o=s.createBuffer();n=s.createBuffer();s.bindBuffer(s.ARRAY_BUFFER,o);s.bufferData(s.ARRAY_BUFFER,q,s.STATIC_DRAW);s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,n);s.bufferData(s.ELEMENT_ARRAY_BUFFER,p,s.STATIC_DRAW);var c=THREE.ShaderSprite.sprite,e=s.createProgram(),b=s.createShader(s.FRAGMENT_SHADER),d=s.createShader(s.VERTEX_SHADER);s.shaderSource(b,c.fragmentShader);s.shaderSource(d,c.vertexShader);s.compileShader(b);s.compileShader(d);s.attachShader(e,b);s.attachShader(e,d);s.linkProgram(e);m=e;l={};j={};l.position=s.getAttribLocation(m,"position");l.uv=s.getAttribLocation(m,"uv");j.uvOffset=s.getUniformLocation(m,"uvOffset");j.uvScale=s.getUniformLocation(m,"uvScale");j.rotation=s.getUniformLocation(m,"rotation");j.scale=s.getUniformLocation(m,"scale");j.alignment=s.getUniformLocation(m,"alignment");j.color=s.getUniformLocation(m,"color");j.map=s.getUniformLocation(m,"map");j.opacity=s.getUniformLocation(m,"opacity");j.useScreenCoordinates=s.getUniformLocation(m,"useScreenCoordinates");j.sizeAttenuation=s.getUniformLocation(m,"sizeAttenuation");j.screenPosition=s.getUniformLocation(m,"screenPosition");j.modelViewMatrix=s.getUniformLocation(m,"modelViewMatrix");j.projectionMatrix=s.getUniformLocation(m,"projectionMatrix");j.fogType=s.getUniformLocation(m,"fogType");j.fogDensity=s.getUniformLocation(m,"fogDensity");j.fogNear=s.getUniformLocation(m,"fogNear");j.fogFar=s.getUniformLocation(m,"fogFar");j.fogColor=s.getUniformLocation(m,"fogColor");j.alphaTest=s.getUniformLocation(m,"alphaTest")};this.render=function(v,k,h,a){var H=v.__webglSprites,i=H.length;if(i){var c=l,D=j,f=a/h,h=0.5*h,y=0.5*a;s.useProgram(m);s.enableVertexAttribArray(c.position);s.enableVertexAttribArray(c.uv);s.disable(s.CULL_FACE);s.enable(s.BLEND);s.bindBuffer(s.ARRAY_BUFFER,o);s.vertexAttribPointer(c.position,2,s.FLOAT,!1,16,0);s.vertexAttribPointer(c.uv,2,s.FLOAT,!1,16,8);s.bindBuffer(s.ELEMENT_ARRAY_BUFFER,n);s.uniformMatrix4fv(D.projectionMatrix,!1,k.projectionMatrix.elements);s.activeTexture(s.TEXTURE0);s.uniform1i(D.map,0);var G=c=0,E=v.fog;E?(s.uniform3f(D.fogColor,E.color.r,E.color.g,E.color.b),E instanceof THREE.Fog?(s.uniform1f(D.fogNear,E.near),s.uniform1f(D.fogFar,E.far),s.uniform1i(D.fogType,1),G=c=1):E instanceof THREE.FogExp2&&(s.uniform1f(D.fogDensity,E.density),s.uniform1i(D.fogType,2),G=c=2)):(s.uniform1i(D.fogType,0),G=c=0);for(var b,g,w=[],E=0;E<i;E++){b=H[E],g=b.material,b.visible&&0!==g.opacity&&(g.useScreenCoordinates?b.z=-b.position.z:(b._modelViewMatrix.multiply(k.matrixWorldInverse,b.matrixWorld),b.z=-b._modelViewMatrix.elements[14]))}H.sort(t);for(E=0;E<i;E++){b=H[E],g=b.material,b.visible&&0!==g.opacity&&(g.map&&g.map.image&&g.map.image.width)&&(s.uniform1f(D.alphaTest,g.alphaTest),!0===g.useScreenCoordinates?(s.uniform1i(D.useScreenCoordinates,1),s.uniform3f(D.screenPosition,(b.position.x*r.devicePixelRatio-h)/h,(y-b.position.y*r.devicePixelRatio)/y,Math.max(0,Math.min(1,b.position.z))),w[0]=r.devicePixelRatio,w[1]=r.devicePixelRatio):(s.uniform1i(D.useScreenCoordinates,0),s.uniform1i(D.sizeAttenuation,g.sizeAttenuation?1:0),s.uniformMatrix4fv(D.modelViewMatrix,!1,b._modelViewMatrix.elements),w[0]=1,w[1]=1),k=v.fog&&g.fog?G:0,c!==k&&(s.uniform1i(D.fogType,k),c=k),k=1/(g.scaleByViewport?a:1),w[0]*=k*f*b.scale.x,w[1]*=k*b.scale.y,s.uniform2f(D.uvScale,g.uvScale.x,g.uvScale.y),s.uniform2f(D.uvOffset,g.uvOffset.x,g.uvOffset.y),s.uniform2f(D.alignment,g.alignment.x,g.alignment.y),s.uniform1f(D.opacity,g.opacity),s.uniform3f(D.color,g.color.r,g.color.g,g.color.b),s.uniform1f(D.rotation,b.rotation),s.uniform2fv(D.scale,w),r.setBlending(g.blending,g.blendEquation,g.blendSrc,g.blendDst),r.setDepthTest(g.depthTest),r.setDepthWrite(g.depthWrite),r.setTexture(g.map,0),s.drawElements(s.TRIANGLES,6,s.UNSIGNED_SHORT,0))}s.enable(s.CULL_FACE)}}};THREE.DepthPassPlugin=function(){this.enabled=!1;this.renderTarget=null;var j,i,p,o,n,m,l=new THREE.Frustum,k=new THREE.Matrix4;this.init=function(b){j=b.context;i=b;var b=THREE.ShaderLib.depthRGBA,a=THREE.UniformsUtils.clone(b.uniforms);p=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a});o=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a,morphTargets:!0});n=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a,skinning:!0});m=new THREE.ShaderMaterial({fragmentShader:b.fragmentShader,vertexShader:b.vertexShader,uniforms:a,morphTargets:!0,skinning:!0});p._shadowPass=!0;o._shadowPass=!0;n._shadowPass=!0;m._shadowPass=!0};this.render=function(d,c){this.enabled&&this.update(d,c)};this.update=function(h,g){var d,c,e,a,t,f;j.clearColor(1,1,1,1);j.disable(j.BLEND);i.setDepthTest(!0);i.autoUpdateScene&&h.updateMatrixWorld();g.matrixWorldInverse.getInverse(g.matrixWorld);k.multiply(g.projectionMatrix,g.matrixWorldInverse);l.setFromMatrix(k);i.setRenderTarget(this.renderTarget);i.clear();f=h.__webglObjects;d=0;for(c=f.length;d<c;d++){if(e=f[d],t=e.object,e.render=!1,t.visible&&(!(t instanceof THREE.Mesh||t instanceof THREE.ParticleSystem)||!t.frustumCulled||l.contains(t))){t._modelViewMatrix.multiply(g.matrixWorldInverse,t.matrixWorld),e.render=!0}}var b;d=0;for(c=f.length;d<c;d++){if(e=f[d],e.render&&(t=e.object,e=e.buffer,!(t instanceof THREE.ParticleSystem)||t.customDepthMaterial)){(b=t.material instanceof THREE.MeshFaceMaterial?t.material.materials[0]:t.material)&&i.setMaterialFaces(t.material),a=0<t.geometry.morphTargets.length&&b.morphTargets,b=t instanceof THREE.SkinnedMesh&&b.skinning,a=t.customDepthMaterial?t.customDepthMaterial:b?a?m:n:a?o:p,e instanceof THREE.BufferGeometry?i.renderBufferDirect(g,h.__lights,null,a,e,t):i.renderBuffer(g,h.__lights,null,a,e,t)}}f=h.__webglObjectsImmediate;d=0;for(c=f.length;d<c;d++){e=f[d],t=e.object,t.visible&&(t._modelViewMatrix.multiply(g.matrixWorldInverse,t.matrixWorld),i.renderImmediateObject(g,h.__lights,null,p,t))}d=i.getClearColor();c=i.getClearAlpha();j.clearColor(d.r,d.g,d.b,c);j.enable(j.BLEND)}};THREE.ShaderFlares={lensFlareVertexTexture:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nuniform sampler2D occlusionMap;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\nvec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.1 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.9, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.9 ) ) +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ) +\ntexture2D( occlusionMap, vec2( 0.5, 0.5 ) );\nvVisibility = (       visibility.r / 9.0 ) *\n( 1.0 - visibility.g / 9.0 ) *\n(       visibility.b / 9.0 ) *\n( 1.0 - visibility.a / 9.0 );\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform sampler2D map;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvarying float vVisibility;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * vVisibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"},lensFlare:{vertexShader:"uniform vec3 screenPosition;\nuniform vec2 scale;\nuniform float rotation;\nuniform int renderType;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uv;\nvec2 pos = position;\nif( renderType == 2 ) {\npos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\npos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\n}\ngl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\n}",fragmentShader:"precision mediump float;\nuniform sampler2D map;\nuniform sampler2D occlusionMap;\nuniform float opacity;\nuniform int renderType;\nuniform vec3 color;\nvarying vec2 vUV;\nvoid main() {\nif( renderType == 0 ) {\ngl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\n} else if( renderType == 1 ) {\ngl_FragColor = texture2D( map, vUV );\n} else {\nfloat visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a +\ntexture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a +\ntexture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a +\ntexture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\nvisibility = ( 1.0 - visibility / 4.0 );\nvec4 texture = texture2D( map, vUV );\ntexture.a *= opacity * visibility;\ngl_FragColor = texture;\ngl_FragColor.rgb *= color;\n}\n}"}};THREE.ShaderSprite={sprite:{vertexShader:"uniform int useScreenCoordinates;\nuniform int sizeAttenuation;\nuniform vec3 screenPosition;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform float rotation;\nuniform vec2 scale;\nuniform vec2 alignment;\nuniform vec2 uvOffset;\nuniform vec2 uvScale;\nattribute vec2 position;\nattribute vec2 uv;\nvarying vec2 vUV;\nvoid main() {\nvUV = uvOffset + uv * uvScale;\nvec2 alignedPosition = position + alignment;\nvec2 rotatedPosition;\nrotatedPosition.x = ( cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y ) * scale.x;\nrotatedPosition.y = ( sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y ) * scale.y;\nvec4 finalPosition;\nif( useScreenCoordinates != 0 ) {\nfinalPosition = vec4( screenPosition.xy + rotatedPosition, screenPosition.z, 1.0 );\n} else {\nfinalPosition = projectionMatrix * modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\nfinalPosition.xy += rotatedPosition * ( sizeAttenuation == 1 ? 1.0 : finalPosition.z );\n}\ngl_Position = finalPosition;\n}",fragmentShader:"precision mediump float;\nuniform vec3 color;\nuniform sampler2D map;\nuniform float opacity;\nuniform int fogType;\nuniform vec3 fogColor;\nuniform float fogDensity;\nuniform float fogNear;\nuniform float fogFar;\nuniform float alphaTest;\nvarying vec2 vUV;\nvoid main() {\nvec4 texture = texture2D( map, vUV );\nif ( texture.a < alphaTest ) discard;\ngl_FragColor = vec4( color * texture.xyz, texture.a * opacity );\nif ( fogType > 0 ) {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat fogFactor = 0.0;\nif ( fogType == 1 ) {\nfogFactor = smoothstep( fogNear, fogFar, depth );\n} else {\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n}\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );\n}\n}"}};if(!window.requestAnimationFrame){window.requestAnimationFrame=(function(){return window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(b,a){window.setTimeout(b,1000/60)}})()}(function(){var f={"45e":{"28e":{Mac:{axes:{Left_Stick_X:0,Left_Stick_Y:1,Right_Stick_X:2,Right_Stick_Y:3,Left_Trigger_2:[4,-1,1],Right_Trigger_2:[5,-1,1]},buttons:{A_Button:0,B_Button:1,X_Button:2,Y_Button:3,Left_Trigger_1:4,Right_Trigger_1:5,Left_Stick_Button:6,Right_Stick_Button:7,Start_Button:8,Back_Button:9,Home_Button:10,Pad_Up:11,Pad_Down:12,Pad_Left:13,Pad_Right:14}},Win:{axes:{Left_Stick_X:0,Left_Stick_Y:1,Right_Stick_X:3,Right_Stick_Y:4,Pad_Left:[5,0,-1],Pad_Right:[5,0,1],Pad_Up:[6,0,-1],Pad_Down:[6,0,1],Left_Trigger_2:[2,0,1],Right_Trigger_2:[2,0,-1]},buttons:{A_Button:0,B_Button:1,X_Button:2,Y_Button:3,Left_Trigger_1:4,Right_Trigger_1:5,Back_Button:6,Start_Button:7,Left_Stick_Button:8,Right_Stick_Button:9}}}},"54c":{"268":{Mac:{axes:{Left_Stick_X:0,Left_Stick_Y:1,Right_Stick_X:2,Right_Stick_Y:3},buttons:{Back_Button:0,Left_Stick_Button:1,Right_Stick_Button:2,Start_Button:3,Pad_Up:4,Pad_Down:6,Pad_Right:5,Pad_Left:7,Left_Trigger_2:8,Right_Trigger_2:9,Left_Trigger_1:10,Right_Trigger_1:11,Y_Button:12,B_Button:13,A_Button:14,X_Button:15,Home_Button:16}}}},"46d":{c242:{Win:{axes:{Left_Stick_X:0,Left_Stick_Y:1,Right_Stick_Y:4,Right_Stick_X:3,Left_Trigger_2:[2,0,1],Right_Trigger_2:[2,-1,0],Pad_Left:[5,-1,0],Pad_Right:[5,0,1],Pad_Up:[6,-1,0],Pad_Down:[6,0,1]},buttons:{A_Button:0,X_Button:2,B_Button:1,Y_Button:3,Left_Trigger_1:4,Right_Trigger_1:5,Back_Button:6,Start_Button:7,Left_Stick_Button:8,Right_Stick_Button:9}}},c216:{Mac:{axes:{Left_Stick_X:1,Left_Stick_Y:2,Right_Stick_X:3,Right_Stick_Y:4,Pad_Left:[1,0,-1],Pad_Right:[1,0,1],Pad_Up:[2,0,-1],Pad_Down:[2,0,1]},buttons:{X_Button:0,A_Button:1,B_Button:2,Y_Button:3,Left_Trigger_1:4,Right_Trigger_1:5,Left_Trigger_2:6,Right_Trigger_2:7,Back_Button:8,Start_Button:9,Left_Stick_Button:10,Right_Stick_Button:11}}}},"40b":{"6533":{Mac:{axes:{Pad_Left:[0,0,-1],Pad_Right:[0,0,1],Pad_Up:[1,0,-1],Pad_Down:[1,0,1]},buttons:{A_Button:0,B_Button:1,X_Button:2,Y_Button:3}}}},Firefox:{"Fake Gamepad":{Mac:{axes:{},buttons:{A_Button:0,B_Button:1,X_Button:2,Y_Button:3,Pad_Up:4,Pad_Down:5,Pad_Left:6,Pad_Right:7}}}}};var j={axes:["Left_Stick_X","Left_Stick_Y","Right_Stick_X","Right_Stick_Y"],buttons:["A_Button","B_Button","X_Button","Y_Button","Left_Stick_Button","Right_Stick_Button","Start_Button","Back_Button","Home_Button","Pad_Up","Pad_Down","Pad_Left","Pad_Right","Left_Trigger_1","Right_Trigger_1","Left_Trigger_2","Right_Trigger_2"]};var l=["Win","Mac","Linux"];function k(){for(var m in l){if(navigator.platform.indexOf(l[m])!==-1){return l[m]}}return"Unknown"}function a(p,n,o,m,q){return m+(q-m)*((p-n)/(o-n))}function i(n,m,o,p){Object.defineProperty(o,p,{enumerable:true,get:function(){return n.axes[m.axes[p]]}})}function d(n,m,o,p){Object.defineProperty(o,p,{enumerable:true,get:function(){return 0}})}function e(o,m,n,p){Object.defineProperty(n,p,{enumerable:true,get:function(){return o.buttons[m.buttons[p]]}})}function g(p,n,o,q){var m=n.axes[q] instanceof Array;Object.defineProperty(o,q,{enumerable:true,get:function(){if(m){return a(p.axes[n.axes[q][0]],n.axes[q][1],n.axes[q][2],0,1)}else{return p.axes[n.axes[q]]}}})}function c(m,n){Object.defineProperty(m,n,{enumerable:true,get:function(){return 0}})}var h=window.Input={};var b=h.Device=function(o){if(!o){throw"You didn't pass a valid gamepad to the constructor"}var m=o,n=o.id.split("-")[0],q=o.id.split("-")[1],p=k(),r=f,s=this.axes={},t=this.buttons={};if(r&&r[n]&&r[n][q]&&r[n][q][p]){r=r[n][q][p]}else{throw"A physical device layout for "+n+"-"+q+"-"+p+" isn't available"}for(var v in j.axes){if(r.axes[j.axes[v]]!==undefined){i(m,r,s,j.axes[v])}else{if(r.buttons[j.axes[v]]!==undefined){d(m,r,s,j.axes[v])}else{c(s,j.axes[v])}}}for(var u in j.buttons){if(r.buttons[j.buttons[u]]!==undefined){e(m,r,t,j.buttons[u])}else{if(r.axes[j.buttons[u]]!==undefined){g(m,r,t,j.buttons[u])}else{c(t,j.buttons[u])}}}Object.defineProperty(this,"connected",{enumerable:true,get:function(){return m.connected}});Object.defineProperty(this,"id",{enumerable:true,get:function(){return m.id}});Object.defineProperty(this,"index",{enumerable:true,get:function(){return m.index}})}}());var UNIVERSE=UNIVERSE||{};UNIVERSE.Core3D=function(I){var j=this,p,z,N,J,L,Y,d,U,v,f,k=0,E={x:0,y:0},y={x:0,y:0},D={x:0,y:0},b={x:Math.PI*3/2,y:Math.PI/6},n={x:0,y:0},r=50000,q=Math.PI/2,P=[],c=null,m,i=1500,A=0.1,C=0.05,T=0.5,H=T-C,B=0.25,t=[];j.distanceTarget=50000;this.maxZoom=500000;this.minZoom=7000;function W(){N=new THREE.Projector();J=new THREE.WebGLRenderer({antialias:true});J.autoClear=false;J.setClearColorHex(0,0);J.setSize(L,Y);J.domElement.style.position="absolute";I.appendChild(J.domElement)}function u(){I.addEventListener("mousedown",X,false);I.addEventListener("mousewheel",O,false);I.addEventListener("DOMMouseScroll",R,false);document.addEventListener("keydown",aa,false);window.addEventListener("resize",g,false);I.addEventListener("mouseover",function(){f=true},false);I.addEventListener("mouseout",function(){f=false},false);window.addEventListener("MozGamepadConnected",K);window.addEventListener("MozGamepadDiconnected",Q)}function V(){L=I.offsetWidth||window.innerWidth;Y=I.offsetHeight||window.innerHeight;W();p=new THREE.PerspectiveCamera(30,L/Y,1,1000000);p.position.z=r;d=new THREE.Vector3();z=new THREE.Scene();u();v=new THREE.DirectionalLight(16777215,0);v.position.set(0,0,0).normalize();z.add(v);U()}function U(){requestAnimationFrame(U);F()}function F(){S(k);D.x+=(b.x-D.x)*0.1;D.y+=(b.y-D.y)*0.1;r+=(j.distanceTarget-r)*0.3;p.position.x=r*Math.sin(D.x)*Math.cos(D.y);p.position.y=r*Math.sin(D.y);p.position.z=r*Math.cos(D.x)*Math.cos(D.y);p.lookAt(z.position);d.copy(p.position);l();J.clear();J.render(z,p)}function l(){var w,ac,h,ab;for(w in P){if(P[w].scale===true){ac=P[w].shape.position;h=ac.distanceTo(p.position);ab=h/(6371*7);P[w].shape.scale.x=P[w].shape.scale.y=P[w].shape.scale.z=ab}}}function X(h){h.preventDefault();I.addEventListener("mousemove",a,false);I.addEventListener("mouseup",Z,false);I.addEventListener("mouseout",e,false);y.x=-h.clientX;y.y=h.clientY;n.x=b.x;n.y=b.y;I.style.cursor="move"}function a(h){E.x=-h.clientX;E.y=h.clientY;var w=r/(35000);b.x=n.x+(E.x-y.x)*0.005*w;b.y=n.y+(E.y-y.y)*0.005*w;b.y=b.y>q?q:b.y;b.y=b.y<-q?-q:b.y}function Z(ad){ad.preventDefault();I.removeEventListener("mousemove",a,false);I.removeEventListener("mouseup",Z,false);I.removeEventListener("mouseout",e,false);I.style.cursor="auto";var h={x:-ad.clientX,y:ad.clientY};if(h.x===y.x&&h.y===y.y){var ab=G(ad);var ae=new THREE.Vector3((ab.x/L)*2-1,-(ab.y/Y)*2+1,0.5);var w=N.pickingRay(ae.clone(),p);var ac=w.intersectObjects(z.children);if(ac.length>0){M(ac)}}}function G(ad){if(ad.offsetX!==undefined&&ad.offsetY!==undefined){return{x:ad.offsetX,y:ad.offsetY}}var ae=0;var ac=0;var w=0;var h=0;var ab=this;do{ae+=ab.offsetLeft-ab.scrollLeft;ac+=ab.offsetTop-ab.scrollTop}while(ab=ab.offsetParent);w=ad.pageX-ae;h=ad.pageY-ac;return{x:w,y:h}}function M(ab){var w,h,ac=[];for(h=0;h<ab.length;h+=1){ac.push(s(ab[h]))}for(w=0;w<t.length;w+=1){t[w](ac)}}this.addIntersectionListener=function(h){t.push(h)};function e(){I.removeEventListener("mousemove",a,false);I.removeEventListener("mouseup",Z,false);I.removeEventListener("mouseout",e,false)}function O(h){h.preventDefault();if(f){S(h.wheelDeltaY*(10))}return false}function R(h){h.preventDefault();if(f){var w=h.detail?h.detail*(-120):h.wheelDelta;S(w*(10))}return false}function aa(h){switch(h.keyCode){case 38:S(3200);h.preventDefault();break;case 40:S(-3200);h.preventDefault();break}}function g(){clearTimeout(c);c=setTimeout(function(){o()},250)}function o(){L=I.offsetWidth||window.innerWidth;Y=I.offsetHeight||window.innerHeight;p.aspect=L/Y;p.updateProjectionMatrix();J.setSize(L,Y)}function S(h){j.distanceTarget-=h;j.distanceTarget=j.distanceTarget>j.maxZoom?j.maxZoom:j.distanceTarget;j.distanceTarget=j.distanceTarget<j.minZoom?j.minZoom:j.distanceTarget}this.draw=function(ab,h,w){if(!P[ab]){if(h){z.add(h)}P[ab]={shape:h,scale:w}}};this.showObject=function(w,h){if(P[w]){if(h){z.add(P[w].shape)}else{z.remove(P[w].shape)}}};this.removeObject=function(h){if(P[h]){if(P[h].shape){z.remove(P[h].shape)}delete P[h]}};this.removeAllObjects=function(){var h;for(h in P){if(P[h].shape){z.remove(P[h].shape)}}P=[]};this.getObjectPosition=function(w){var h;if(P[w]!==undefined&&P[w].shape!==undefined){h=P[w].shape.position}return h};function s(h){var w;for(w in P){if(P[w].shape&&P[w].shape.id===h.object.id){return w}}}this.moveCameraTo=function(ab){var ac=new THREE.Vector3(),w=new THREE.Vector3(0,0,1),ae=new THREE.Vector3(0,1,0),ad=new THREE.Vector3(),af,h;ac.copy(ab);distanceTarget=ac.length();ad.copy(ac);ad.y=0;ad.normalize();ac.normalize();af=(Math.PI/2)-Math.acos(ae.dot(ac));h=Math.acos(w.dot(ad));if(ad.x<0){h=-h}b.y=isNaN(af)?0:af;b.x=isNaN(h)?0:h};this.getCameraPosition=function(){return p.position};this.addRotationToCameraTarget=function(w,h){if(w){b.x+=w}if(h){b.y+=h}};this.updateLight=function(w,h){v.position=w;v.intensity=h};window.requestAnimFrame=(function(){return window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(h){window.setTimeout(h,1000/60)}}());function K(ab){m=new Input.Device(ab.gamepad);var h=Object.keys(m.axes),w;for(w in h){console.log("Axis ["+h[w]+"] connected")}window.requestAnimFrame(x)}function Q(){}function x(){var af=new THREE.Vector3(0,0,0),ab=af.distanceTo(p.position),w=C+((ab/j.maxZoom)*H),h=m.axes.Right_Stick_X,ad=m.axes.Right_Stick_Y,ac,ae;h=h>-B&&h<B?0:h*w*-1;ad=ad>-B&&ad<B?0:ad*w;j.addRotationToCameraTarget(h,ad);ac=m.buttons.Right_Trigger_2;if(ac>A){S(ac*i)}ae=m.buttons.Left_Trigger_2;if(ae>A){S(ae*-i)}window.requestAnimFrame(x)}V();return this};UNIVERSE.GraphicsObject=function(e,a,b,c,d){this.id=e;this.modelName=a||e;this.currentLocation=b;this.update=c;this.draw=d};UNIVERSE.GraphicsObject.prototype={constructor:UNIVERSE.GraphicsObject};var UNIVERSE=UNIVERSE||{};UNIVERSE.ObjectLibrary=function(){var a=[],b=0;this.addGeometryObjectFromUrl=function(f,d,e){if(a[f]){e();return}a[f]="loading";var c=new THREE.JSONLoader();c.load(d,function(g){a[f]=g;e()})};this.getObjectById=function(f,e){var c=a[f],d;if(!c){throw"Tried to retrieve object ["+f+"] from object library but didn't exist"}else{if(c==="loading"){d=this;setTimeout(function(){d.getObjectById(f,e)},1000)}else{e(c)}}};this.setObject=function(d,c){a[d]=c}};var UNIVERSE=UNIVERSE||{};UNIVERSE.UniverseController=function(b){var c=[],e,d=b||30,a=0;function f(){var j=(new Date()).getTime(),g=j-a,h;a=j;for(h in c){c[h].update(g);c[h].draw()}e=setTimeout(function(){f()},d)}this.updateOnce=function(){var g;for(g in c){c[g].update(null);c[g].draw()}};this.addGraphicsObject=function(g){c[g.id]=g};this.removeGraphicsObject=function(g){delete c[g]};this.play=function(){clearTimeout(e);a=(new Date()).getTime();f()};this.pause=function(){clearTimeout(e)};this.removeAllGraphicsObjects=function(){c=[]};this.getGraphicsObjects=function(){return c};this.getGraphicsObjectById=function(g){return c[g]}};var UNIVERSE=UNIVERSE||{};UNIVERSE.Universe=function(c,f,b){var j=new UNIVERSE.UniverseController(f),d=new UNIVERSE.Core3D(b),o=new UNIVERSE.ObjectLibrary(),e=c,a=1,n=function(){},k=1000,g,l=this;o.setObject("default_geometry",new THREE.Geometry());o.setObject("default_material",new THREE.MeshBasicMaterial());function i(p){if(n!==null){n(p)}}function h(){j.addGraphicsObject({id:"simState",objectName:"simState",update:function(p){if(p!==null){e.setTime(e.getTime()+a*p)}},draw:function(){}})}function m(){var p={currentUniverseTime:new Date(e)};i(p);g=setTimeout(function(){m()},k)}this.play=function(r,q,p){clearTimeout(g);if(r){e=new Date(r)}if(q){a=q}if(p){n=p}m();j.play()};this.getMinZoomDistance=function(){return d.minZoom};this.getMaxZoomDistance=function(){return d.maxZoom};this.setCurrentZoomDistance=function(p){d.distanceTarget=p};this.getCurrentZoomDistance=function(){return d.distanceTarget};this.pause=function(){clearTimeout(g);j.pause()};this.setPlaybackSpeed=function(p){a=p};this.setCurrentUniverseTime=function(p){e=new Date(p);j.updateOnce()};this.getCurrentUniverseTime=function(){return e};this.addJsonGeometryModel=function(r,p,q){if(r){o.addGeometryObjectFromUrl(r,p,q)}else{q()}};this.addObject=function(p){j.addGraphicsObject(p)};this.draw=function(r,q,p){d.draw(r,q,p)};this.unDraw=function(p){d.removeObject(p)};this.setObjectInLibrary=function(q,p){o.setObject(q,p)};this.getObjectFromLibraryById=function(q,p){o.getObjectById(q,p)};this.removeObject=function(p){j.removeGraphicsObject(p);d.removeObject(p)};this.snapToObject=function(r){var p=d.getObjectPosition(r),q;if(p){q=new THREE.Vector3();q.copy(p);q.multiplyScalar(1.4);d.moveCameraTo(q)}};this.addRotationToCamera=function(q,p){d.addRotationToCameraTarget(q,p)};this.removeAll=function(){d.removeAllObjects();j.removeAllGraphicsObjects()};this.getGraphicsObjects=function(){return j.getGraphicsObjects()};this.getGraphicsObjectById=function(p){return j.getGraphicsObjectById(p)};this.updateOnce=function(){j.updateOnce()};this.showObject=function(q,p){d.showObject(q,p)};this.updateLight=function(q,s,r,p){d.updateLight(new THREE.Vector3(q,s,r),p)};this.addIntersectionListener=function(p){d.addIntersectionListener(p)};this.setup=function(){h()};this.setup()};